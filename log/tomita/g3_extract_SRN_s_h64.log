G:g3, model:SRN sigmoid, load all data and stored hidden activations


--------------------------------------------------------------------
Begin DFA extraction with n_state:2
Done fitting takes time: 0.4010
==Minimized===

This DFA has 1 states
States: ['2']
Alphabet: set(['1', '0'])
Starting state: 2
Accepting states: []
Transition function:
	2
1 	2
0 	2
Current state: 2
Currently accepting: False

Precision: 0.0000 Recall: 0.0000 Accuracy: 0.5422 F1: 0.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:3
Done fitting takes time: 0.4873
==Minimized===

This DFA has 1 states
States: ['2']
Alphabet: set(['1', '0'])
Starting state: 2
Accepting states: []
Transition function:
	2
1 	2
0 	2
Current state: 2
Currently accepting: False

Precision: 0.0000 Recall: 0.0000 Accuracy: 0.5422 F1: 0.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:4
Done fitting takes time: 0.6361
==Minimized===

This DFA has 1 states
States: ['2']
Alphabet: set(['1', '0'])
Starting state: 2
Accepting states: ['2']
Transition function:
	2
1 	2
0 	2
Current state: 2
Currently accepting: True

Precision: 0.4578 Recall: 1.0000 Accuracy: 0.4578 F1: 0.6280


--------------------------------------------------------------------
Begin DFA extraction with n_state:5
Done fitting takes time: 0.6437
==Minimized===

This DFA has 1 states
States: ['2']
Alphabet: set(['1', '0'])
Starting state: 2
Accepting states: ['2']
Transition function:
	2
1 	2
0 	2
Current state: 2
Currently accepting: True

Precision: 0.4578 Recall: 1.0000 Accuracy: 0.4578 F1: 0.6280


--------------------------------------------------------------------
Begin DFA extraction with n_state:6
Done fitting takes time: 0.5011
==Minimized===

This DFA has 4 states
States: ['2', '6', '1', '4']
Alphabet: set(['1', '0'])
Starting state: 2
Accepting states: ['2', '6']
Transition function:
	1	2	4	6
1 	1	6	1	2
0 	1	2	6	4
Current state: 2
Currently accepting: True

Precision: 0.9005 Recall: 1.0000 Accuracy: 0.9494 F1: 0.9477


--------------------------------------------------------------------
Begin DFA extraction with n_state:7
Done fitting takes time: 0.4050
==Minimized===

This DFA has 4 states
States: ['2', '6', '1', '4']
Alphabet: set(['1', '0'])
Starting state: 2
Accepting states: ['2', '6']
Transition function:
	1	2	4	6
1 	1	6	1	2
0 	1	2	6	4
Current state: 2
Currently accepting: True

Precision: 0.9005 Recall: 1.0000 Accuracy: 0.9494 F1: 0.9477


--------------------------------------------------------------------
Begin DFA extraction with n_state:8
Done fitting takes time: 0.4599
==Minimized===

This DFA has 5 states
States: ['2', '8', '3', '1', '4']
Alphabet: set(['1', '0'])
Starting state: 2
Accepting states: ['8', '3', '2']
Transition function:
	1	2	3	4	8
1 	1	8	3	1	2
0 	1	2	4	3	4
Current state: 2
Currently accepting: True

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:9
Done fitting takes time: 0.3287
==Minimized===

This DFA has 6 states
States: ['6', '9', '8', '4', '1', '3']
Alphabet: set(['1', '0'])
Starting state: 9
Accepting states: ['9', '8', '6']
Transition function:
	1	3	4	6	8	9
1 	1	3	1	3	9	8
0 	1	4	6	3	4	9
Current state: 9
Currently accepting: True

Precision: 0.9626 Recall: 0.5971 Accuracy: 0.8049 F1: 0.7370


--------------------------------------------------------------------
Begin DFA extraction with n_state:10
Done fitting takes time: 0.2228
==Minimized===

This DFA has 6 states
States: ['6', '10', '2', '4', '1', '3']
Alphabet: set(['1', '0'])
Starting state: 2
Accepting states: ['10', '2', '6']
Transition function:
	1	10	2	3	4	6
1 	1	2	10	3	1	3
0 	1	4	2	4	6	3
Current state: 2
Currently accepting: True

Precision: 0.9626 Recall: 0.5971 Accuracy: 0.8049 F1: 0.7370


--------------------------------------------------------------------
Begin DFA extraction with n_state:11
Done fitting takes time: 0.3925
==Minimized===

This DFA has 6 states
States: ['6', '11', '2', '4', '1', '3']
Alphabet: set(['1', '0'])
Starting state: 2
Accepting states: ['11', '2', '6']
Transition function:
	1	11	2	3	4	6
1 	1	2	11	3	1	3
0 	1	4	2	4	6	3
Current state: 2
Currently accepting: True

Precision: 0.9626 Recall: 0.5971 Accuracy: 0.8049 F1: 0.7370


--------------------------------------------------------------------
Begin DFA extraction with n_state:12
Done fitting takes time: 0.2431
==Minimized===

This DFA has 6 states
States: ['6', '11', '2', '4', '12', '3']
Alphabet: set(['1', '0'])
Starting state: 2
Accepting states: ['11', '2', '6']
Transition function:
	11	12	2	3	4	6
1 	2	12	11	3	12	3
0 	4	12	2	4	6	3
Current state: 2
Currently accepting: True

Precision: 0.9626 Recall: 0.5971 Accuracy: 0.8049 F1: 0.7370


--------------------------------------------------------------------
Begin DFA extraction with n_state:13
Done fitting takes time: 0.6490
==Minimized===

This DFA has 5 states
States: ['2', '11', '3', '12', '4']
Alphabet: set(['1', '0'])
Starting state: 2
Accepting states: ['11', '3', '2']
Transition function:
	11	12	2	3	4
1 	2	12	11	3	12
0 	4	12	2	4	3
Current state: 2
Currently accepting: True

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:14
Done fitting takes time: 0.3842
==Minimized===

This DFA has 7 states
States: ['13', '11', '2', '14', '4', '12', '3']
Alphabet: set(['1', '0'])
Starting state: 14
Accepting states: ['11', '13', '2']
Transition function:
	11	12	13	14	2	3	4
1 	2	12	3	11	11	3	12
0 	4	12	3	2	2	4	13
Current state: 14
Currently accepting: False

Precision: 0.9626 Recall: 0.5971 Accuracy: 0.8049 F1: 0.7370


--------------------------------------------------------------------
Begin DFA extraction with n_state:15
Done fitting takes time: 0.2414
==Minimized===

This DFA has 7 states
States: ['13', '11', '15', '14', '4', '12', '3']
Alphabet: set(['1', '0'])
Starting state: 14
Accepting states: ['11', '13', '15']
Transition function:
	11	12	13	14	15	3	4
1 	15	12	3	11	11	3	12
0 	4	12	3	15	15	4	13
Current state: 14
Currently accepting: False

Precision: 0.9626 Recall: 0.5971 Accuracy: 0.8049 F1: 0.7370


--------------------------------------------------------------------
Begin DFA extraction with n_state:16
Done fitting takes time: 0.8002
==Minimized===

This DFA has 7 states
States: ['16', '11', '13', '15', '14', '12', '4']
Alphabet: set(['1', '0'])
Starting state: 14
Accepting states: ['11', '13', '15', '16']
Transition function:
	11	12	13	14	15	16	4
1 	15	12	13	11	11	12	12
0 	4	12	16	15	15	13	13
Current state: 14
Currently accepting: False

Precision: 0.9258 Recall: 1.0000 Accuracy: 0.9633 F1: 0.9615


--------------------------------------------------------------------
Begin DFA extraction with n_state:17
Done fitting takes time: 0.5277
==Minimized===

This DFA has 7 states
States: ['16', '11', '13', '15', '14', '12', '4']
Alphabet: set(['1', '0'])
Starting state: 14
Accepting states: ['11', '13', '15', '16']
Transition function:
	11	12	13	14	15	16	4
1 	15	12	13	11	11	12	12
0 	4	12	16	15	15	13	13
Current state: 14
Currently accepting: False

Precision: 0.9258 Recall: 1.0000 Accuracy: 0.9633 F1: 0.9615


--------------------------------------------------------------------
Begin DFA extraction with n_state:18
Done fitting takes time: 0.2600
==Minimized===

This DFA has 7 states
States: ['16', '11', '13', '15', '14', '12', '4']
Alphabet: set(['1', '0'])
Starting state: 14
Accepting states: ['11', '13', '15', '16']
Transition function:
	11	12	13	14	15	16	4
1 	15	12	13	11	11	12	12
0 	4	12	16	15	15	13	13
Current state: 14
Currently accepting: False

Precision: 0.9258 Recall: 1.0000 Accuracy: 0.9633 F1: 0.9615


--------------------------------------------------------------------
Begin DFA extraction with n_state:19
Done fitting takes time: 0.6201
==Minimized===

This DFA has 8 states
States: ['16', '15', '18', '14', '11', '13', '12', '19']
Alphabet: set(['1', '0'])
Starting state: 14
Accepting states: ['11', '13', '15', '16', '18']
Transition function:
	11	12	13	14	15	16	18	19
1 	15	12	18	11	11	12	18	12
0 	19	12	19	15	15	13	16	13
Current state: 14
Currently accepting: False

Precision: 0.9580 Recall: 1.0000 Accuracy: 0.9799 F1: 0.9785
[ 0.          0.          0.6280285   0.6280285   0.94767025  0.94767025
  1.          0.73700591  0.73700591  0.73700591  0.73700591  1.
  0.73700591  0.73700591  0.96145455  0.96145455  0.96145455  0.97853442]


[[ 0.          0.          0.6280285   0.6280285   0.94767025  0.94767025
   1.          0.73700591  0.73700591  0.73700591  0.73700591  1.
   0.73700591  0.73700591  0.96145455  0.96145455  0.96145455  0.97853442]
 [ 0.          0.          0.          0.          0.          0.01203008
   0.0803485   0.10132576  0.          0.          0.          0.
   0.18580122  0.42804218  0.          0.          0.43048052  0.00902256]
 [ 0.6280285   0.6280285   0.94767025  0.45920746  0.45920746  1.          1.
   0.45920746  0.45920746  0.45920746  0.45920746  0.85577649  1.          1.
   1.          1.          1.          1.        ]
 [ 0.          0.43092666  0.94767025  0.45920746  0.45920746  1.          1.
   1.          1.          1.          1.          1.          1.          1.
   1.          1.          1.          1.        ]
 [ 0.          0.          0.6280285   0.09341637  0.09341637  0.09341637
   0.6693462   0.48014184  0.09341637  0.85155684  0.85155684  0.85155684
   0.67180551  0.63221785  0.65069729  0.65069729  0.63463431  0.65069729]
 [ 0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.        ]
 [ 0.          0.          0.          0.10132576  0.6280285   0.6280285
   0.6280285   0.6280285   0.20910806  0.02915838  0.10125766  0.
   0.63639281  0.          0.57019064  0.20968188  0.6806407   0.629366  ]]
