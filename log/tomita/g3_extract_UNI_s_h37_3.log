G:g3, model:UNI sigmoid, load all data and stored hidden activations


--------------------------------------------------------------------
Begin DFA extraction with n_state:2
Done fitting takes time: 0.1859
==Minimized===

This DFA has 1 states
States: ['2']
Alphabet: set(['1', '0'])
Starting state: 2
Accepting states: []
Transition function:
	2
1 	2
0 	2
Current state: 2
Currently accepting: False

Precision: 0.0000 Recall: 0.0000 Accuracy: 0.5422 F1: 0.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:3
Done fitting takes time: 0.5457
==Minimized===

This DFA has 1 states
States: ['3']
Alphabet: set(['1', '0'])
Starting state: 3
Accepting states: ['3']
Transition function:
	3
1 	3
0 	3
Current state: 3
Currently accepting: True

Precision: 0.4578 Recall: 1.0000 Accuracy: 0.4578 F1: 0.6280


--------------------------------------------------------------------
Begin DFA extraction with n_state:4
Done fitting takes time: 0.6474
==Minimized===

This DFA has 1 states
States: ['3']
Alphabet: set(['1', '0'])
Starting state: 3
Accepting states: ['3']
Transition function:
	3
1 	3
0 	3
Current state: 3
Currently accepting: True

Precision: 0.4578 Recall: 1.0000 Accuracy: 0.4578 F1: 0.6280


--------------------------------------------------------------------
Begin DFA extraction with n_state:5
Done fitting takes time: 0.7164
==Minimized===

This DFA has 3 states
States: ['5', '1', '3']
Alphabet: set(['1', '0'])
Starting state: 5
Accepting states: ['5']
Transition function:
	1	3	5
1 	1	1	5
0 	1	5	3
Current state: 5
Currently accepting: True

Precision: 1.0000 Recall: 0.2980 Accuracy: 0.6787 F1: 0.4592


--------------------------------------------------------------------
Begin DFA extraction with n_state:6
Done fitting takes time: 0.4193
==Minimized===

This DFA has 4 states
States: ['3', '5', '1', '6']
Alphabet: set(['1', '0'])
Starting state: 3
Accepting states: ['3', '5']
Transition function:
	1	3	5	6
1 	1	5	3	1
0 	1	3	6	5
Current state: 3
Currently accepting: True

Precision: 0.9005 Recall: 1.0000 Accuracy: 0.9494 F1: 0.9477


--------------------------------------------------------------------
Begin DFA extraction with n_state:7
Done fitting takes time: 0.6261
==Minimized===

This DFA has 4 states
States: ['3', '5', '1', '6']
Alphabet: set(['1', '0'])
Starting state: 3
Accepting states: ['3', '5']
Transition function:
	1	3	5	6
1 	1	5	3	1
0 	1	3	6	5
Current state: 3
Currently accepting: True

Precision: 0.9005 Recall: 1.0000 Accuracy: 0.9494 F1: 0.9477


--------------------------------------------------------------------
Begin DFA extraction with n_state:8
Done fitting takes time: 0.6420
==Minimized===

This DFA has 4 states
States: ['8', '5', '1', '6']
Alphabet: set(['1', '0'])
Starting state: 8
Accepting states: ['8', '5']
Transition function:
	1	5	6	8
1 	1	8	1	5
0 	1	6	5	8
Current state: 8
Currently accepting: True

Precision: 0.9005 Recall: 1.0000 Accuracy: 0.9494 F1: 0.9477


--------------------------------------------------------------------
Begin DFA extraction with n_state:9
Done fitting takes time: 0.2181
==Minimized===

This DFA has 3 states
States: ['9', '1', '6']
Alphabet: set(['1', '0'])
Starting state: 9
Accepting states: ['9']
Transition function:
	1	6	9
1 	1	1	9
0 	1	9	6
Current state: 9
Currently accepting: True

Precision: 1.0000 Recall: 0.2980 Accuracy: 0.6787 F1: 0.4592


--------------------------------------------------------------------
Begin DFA extraction with n_state:10
Done fitting takes time: 0.2111
==Minimized===

This DFA has 3 states
States: ['9', '1', '6']
Alphabet: set(['1', '0'])
Starting state: 9
Accepting states: ['9']
Transition function:
	1	6	9
1 	1	1	9
0 	1	9	6
Current state: 9
Currently accepting: True

Precision: 1.0000 Recall: 0.2980 Accuracy: 0.6787 F1: 0.4592


--------------------------------------------------------------------
Begin DFA extraction with n_state:11
Done fitting takes time: 0.2237
==Minimized===

This DFA has 3 states
States: ['9', '1', '6']
Alphabet: set(['1', '0'])
Starting state: 9
Accepting states: ['9']
Transition function:
	1	6	9
1 	1	1	9
0 	1	9	6
Current state: 9
Currently accepting: True

Precision: 1.0000 Recall: 0.2980 Accuracy: 0.6787 F1: 0.4592


--------------------------------------------------------------------
Begin DFA extraction with n_state:12
Done fitting takes time: 0.5097
==Minimized===

This DFA has 6 states
States: ['11', '12', '5', '9', '1', '6']
Alphabet: set(['1', '0'])
Starting state: 9
Accepting states: ['11', '12', '5']
Transition function:
	1	11	12	5	6	9
1 	1	5	12	11	1	5
0 	1	11	6	6	12	11
Current state: 9
Currently accepting: False

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:13
Done fitting takes time: 0.8266
==Minimized===

This DFA has 6 states
States: ['11', '12', '5', '9', '13', '6']
Alphabet: set(['1', '0'])
Starting state: 9
Accepting states: ['11', '12', '5']
Transition function:
	11	12	13	5	6	9
1 	5	12	13	11	13	5
0 	11	6	13	6	12	11
Current state: 9
Currently accepting: False

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:14
Done fitting takes time: 0.2423
==Minimized===

This DFA has 6 states
States: ['11', '12', '5', '14', '13', '6']
Alphabet: set(['1', '0'])
Starting state: 14
Accepting states: ['11', '12', '5']
Transition function:
	11	12	13	14	5	6
1 	5	12	13	5	11	13
0 	11	6	13	11	6	12
Current state: 14
Currently accepting: False

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:15
Done fitting takes time: 0.2191
==Minimized===

This DFA has 6 states
States: ['11', '12', '5', '14', '13', '6']
Alphabet: set(['1', '0'])
Starting state: 14
Accepting states: ['11', '12', '5']
Transition function:
	11	12	13	14	5	6
1 	5	12	13	5	11	13
0 	11	6	13	11	6	12
Current state: 14
Currently accepting: False

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:16
Done fitting takes time: 0.6745
==Minimized===

This DFA has 6 states
States: ['11', '12', '5', '14', '13', '6']
Alphabet: set(['1', '0'])
Starting state: 14
Accepting states: ['11', '12', '5']
Transition function:
	11	12	13	14	5	6
1 	5	12	13	5	11	13
0 	11	6	13	11	6	12
Current state: 14
Currently accepting: False

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:17
Done fitting takes time: 0.9047
==Minimized===

This DFA has 6 states
States: ['11', '12', '5', '14', '13', '6']
Alphabet: set(['1', '0'])
Starting state: 14
Accepting states: ['11', '12', '5']
Transition function:
	11	12	13	14	5	6
1 	5	12	13	5	11	13
0 	11	6	13	11	6	12
Current state: 14
Currently accepting: False

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:18
Done fitting takes time: 0.2482
==Minimized===

This DFA has 6 states
States: ['11', '12', '5', '14', '13', '6']
Alphabet: set(['1', '0'])
Starting state: 14
Accepting states: ['11', '12', '5']
Transition function:
	11	12	13	14	5	6
1 	5	12	13	5	11	13
0 	11	6	13	11	6	12
Current state: 14
Currently accepting: False

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:19
Done fitting takes time: 0.5580
==Minimized===

This DFA has 6 states
States: ['11', '12', '5', '14', '13', '6']
Alphabet: set(['1', '0'])
Starting state: 14
Accepting states: ['11', '12', '5']
Transition function:
	11	12	13	14	5	6
1 	5	12	13	5	11	13
0 	11	6	13	11	6	12
Current state: 14
Currently accepting: False

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000
[ 0.          0.6280285   0.6280285   0.45920746  0.94767025  0.94767025
  0.94767025  0.45920746  0.45920746  0.45920746  1.          1.          1.
  1.          1.          1.          1.          1.        ]


[[ 0.          0.          0.61633466  0.6280285   0.6280285   0.6280285
   0.6280285   0.6280285   0.84526854  0.92555426  0.92555426  0.92555426
   1.          1.          1.          0.88844086  0.88844086  1.        ]
 [ 0.          0.          0.          0.          0.          0.46753247
   0.43137255  0.43137255  0.43137255  0.24758221  0.42804218  0.40141886
   0.          0.17610063  0.40661426  0.52622673  0.45951968  0.43665768]
 [ 0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.        ]
 [ 0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.        ]
 [ 0.          0.6280285   0.6280285   0.45920746  0.94767025  0.94767025
   0.94767025  0.45920746  0.45920746  0.45920746  1.          1.          1.
   1.          1.          1.          1.          1.        ]
 [ 0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.        ]
 [ 0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.        ]
 [ 0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.        ]
 [ 0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.        ]]
