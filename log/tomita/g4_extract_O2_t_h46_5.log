G:g4, model:O2 tanh, load all data and stored hidden activations


--------------------------------------------------------------------
Begin DFA extraction with n_state:2
Done fitting takes time: 0.5270
==Minimized===

This DFA has 1 states
States: ['1']
Alphabet: set(['1', '0'])
Starting state: 1
Accepting states: []
Transition function:
	1
1 	1
0 	1
Current state: 1
Currently accepting: False

Precision: 0.0000 Recall: 0.0000 Accuracy: 0.5094 F1: 0.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:3
Done fitting takes time: 0.4883
==Minimized===

This DFA has 1 states
States: ['1']
Alphabet: set(['1', '0'])
Starting state: 1
Accepting states: []
Transition function:
	1
1 	1
0 	1
Current state: 1
Currently accepting: False

Precision: 0.0000 Recall: 0.0000 Accuracy: 0.5094 F1: 0.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:4
Done fitting takes time: 0.6697
==Minimized===

This DFA has 4 states
States: ['3', '2', '1', '4']
Alphabet: set(['1', '0'])
Starting state: 1
Accepting states: ['1', '2', '4']
Transition function:
	1	2	3	4
1 	1	1	3	1
0 	4	3	3	2
Current state: 1
Currently accepting: True

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:5
Done fitting takes time: 0.9258
==Minimized===

This DFA has 4 states
States: ['3', '2', '1', '4']
Alphabet: set(['1', '0'])
Starting state: 1
Accepting states: ['1', '2', '4']
Transition function:
	1	2	3	4
1 	1	1	3	1
0 	4	3	3	2
Current state: 1
Currently accepting: True

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:6
Done fitting takes time: 0.5610
==Minimized===

This DFA has 4 states
States: ['3', '2', '1', '4']
Alphabet: set(['1', '0'])
Starting state: 1
Accepting states: ['1', '2', '4']
Transition function:
	1	2	3	4
1 	1	1	3	1
0 	4	3	3	2
Current state: 1
Currently accepting: True

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:7
Done fitting takes time: 1.0128
==Minimized===

This DFA has 4 states
States: ['3', '2', '1', '4']
Alphabet: set(['1', '0'])
Starting state: 1
Accepting states: ['1', '2', '4']
Transition function:
	1	2	3	4
1 	1	1	3	1
0 	4	3	3	2
Current state: 1
Currently accepting: True

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:8
Done fitting takes time: 0.5662
==Minimized===

This DFA has 4 states
States: ['3', '2', '1', '4']
Alphabet: set(['1', '0'])
Starting state: 1
Accepting states: ['1', '2', '4']
Transition function:
	1	2	3	4
1 	1	1	3	1
0 	4	3	3	2
Current state: 1
Currently accepting: True

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:9
Done fitting takes time: 1.0779
==Minimized===

This DFA has 4 states
States: ['3', '2', '1', '4']
Alphabet: set(['1', '0'])
Starting state: 1
Accepting states: ['1', '2', '4']
Transition function:
	1	2	3	4
1 	1	1	3	1
0 	4	3	3	2
Current state: 1
Currently accepting: True

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:10
Done fitting takes time: 1.5561
==Minimized===

This DFA has 4 states
States: ['3', '2', '10', '4']
Alphabet: set(['1', '0'])
Starting state: 10
Accepting states: ['10', '2', '4']
Transition function:
	10	2	3	4
1 	10	10	3	10
0 	4	3	3	2
Current state: 10
Currently accepting: True

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:11
Done fitting takes time: 0.7417
==Minimized===

This DFA has 4 states
States: ['3', '2', '11', '4']
Alphabet: set(['1', '0'])
Starting state: 11
Accepting states: ['11', '2', '4']
Transition function:
	11	2	3	4
1 	11	11	3	11
0 	4	3	3	2
Current state: 11
Currently accepting: True

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:12
Done fitting takes time: 0.8105
==Minimized===

This DFA has 4 states
States: ['3', '2', '11', '4']
Alphabet: set(['1', '0'])
Starting state: 11
Accepting states: ['11', '2', '4']
Transition function:
	11	2	3	4
1 	11	11	3	11
0 	4	3	3	2
Current state: 11
Currently accepting: True

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:13
Done fitting takes time: 2.1702
==Minimized===

This DFA has 5 states
States: ['2', '11', '4', '13', '3']
Alphabet: set(['1', '0'])
Starting state: 13
Accepting states: ['11', '2', '4']
Transition function:
	11	13	2	3	4
1 	11	11	11	3	11
0 	4	4	3	3	2
Current state: 13
Currently accepting: False

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:14
Done fitting takes time: 0.5856
==Minimized===

This DFA has 5 states
States: ['2', '11', '13', '14', '3']
Alphabet: set(['1', '0'])
Starting state: 14
Accepting states: ['11', '13', '2']
Transition function:
	11	13	14	2	3
1 	11	11	11	11	3
0 	13	2	13	3	3
Current state: 14
Currently accepting: False

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:15
Done fitting takes time: 0.6696
==Minimized===

This DFA has 5 states
States: ['2', '11', '13', '15', '14']
Alphabet: set(['1', '0'])
Starting state: 14
Accepting states: ['11', '13', '2']
Transition function:
	11	13	14	15	2
1 	11	11	11	15	11
0 	13	2	13	15	15
Current state: 14
Currently accepting: False

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:16
Done fitting takes time: 0.5913
==Minimized===

This DFA has 5 states
States: ['2', '11', '13', '15', '14']
Alphabet: set(['1', '0'])
Starting state: 14
Accepting states: ['11', '13', '2']
Transition function:
	11	13	14	15	2
1 	11	11	11	15	11
0 	13	2	13	15	15
Current state: 14
Currently accepting: False

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:17
Done fitting takes time: 1.1731
==Minimized===

This DFA has 5 states
States: ['2', '11', '13', '15', '14']
Alphabet: set(['1', '0'])
Starting state: 14
Accepting states: ['11', '13', '2']
Transition function:
	11	13	14	15	2
1 	11	11	11	15	11
0 	13	2	13	15	15
Current state: 14
Currently accepting: False

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:18
Done fitting takes time: 0.6217
==Minimized===

This DFA has 5 states
States: ['2', '11', '13', '15', '14']
Alphabet: set(['1', '0'])
Starting state: 14
Accepting states: ['11', '13', '2']
Transition function:
	11	13	14	15	2
1 	11	11	11	15	11
0 	13	2	13	15	15
Current state: 14
Currently accepting: False

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:19
Done fitting takes time: 0.7384
==Minimized===

This DFA has 5 states
States: ['2', '11', '13', '15', '14']
Alphabet: set(['1', '0'])
Starting state: 14
Accepting states: ['11', '13', '2']
Transition function:
	11	13	14	15	2
1 	11	11	11	15	11
0 	13	2	13	15	15
Current state: 14
Currently accepting: False

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000
[ 0.  0.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.]


[[ 0.          0.65829436  0.65829436  1.          1.          1.          1.
   1.          1.          1.          1.          1.          1.          1.
   1.          1.          1.          1.        ]
 [ 0.          0.          0.          0.          0.          0.39324383
   0.31739905  0.29637306  0.23603793  0.91968052  0.83817966  0.78806806
   0.81913388  0.82883241  0.58037814  0.8057766   0.67079536  0.69599632]
 [ 0.65829436  0.65829436  0.65829436  0.94447509  0.94447509  0.94447509
   0.94447509  1.          1.          1.          1.          1.          1.
   1.          1.          1.          1.          1.        ]
 [ 0.          0.          1.          1.          1.          1.          1.
   1.          1.          1.          1.          1.          1.          1.
   1.          1.          1.          1.        ]
 [ 0.          0.65829436  0.65829436  0.65829436  0.65829436  0.94447509
   0.94447509  1.          1.          1.          1.          1.          1.
   1.          1.          1.          1.          1.        ]
 [ 0.          0.65829436  0.65829436  1.          0.94447509  0.94447509
   0.94447509  0.94447509  0.94447509  1.          1.          1.          1.
   1.          1.          1.          1.          1.        ]
 [ 0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.        ]
 [ 0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.        ]
 [ 0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.        ]]
