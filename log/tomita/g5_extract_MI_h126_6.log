G:g5, model:MI tanh, load all data and stored hidden activations


--------------------------------------------------------------------
Begin DFA extraction with n_state:2
Done fitting takes time: 0.7606
==Minimized===

This DFA has 2 states
States: ['2', '1']
Alphabet: set(['1', '0'])
Starting state: 2
Accepting states: ['2']
Transition function:
	1	2
1 	1	1
0 	1	2
Current state: 2
Currently accepting: True

Precision: 0.7500 Recall: 0.0014 Accuracy: 0.5101 F1: 0.0029


--------------------------------------------------------------------
Begin DFA extraction with n_state:3
Done fitting takes time: 1.0993
==Minimized===

This DFA has 2 states
States: ['2', '1']
Alphabet: set(['1', '0'])
Starting state: 2
Accepting states: ['2']
Transition function:
	1	2
1 	1	1
0 	1	2
Current state: 2
Currently accepting: True

Precision: 0.7500 Recall: 0.0014 Accuracy: 0.5101 F1: 0.0029


--------------------------------------------------------------------
Begin DFA extraction with n_state:4
Done fitting takes time: 1.2390
==Minimized===

This DFA has 4 states
States: ['1', '2', '3', '4']
Alphabet: set(['1', '0'])
Starting state: 2
Accepting states: ['3', '2', '4']
Transition function:
	1	2	3	4
1 	4	4	1	1
0 	1	3	2	1
Current state: 2
Currently accepting: True

Precision: 0.4916 Recall: 0.3378 Accuracy: 0.5040 F1: 0.4005


--------------------------------------------------------------------
Begin DFA extraction with n_state:5
Done fitting takes time: 1.4476
==Minimized===

This DFA has 4 states
States: ['3', '5', '1', '4']
Alphabet: set(['1', '0'])
Starting state: 1
Accepting states: ['1', '5', '4']
Transition function:
	1	3	4	5
1 	4	5	5	3
0 	1	1	1	3
Current state: 1
Currently accepting: True

Precision: 0.4911 Recall: 0.8084 Accuracy: 0.4953 F1: 0.6110


--------------------------------------------------------------------
Begin DFA extraction with n_state:6
Done fitting takes time: 0.6467
==Minimized===

This DFA has 1 states
States: ['2']
Alphabet: set(['1', '0'])
Starting state: 2
Accepting states: []
Transition function:
	2
1 	2
0 	2
Current state: 2
Currently accepting: False

Precision: 0.0000 Recall: 0.0000 Accuracy: 0.5097 F1: 0.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:7
Done fitting takes time: 1.6097
==Minimized===

This DFA has 6 states
States: ['1', '7', '3', '2', '5', '4']
Alphabet: set(['1', '0'])
Starting state: 2
Accepting states: ['1', '5', '4', '7']
Transition function:
	1	2	3	4	5	7
1 	3	4	1	1	1	4
0 	3	2	5	7	5	5
Current state: 2
Currently accepting: False

Precision: 0.4941 Recall: 0.6785 Accuracy: 0.5018 F1: 0.5718


--------------------------------------------------------------------
Begin DFA extraction with n_state:8
Done fitting takes time: 1.7353
==Minimized===

This DFA has 2 states
States: ['6', '2']
Alphabet: set(['1', '0'])
Starting state: 2
Accepting states: ['6']
Transition function:
	2	6
1 	6	2
0 	2	2
Current state: 2
Currently accepting: False

Precision: 0.4880 Recall: 0.3364 Accuracy: 0.5015 F1: 0.3982


--------------------------------------------------------------------
Begin DFA extraction with n_state:9
Done fitting takes time: 1.4929
==Minimized===

This DFA has 8 states
States: ['1', '7', '3', '8', '4', '9', '2', '6']
Alphabet: set(['1', '0'])
Starting state: 2
Accepting states: ['1', '8', '4', '7']
Transition function:
	1	2	3	4	6	7	8	9
1 	3	6	1	1	2	4	1	4
0 	3	9	7	7	2	8	8	2
Current state: 2
Currently accepting: False

Precision: 0.4846 Recall: 0.5342 Accuracy: 0.4931 F1: 0.5082


--------------------------------------------------------------------
Begin DFA extraction with n_state:10
Done fitting takes time: 1.6895
==Minimized===

This DFA has 3 states
States: ['9', '10', '2']
Alphabet: set(['1', '0'])
Starting state: 2
Accepting states: ['10', '2']
Transition function:
	10	2	9
1 	10	10	10
0 	10	9	2
Current state: 2
Currently accepting: True

Precision: 0.4905 Recall: 1.0000 Accuracy: 0.4906 F1: 0.6581


--------------------------------------------------------------------
Begin DFA extraction with n_state:11
Done fitting takes time: 0.6789
==Minimized===

This DFA has 7 states
States: ['7', '3', '6', '5', '9', '10', '2']
Alphabet: set(['1', '0'])
Starting state: 2
Accepting states: ['10', '3', '2', '5', '6', '9']
Transition function:
	10	2	3	5	6	7	9
1 	10	10	7	3	5	3	3
0 	5	9	7	6	5	6	5
Current state: 2
Currently accepting: True

Precision: 0.4938 Recall: 0.7162 Accuracy: 0.5008 F1: 0.5846


--------------------------------------------------------------------
Begin DFA extraction with n_state:12
Done fitting takes time: 2.1210
==Minimized===

This DFA has 3 states
States: ['10', '2', '9']
Alphabet: set(['1', '0'])
Starting state: 2
Accepting states: ['10']
Transition function:
	10	2	9
1 	10	10	10
0 	10	9	10
Current state: 2
Currently accepting: False

Precision: 0.4904 Recall: 1.0000 Accuracy: 0.4905 F1: 0.6581


--------------------------------------------------------------------
Begin DFA extraction with n_state:13
Done fitting takes time: 2.0200
==Minimized===

This DFA has 7 states
States: ['1', '12', '10', '2', '4', '13', '3']
Alphabet: set(['1', '0'])
Starting state: 13
Accepting states: ['10', '12', '1', '2', '4']
Transition function:
	1	10	12	13	2	3	4
1 	3	4	1	10	4	1	2
0 	3	12	10	13	3	10	10
Current state: 13
Currently accepting: False

Precision: 0.4896 Recall: 0.7270 Accuracy: 0.4945 F1: 0.5851


--------------------------------------------------------------------
Begin DFA extraction with n_state:14
Done fitting takes time: 2.1274
==Minimized===

This DFA has 1 states
States: ['10']
Alphabet: set(['1', '0'])
Starting state: 10
Accepting states: ['10']
Transition function:
	10
1 	10
0 	10
Current state: 10
Currently accepting: True

Precision: 0.4903 Recall: 1.0000 Accuracy: 0.4903 F1: 0.6580


--------------------------------------------------------------------
Begin DFA extraction with n_state:15
Done fitting takes time: 2.3148
==Minimized===

This DFA has 4 states
States: ['14', '10', '11', '13']
Alphabet: set(['1', '0'])
Starting state: 13
Accepting states: ['11', '10', '13']
Transition function:
	10	11	13	14
1 	11	11	10	11
0 	14	11	13	11
Current state: 13
Currently accepting: True

Precision: 0.4908 Recall: 1.0000 Accuracy: 0.4912 F1: 0.6584


--------------------------------------------------------------------
Begin DFA extraction with n_state:16
Done fitting takes time: 2.7162
==Minimized===

This DFA has 4 states
States: ['14', '10', '11', '13']
Alphabet: set(['1', '0'])
Starting state: 13
Accepting states: ['11', '10', '13']
Transition function:
	10	11	13	14
1 	10	11	10	11
0 	14	11	13	11
Current state: 13
Currently accepting: True

Precision: 0.4910 Recall: 0.9976 Accuracy: 0.4916 F1: 0.6581


--------------------------------------------------------------------
Begin DFA extraction with n_state:17
Done fitting takes time: 2.1690
==Minimized===

This DFA has 4 states
States: ['11', '10', '13', '14']
Alphabet: set(['1', '0'])
Starting state: 13
Accepting states: ['11', '10']
Transition function:
	10	11	13	14
1 	10	11	10	11
0 	14	11	13	11
Current state: 13
Currently accepting: False

Precision: 0.4907 Recall: 0.9962 Accuracy: 0.4912 F1: 0.6575


--------------------------------------------------------------------
Begin DFA extraction with n_state:18
Done fitting takes time: 2.2859
==Minimized===

This DFA has 2 states
States: ['11', '13']
Alphabet: set(['1', '0'])
Starting state: 13
Accepting states: ['11']
Transition function:
	11	13
1 	11	11
0 	11	13
Current state: 13
Currently accepting: False

Precision: 0.4901 Recall: 0.9986 Accuracy: 0.4899 F1: 0.6575


--------------------------------------------------------------------
Begin DFA extraction with n_state:19
Done fitting takes time: 2.0667
==Minimized===

This DFA has 1 states
States: ['11']
Alphabet: set(['1', '0'])
Starting state: 11
Accepting states: ['11']
Transition function:
	11
1 	11
0 	11
Current state: 11
Currently accepting: True

Precision: 0.4903 Recall: 1.0000 Accuracy: 0.4903 F1: 0.6580
[ 0.00287563  0.00287563  0.40045539  0.61101533  0.          0.57183327
  0.39823764  0.50822293  0.65813384  0.5845581   0.65808185  0.58512077
  0.65802986  0.65839393  0.65806145  0.65752773  0.65749743  0.65802986]


[[ 0.          0.          0.50826596  0.60506567  0.50826596  0.55335222
   0.23959094  0.57339638  0.57339638  0.53617953  0.67020677  0.33145796
   0.57339638  0.375       0.52358168  0.49940291  0.33434748  0.50383693]
 [ 0.          0.          0.          0.          0.          0.          0.
   0.28847458  0.18794807  0.          0.          0.          0.          0.
   0.          0.16868908  0.          0.        ]
 [ 0.          0.79005288  1.          1.          1.          1.          1.
   1.          1.          1.          1.          1.          1.          1.
   1.          1.          1.          1.        ]
 [ 0.          0.79005288  1.          1.          1.          1.          1.
   1.          1.          1.          1.          1.          1.          1.
   1.          1.          1.          1.        ]
 [ 0.40714796  0.          0.40703158  0.66746795  0.67020677  0.67020677
   0.50826596  0.66538861  0.58315894  0.63840139  0.63454231  0.63454231
   0.65303658  0.74997749  0.7635514   0.80153046  0.84922883  0.84720058]
 [ 0.          0.78620492  1.          1.          1.          1.          1.
   1.          1.          1.          1.          1.          1.          1.
   1.          1.          1.          1.        ]
 [ 0.00287563  0.00287563  0.40045539  0.61101533  0.          0.57183327
   0.39823764  0.50822293  0.65813384  0.5845581   0.65808185  0.58512077
   0.65802986  0.65839393  0.65806145  0.65752773  0.65749743  0.65802986]
 [ 0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.        ]
 [ 0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.        ]]
