G:g7, model:UNI tanh, load all data and stored hidden activations


--------------------------------------------------------------------
Begin DFA extraction with n_state:2
Done fitting takes time: 0.0813
==Minimized===

This DFA has 1 states
States: ['1']
Alphabet: set(['1', '0'])
Starting state: 1
Accepting states: []
Transition function:
	1
1 	1
0 	1
Current state: 1
Currently accepting: False

Precision: 0.0000 Recall: 0.0000 Accuracy: 0.5731 F1: 0.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:3
Done fitting takes time: 0.0749
==Minimized===

This DFA has 1 states
States: ['1']
Alphabet: set(['1', '0'])
Starting state: 1
Accepting states: []
Transition function:
	1
1 	1
0 	1
Current state: 1
Currently accepting: False

Precision: 0.0000 Recall: 0.0000 Accuracy: 0.5731 F1: 0.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:4
Done fitting takes time: 0.0973
==Minimized===

This DFA has 3 states
States: ['2', '3', '4']
Alphabet: set(['1', '0'])
Starting state: 4
Accepting states: ['3', '4']
Transition function:
	2	3	4
1 	2	3	3
0 	2	2	4
Current state: 4
Currently accepting: True

Precision: 1.0000 Recall: 0.0974 Accuracy: 0.6147 F1: 0.1775


--------------------------------------------------------------------
Begin DFA extraction with n_state:5
Done fitting takes time: 0.3225
==Minimized===

This DFA has 3 states
States: ['2', '3', '4']
Alphabet: set(['1', '0'])
Starting state: 4
Accepting states: ['3', '4']
Transition function:
	2	3	4
1 	2	3	3
0 	2	2	4
Current state: 4
Currently accepting: True

Precision: 1.0000 Recall: 0.0974 Accuracy: 0.6147 F1: 0.1775


--------------------------------------------------------------------
Begin DFA extraction with n_state:6
Done fitting takes time: 0.0880
==Minimized===

This DFA has 6 states
States: ['3', '4', '1', '6', '2', '5']
Alphabet: set(['1', '0'])
Starting state: 5
Accepting states: ['1', '3', '4', '6']
Transition function:
	1	2	3	4	5	6
1 	6	2	3	3	6	6
0 	1	2	2	4	1	4
Current state: 5
Currently accepting: False

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:7
Done fitting takes time: 0.0866
==Minimized===

This DFA has 6 states
States: ['3', '4', '1', '6', '2', '5']
Alphabet: set(['1', '0'])
Starting state: 5
Accepting states: ['1', '3', '4', '6']
Transition function:
	1	2	3	4	5	6
1 	6	2	3	3	6	6
0 	1	2	2	4	1	4
Current state: 5
Currently accepting: False

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:8
Done fitting takes time: 0.0888
==Minimized===

This DFA has 6 states
States: ['3', '4', '1', '8', '2', '5']
Alphabet: set(['1', '0'])
Starting state: 5
Accepting states: ['1', '8', '3', '4']
Transition function:
	1	2	3	4	5	8
1 	8	2	3	3	8	8
0 	1	2	2	4	1	4
Current state: 5
Currently accepting: False

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:9
Done fitting takes time: 0.0917
==Minimized===

This DFA has 6 states
States: ['3', '4', '1', '8', '2', '5']
Alphabet: set(['1', '0'])
Starting state: 5
Accepting states: ['1', '8', '3', '4']
Transition function:
	1	2	3	4	5	8
1 	8	2	3	3	8	8
0 	1	2	2	4	1	4
Current state: 5
Currently accepting: False

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:10
Done fitting takes time: 0.1463
==Minimized===

This DFA has 6 states
States: ['3', '4', '10', '1', '2', '5']
Alphabet: set(['1', '0'])
Starting state: 5
Accepting states: ['10', '1', '3', '4']
Transition function:
	1	10	2	3	4	5
1 	10	10	2	3	3	10
0 	1	4	2	2	4	1
Current state: 5
Currently accepting: False

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:11
Done fitting takes time: 0.0895
==Minimized===

This DFA has 6 states
States: ['3', '11', '10', '1', '2', '5']
Alphabet: set(['1', '0'])
Starting state: 5
Accepting states: ['11', '10', '1', '3']
Transition function:
	1	10	11	2	3	5
1 	10	10	3	2	3	10
0 	1	11	11	2	2	1
Current state: 5
Currently accepting: False

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:12
Done fitting takes time: 0.0974
==Minimized===

This DFA has 6 states
States: ['3', '11', '10', '1', '12', '5']
Alphabet: set(['1', '0'])
Starting state: 5
Accepting states: ['11', '10', '1', '3']
Transition function:
	1	10	11	12	3	5
1 	10	10	3	12	3	10
0 	1	11	11	12	12	1
Current state: 5
Currently accepting: False

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:13
Done fitting takes time: 0.1031
==Minimized===

This DFA has 6 states
States: ['3', '11', '10', '1', '12', '5']
Alphabet: set(['1', '0'])
Starting state: 5
Accepting states: ['11', '10', '1', '3']
Transition function:
	1	10	11	12	3	5
1 	10	10	3	12	3	10
0 	1	11	11	12	12	1
Current state: 5
Currently accepting: False

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:14
Done fitting takes time: 0.2426
==Minimized===

This DFA has 6 states
States: ['14', '11', '10', '1', '12', '5']
Alphabet: set(['1', '0'])
Starting state: 5
Accepting states: ['11', '10', '14', '1']
Transition function:
	1	10	11	12	14	5
1 	10	10	14	12	14	10
0 	1	11	11	12	12	1
Current state: 5
Currently accepting: False

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:15
Done fitting takes time: 0.1063
==Minimized===

This DFA has 6 states
States: ['14', '11', '10', '1', '12', '5']
Alphabet: set(['1', '0'])
Starting state: 5
Accepting states: ['11', '10', '14', '1']
Transition function:
	1	10	11	12	14	5
1 	10	10	14	12	14	10
0 	1	11	11	12	12	1
Current state: 5
Currently accepting: False

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:16
Done fitting takes time: 0.0990
==Minimized===

This DFA has 6 states
States: ['14', '11', '10', '1', '12', '5']
Alphabet: set(['1', '0'])
Starting state: 5
Accepting states: ['11', '10', '14', '1']
Transition function:
	1	10	11	12	14	5
1 	10	10	14	12	14	10
0 	1	11	11	12	12	1
Current state: 5
Currently accepting: False

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:17
Done fitting takes time: 0.1196
==Minimized===

This DFA has 6 states
States: ['14', '11', '10', '17', '12', '5']
Alphabet: set(['1', '0'])
Starting state: 5
Accepting states: ['11', '10', '14', '17']
Transition function:
	10	11	12	14	17	5
1 	10	14	12	14	10	10
0 	11	11	12	12	17	17
Current state: 5
Currently accepting: False

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:18
Done fitting takes time: 0.1038
==Minimized===

This DFA has 6 states
States: ['14', '11', '10', '17', '12', '5']
Alphabet: set(['1', '0'])
Starting state: 5
Accepting states: ['11', '10', '14', '17']
Transition function:
	10	11	12	14	17	5
1 	10	14	12	14	10	10
0 	11	11	12	12	17	17
Current state: 5
Currently accepting: False

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:19
Done fitting takes time: 0.1099
==Minimized===

This DFA has 6 states
States: ['14', '11', '10', '17', '12', '5']
Alphabet: set(['1', '0'])
Starting state: 5
Accepting states: ['11', '10', '14', '17']
Transition function:
	10	11	12	14	17	5
1 	10	14	12	14	10	10
0 	11	11	12	12	17	17
Current state: 5
Currently accepting: False

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000
[ 0.          0.          0.17754011  0.17754011  1.          1.          1.
  1.          1.          1.          1.          1.          1.          1.
  1.          1.          1.          1.        ]


[[ 0.          0.59831461  0.02549247  0.02549247  0.02549247  0.59831461
   0.59831461  1.          1.          1.          1.          1.          1.
   1.          1.          1.          1.          1.        ]
 [ 0.          0.          0.59380863  0.58145815  0.          0.58145815
   0.55852356  0.29248477  0.26805556  0.50317662  0.48174247  0.35454545
   0.34875445  0.19193858  0.2176628   0.28647687  0.0412844   0.11526147]
 [ 0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.        ]
 [ 0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.        ]
 [ 0.          0.02549247  0.59831461  0.52976704  0.52976704  0.52976704
   1.          1.          1.          1.          1.          1.          1.
   1.          1.          1.          1.          1.        ]
 [ 0.          0.          0.17754011  0.17754011  1.          1.          1.
   1.          1.          1.          1.          1.          1.          1.
   1.          1.          1.          1.        ]
 [ 0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.        ]
 [ 0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.        ]
 [ 0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.        ]]
