G:g7, model:SRN sigmoid, load all data and stored hidden activations


--------------------------------------------------------------------
Begin DFA extraction with n_state:2
Done fitting takes time: 0.0928
==Minimized===

This DFA has 1 states
States: ['1']
Alphabet: set(['1', '0'])
Starting state: 1
Accepting states: []
Transition function:
	1
1 	1
0 	1
Current state: 1
Currently accepting: False

Precision: 0.0000 Recall: 0.0000 Accuracy: 0.5731 F1: 0.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:3
Done fitting takes time: 0.0849
==Minimized===

This DFA has 1 states
States: ['1']
Alphabet: set(['1', '0'])
Starting state: 1
Accepting states: []
Transition function:
	1
1 	1
0 	1
Current state: 1
Currently accepting: False

Precision: 0.0000 Recall: 0.0000 Accuracy: 0.5731 F1: 0.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:4
Done fitting takes time: 0.1026
==Minimized===

This DFA has 3 states
States: ['2', '3', '4']
Alphabet: set(['1', '0'])
Starting state: 4
Accepting states: ['3', '4']
Transition function:
	2	3	4
1 	2	3	3
0 	2	2	4
Current state: 4
Currently accepting: True

Precision: 1.0000 Recall: 0.0974 Accuracy: 0.6147 F1: 0.1775


--------------------------------------------------------------------
Begin DFA extraction with n_state:5
Done fitting takes time: 0.1989
==Minimized===

This DFA has 3 states
States: ['1', '5', '4']
Alphabet: set(['1', '0'])
Starting state: 4
Accepting states: ['5', '4']
Transition function:
	1	4	5
1 	1	5	5
0 	1	4	1
Current state: 4
Currently accepting: True

Precision: 1.0000 Recall: 0.0974 Accuracy: 0.6147 F1: 0.1775


--------------------------------------------------------------------
Begin DFA extraction with n_state:6
Done fitting takes time: 0.0938
==Minimized===

This DFA has 3 states
States: ['3', '4', '6']
Alphabet: set(['1', '0'])
Starting state: 4
Accepting states: ['4', '6']
Transition function:
	3	4	6
1 	3	6	6
0 	3	4	3
Current state: 4
Currently accepting: True

Precision: 1.0000 Recall: 0.0974 Accuracy: 0.6147 F1: 0.1775


--------------------------------------------------------------------
Begin DFA extraction with n_state:7
Done fitting takes time: 0.1300
==Minimized===

This DFA has 3 states
States: ['3', '4', '6']
Alphabet: set(['1', '0'])
Starting state: 4
Accepting states: ['4', '6']
Transition function:
	3	4	6
1 	3	6	6
0 	3	4	3
Current state: 4
Currently accepting: True

Precision: 1.0000 Recall: 0.0974 Accuracy: 0.6147 F1: 0.1775


--------------------------------------------------------------------
Begin DFA extraction with n_state:8
Done fitting takes time: 0.0983
==Minimized===

This DFA has 3 states
States: ['3', '4', '6']
Alphabet: set(['1', '0'])
Starting state: 4
Accepting states: ['4', '6']
Transition function:
	3	4	6
1 	3	6	6
0 	3	4	3
Current state: 4
Currently accepting: True

Precision: 1.0000 Recall: 0.0974 Accuracy: 0.6147 F1: 0.1775


--------------------------------------------------------------------
Begin DFA extraction with n_state:9
Done fitting takes time: 0.2257
==Minimized===

This DFA has 1 states
States: ['1']
Alphabet: set(['1', '0'])
Starting state: 1
Accepting states: ['1']
Transition function:
	1
1 	1
0 	1
Current state: 1
Currently accepting: True

Precision: 0.4269 Recall: 1.0000 Accuracy: 0.4269 F1: 0.5983


--------------------------------------------------------------------
Begin DFA extraction with n_state:10
Done fitting takes time: 0.1915
==Minimized===

This DFA has 3 states
States: ['1', '9', '5']
Alphabet: set(['1', '0'])
Starting state: 9
Accepting states: ['9', '5']
Transition function:
	1	5	9
1 	1	5	5
0 	1	9	1
Current state: 9
Currently accepting: True

Precision: 0.4052 Recall: 0.0728 Accuracy: 0.5586 F1: 0.1234


--------------------------------------------------------------------
Begin DFA extraction with n_state:11
Done fitting takes time: 0.3355
==Minimized===

This DFA has 1 states
States: ['11']
Alphabet: set(['1', '0'])
Starting state: 11
Accepting states: ['11']
Transition function:
	11
1 	11
0 	11
Current state: 11
Currently accepting: True

Precision: 0.4269 Recall: 1.0000 Accuracy: 0.4269 F1: 0.5983


--------------------------------------------------------------------
Begin DFA extraction with n_state:12
Done fitting takes time: 0.1132
==Minimized===

This DFA has 1 states
States: ['11']
Alphabet: set(['1', '0'])
Starting state: 11
Accepting states: ['11']
Transition function:
	11
1 	11
0 	11
Current state: 11
Currently accepting: True

Precision: 0.4269 Recall: 1.0000 Accuracy: 0.4269 F1: 0.5983


--------------------------------------------------------------------
Begin DFA extraction with n_state:13
Done fitting takes time: 0.1064
==Minimized===

This DFA has 6 states
States: ['10', '13', '11', '1', '12', '9']
Alphabet: set(['1', '0'])
Starting state: 9
Accepting states: ['11', '10', '13', '1']
Transition function:
	1	10	11	12	13	9
1 	11	10	11	12	10	11
0 	1	12	13	12	13	1
Current state: 9
Currently accepting: False

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:14
Done fitting takes time: 0.1280
==Minimized===

This DFA has 6 states
States: ['10', '13', '11', '1', '12', '9']
Alphabet: set(['1', '0'])
Starting state: 9
Accepting states: ['11', '10', '13', '1']
Transition function:
	1	10	11	12	13	9
1 	11	10	11	12	10	11
0 	1	12	13	12	13	1
Current state: 9
Currently accepting: False

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:15
Done fitting takes time: 0.1122
==Minimized===

This DFA has 6 states
States: ['10', '13', '11', '1', '12', '9']
Alphabet: set(['1', '0'])
Starting state: 9
Accepting states: ['11', '10', '13', '1']
Transition function:
	1	10	11	12	13	9
1 	11	10	11	12	10	11
0 	1	12	13	12	13	1
Current state: 9
Currently accepting: False

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:16
Done fitting takes time: 0.3245
==Minimized===

This DFA has 6 states
States: ['10', '13', '11', '1', '12', '9']
Alphabet: set(['1', '0'])
Starting state: 9
Accepting states: ['11', '10', '13', '1']
Transition function:
	1	10	11	12	13	9
1 	11	10	11	12	10	11
0 	1	12	13	12	13	1
Current state: 9
Currently accepting: False

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:17
Done fitting takes time: 0.2809
==Minimized===

This DFA has 6 states
States: ['10', '13', '11', '17', '12', '9']
Alphabet: set(['1', '0'])
Starting state: 9
Accepting states: ['11', '10', '13', '17']
Transition function:
	10	11	12	13	17	9
1 	10	11	12	10	11	11
0 	12	13	12	13	17	17
Current state: 9
Currently accepting: False

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:18
Done fitting takes time: 0.1300
==Minimized===

This DFA has 6 states
States: ['10', '13', '11', '17', '12', '9']
Alphabet: set(['1', '0'])
Starting state: 9
Accepting states: ['11', '10', '13', '17']
Transition function:
	10	11	12	13	17	9
1 	10	11	12	10	11	11
0 	12	13	12	13	17	17
Current state: 9
Currently accepting: False

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:19
Done fitting takes time: 0.1711
==Minimized===

This DFA has 6 states
States: ['10', '13', '11', '17', '12', '9']
Alphabet: set(['1', '0'])
Starting state: 9
Accepting states: ['11', '10', '13', '17']
Transition function:
	10	11	12	13	17	9
1 	10	11	12	10	11	11
0 	12	13	12	13	17	17
Current state: 9
Currently accepting: False

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000
[ 0.          0.          0.17754011  0.17754011  0.17754011  0.17754011
  0.17754011  0.59831461  0.12338308  0.59831461  0.59831461  1.          1.
  1.          1.          1.          1.          1.        ]


[[ 0.          0.          0.17754011  0.17754011  0.17754011  0.17754011
   0.17754011  0.59831461  0.12338308  0.59831461  0.59831461  1.          1.
   1.          1.          1.          1.          1.        ]
 [ 0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.        ]
 [ 0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.        ]
 [ 0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.        ]
 [ 0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.        ]
 [ 0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.        ]
 [ 0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.        ]
 [ 0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.        ]
 [ 0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.        ]]
