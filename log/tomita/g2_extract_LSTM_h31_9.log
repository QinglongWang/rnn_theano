G:g2, model:LSTM tanh, load all data and stored hidden activations


--------------------------------------------------------------------
Begin DFA extraction with n_state:2
Done fitting takes time: 0.0834
==Minimized===

This DFA has 1 states
States: ['2']
Alphabet: set(['1', '0'])
Starting state: 2
Accepting states: []
Transition function:
	2
1 	2
0 	2
Current state: 2
Currently accepting: False

Precision: 0.0000 Recall: 0.0000 Accuracy: 0.9869 F1: 0.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:3
Done fitting takes time: 0.0271
==Minimized===

This DFA has 1 states
States: ['2']
Alphabet: set(['1', '0'])
Starting state: 2
Accepting states: []
Transition function:
	2
1 	2
0 	2
Current state: 2
Currently accepting: False

Precision: 0.0000 Recall: 0.0000 Accuracy: 0.9869 F1: 0.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:4
Done fitting takes time: 0.0990
==Minimized===

This DFA has 1 states
States: ['2']
Alphabet: set(['1', '0'])
Starting state: 2
Accepting states: []
Transition function:
	2
1 	2
0 	2
Current state: 2
Currently accepting: False

Precision: 0.0000 Recall: 0.0000 Accuracy: 0.9869 F1: 0.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:5
Done fitting takes time: 0.0799
==Minimized===

This DFA has 1 states
States: ['1']
Alphabet: set(['1', '0'])
Starting state: 1
Accepting states: []
Transition function:
	1
1 	1
0 	1
Current state: 1
Currently accepting: False

Precision: 0.0000 Recall: 0.0000 Accuracy: 0.9869 F1: 0.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:6
Done fitting takes time: 0.0760
==Minimized===

This DFA has 1 states
States: ['5']
Alphabet: set(['1', '0'])
Starting state: 5
Accepting states: []
Transition function:
	5
1 	5
0 	5
Current state: 5
Currently accepting: False

Precision: 0.0000 Recall: 0.0000 Accuracy: 0.9869 F1: 0.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:7
Done fitting takes time: 0.0397
==Minimized===

This DFA has 5 states
States: ['3', '6', '5', '1', '7']
Alphabet: set(['1', '0'])
Starting state: 5
Accepting states: ['3']
Transition function:
	1	3	5	6	7
1 	1	6	6	7	5
0 	1	7	1	3	5
Current state: 5
Currently accepting: False

Precision: 0.4286 Recall: 1.0000 Accuracy: 0.9825 F1: 0.6000


--------------------------------------------------------------------
Begin DFA extraction with n_state:8
Done fitting takes time: 0.0658
==Minimized===

This DFA has 5 states
States: ['3', '6', '5', '1', '7']
Alphabet: set(['1', '0'])
Starting state: 5
Accepting states: ['3']
Transition function:
	1	3	5	6	7
1 	1	6	6	7	5
0 	1	7	1	3	5
Current state: 5
Currently accepting: False

Precision: 0.4286 Recall: 1.0000 Accuracy: 0.9825 F1: 0.6000


--------------------------------------------------------------------
Begin DFA extraction with n_state:9
Done fitting takes time: 0.0915
==Minimized===

This DFA has 4 states
States: ['3', '6', '1', '4']
Alphabet: set(['1', '0'])
Starting state: 4
Accepting states: ['3']
Transition function:
	1	3	4	6
1 	1	6	6	1
0 	1	1	1	3
Current state: 4
Currently accepting: False

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:10
Done fitting takes time: 0.0701
==Minimized===

This DFA has 4 states
States: ['3', '6', '10', '5']
Alphabet: set(['1', '0'])
Starting state: 5
Accepting states: ['3']
Transition function:
	10	3	5	6
1 	10	6	6	10
0 	10	10	10	3
Current state: 5
Currently accepting: False

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:11
Done fitting takes time: 0.0977
==Minimized===

This DFA has 4 states
States: ['3', '6', '11', '5']
Alphabet: set(['1', '0'])
Starting state: 5
Accepting states: ['3']
Transition function:
	11	3	5	6
1 	11	6	6	11
0 	11	11	11	3
Current state: 5
Currently accepting: False

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:12
Done fitting takes time: 0.1104
==Minimized===

This DFA has 4 states
States: ['3', '6', '11', '5']
Alphabet: set(['1', '0'])
Starting state: 5
Accepting states: ['3']
Transition function:
	11	3	5	6
1 	11	6	6	11
0 	11	11	11	3
Current state: 5
Currently accepting: False

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:13
Done fitting takes time: 0.0851
==Minimized===

This DFA has 4 states
States: ['3', '6', '11', '5']
Alphabet: set(['1', '0'])
Starting state: 5
Accepting states: ['3']
Transition function:
	11	3	5	6
1 	11	6	6	11
0 	11	11	11	3
Current state: 5
Currently accepting: False

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:14
Done fitting takes time: 0.0442
==Minimized===

This DFA has 4 states
States: ['3', '6', '11', '5']
Alphabet: set(['1', '0'])
Starting state: 5
Accepting states: ['3']
Transition function:
	11	3	5	6
1 	11	6	6	11
0 	11	11	11	3
Current state: 5
Currently accepting: False

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:15
Done fitting takes time: 0.0493
==Minimized===

This DFA has 4 states
States: ['3', '6', '11', '5']
Alphabet: set(['1', '0'])
Starting state: 5
Accepting states: ['3']
Transition function:
	11	3	5	6
1 	11	6	6	11
0 	11	11	11	3
Current state: 5
Currently accepting: False

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:16
Done fitting takes time: 0.0438
==Minimized===

This DFA has 4 states
States: ['3', '6', '11', '5']
Alphabet: set(['1', '0'])
Starting state: 5
Accepting states: ['3']
Transition function:
	11	3	5	6
1 	11	6	6	11
0 	11	11	11	3
Current state: 5
Currently accepting: False

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:17
Done fitting takes time: 0.0486
==Minimized===

This DFA has 4 states
States: ['3', '6', '11', '5']
Alphabet: set(['1', '0'])
Starting state: 5
Accepting states: ['3']
Transition function:
	11	3	5	6
1 	11	6	6	11
0 	11	11	11	3
Current state: 5
Currently accepting: False

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:18
Done fitting takes time: 0.0449
==Minimized===

This DFA has 4 states
States: ['3', '6', '11', '5']
Alphabet: set(['1', '0'])
Starting state: 5
Accepting states: ['3']
Transition function:
	11	3	5	6
1 	11	6	6	11
0 	11	11	11	3
Current state: 5
Currently accepting: False

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:19
Done fitting takes time: 0.0449
==Minimized===

This DFA has 4 states
States: ['19', '6', '11', '5']
Alphabet: set(['1', '0'])
Starting state: 5
Accepting states: ['19']
Transition function:
	11	19	5	6
1 	11	6	6	11
0 	11	11	11	19
Current state: 5
Currently accepting: False

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000
[ 0.   0.   0.   0.   0.   0.6  0.6  1.   1.   1.   1.   1.   1.   1.   1.
  1.   1.   1. ]


[[ 0.          0.          0.          0.          0.          0.8         1.
   1.          1.          1.          1.          1.          1.          1.
   1.          1.          1.          1.        ]
 [ 0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.21052632  0.          0.          0.28571429
   0.28571429  0.26666667  0.26666667  0.75        0.28571429]
 [ 0.          0.          0.          0.          0.          1.          1.
   1.          1.          1.          1.          1.          1.          1.
   1.          1.          1.          1.        ]
 [ 0.          0.          0.          1.          1.          1.          1.
   1.          1.          1.          1.          1.          1.          1.
   1.          1.          1.          1.        ]
 [ 0.05263158  0.          0.          0.          0.85714286  1.          1.
   1.          1.          1.          1.          1.          1.          1.
   1.          1.          1.          1.        ]
 [ 0.          0.          0.85714286  0.          1.          0.          1.
   1.          1.          1.          1.          1.          1.          1.
   1.          1.          1.          1.        ]
 [ 0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.          0.          0.66666667
   0.66666667  0.8         0.75        0.66666667  0.75      ]
 [ 0.          0.          0.          0.          0.          0.6         0.6
   1.          1.          1.          1.          1.          1.          1.
   1.          1.          1.          1.        ]
 [ 0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.        ]]
