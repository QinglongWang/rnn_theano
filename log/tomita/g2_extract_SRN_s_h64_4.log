G:g2, model:SRN sigmoid, load all data and stored hidden activations


--------------------------------------------------------------------
Begin DFA extraction with n_state:2
Done fitting takes time: 0.0465
==Minimized===

This DFA has 1 states
States: ['1']
Alphabet: set(['1', '0'])
Starting state: 1
Accepting states: []
Transition function:
	1
1 	1
0 	1
Current state: 1
Currently accepting: False

Precision: 0.0000 Recall: 0.0000 Accuracy: 0.9869 F1: 0.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:3
Done fitting takes time: 0.0351
==Minimized===

This DFA has 1 states
States: ['3']
Alphabet: set(['1', '0'])
Starting state: 3
Accepting states: []
Transition function:
	3
1 	3
0 	3
Current state: 3
Currently accepting: False

Precision: 0.0000 Recall: 0.0000 Accuracy: 0.9869 F1: 0.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:4
Done fitting takes time: 0.0738
==Minimized===

This DFA has 1 states
States: ['1']
Alphabet: set(['1', '0'])
Starting state: 1
Accepting states: []
Transition function:
	1
1 	1
0 	1
Current state: 1
Currently accepting: False

Precision: 0.0000 Recall: 0.0000 Accuracy: 0.9869 F1: 0.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:5
Done fitting takes time: 0.0339
==Minimized===

This DFA has 1 states
States: ['3']
Alphabet: set(['1', '0'])
Starting state: 3
Accepting states: []
Transition function:
	3
1 	3
0 	3
Current state: 3
Currently accepting: False

Precision: 0.0000 Recall: 0.0000 Accuracy: 0.9869 F1: 0.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:6
Done fitting takes time: 0.1075
==Minimized===

This DFA has 4 states
States: ['4', '2', '1', '3']
Alphabet: set(['1', '0'])
Starting state: 3
Accepting states: ['4']
Transition function:
	1	2	3	4
1 	1	1	2	2
0 	1	4	2	1
Current state: 3
Currently accepting: False

Precision: 0.6667 Recall: 1.0000 Accuracy: 0.9934 F1: 0.8000


--------------------------------------------------------------------
Begin DFA extraction with n_state:7
Done fitting takes time: 0.0746
==Minimized===

This DFA has 4 states
States: ['4', '2', '1', '3']
Alphabet: set(['1', '0'])
Starting state: 3
Accepting states: ['4']
Transition function:
	1	2	3	4
1 	1	1	2	2
0 	1	4	1	1
Current state: 3
Currently accepting: False

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:8
Done fitting takes time: 0.1082
==Minimized===

This DFA has 4 states
States: ['4', '2', '1', '3']
Alphabet: set(['1', '0'])
Starting state: 3
Accepting states: ['4']
Transition function:
	1	2	3	4
1 	1	1	2	2
0 	1	4	1	1
Current state: 3
Currently accepting: False

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:9
Done fitting takes time: 0.0382
==Minimized===

This DFA has 4 states
States: ['4', '2', '1', '3']
Alphabet: set(['1', '0'])
Starting state: 3
Accepting states: ['4']
Transition function:
	1	2	3	4
1 	1	1	2	2
0 	1	4	1	1
Current state: 3
Currently accepting: False

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:10
Done fitting takes time: 0.0399
==Minimized===

This DFA has 4 states
States: ['4', '2', '10', '3']
Alphabet: set(['1', '0'])
Starting state: 3
Accepting states: ['4']
Transition function:
	10	2	3	4
1 	10	10	2	2
0 	10	4	10	10
Current state: 3
Currently accepting: False

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:11
Done fitting takes time: 0.0493
==Minimized===

This DFA has 4 states
States: ['4', '2', '11', '3']
Alphabet: set(['1', '0'])
Starting state: 3
Accepting states: ['4']
Transition function:
	11	2	3	4
1 	11	11	2	2
0 	11	4	11	11
Current state: 3
Currently accepting: False

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:12
Done fitting takes time: 0.0479
==Minimized===

This DFA has 4 states
States: ['4', '2', '11', '3']
Alphabet: set(['1', '0'])
Starting state: 3
Accepting states: ['4']
Transition function:
	11	2	3	4
1 	11	11	2	2
0 	11	4	11	11
Current state: 3
Currently accepting: False

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:13
Done fitting takes time: 0.0845
==Minimized===

This DFA has 4 states
States: ['13', '2', '11', '3']
Alphabet: set(['1', '0'])
Starting state: 3
Accepting states: ['13']
Transition function:
	11	13	2	3
1 	11	2	11	2
0 	11	11	13	11
Current state: 3
Currently accepting: False

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:14
Done fitting takes time: 0.0769
==Minimized===

This DFA has 4 states
States: ['13', '2', '11', '3']
Alphabet: set(['1', '0'])
Starting state: 3
Accepting states: ['13']
Transition function:
	11	13	2	3
1 	11	2	11	2
0 	11	11	13	11
Current state: 3
Currently accepting: False

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:15
Done fitting takes time: 0.1005
==Minimized===

This DFA has 4 states
States: ['13', '2', '11', '3']
Alphabet: set(['1', '0'])
Starting state: 3
Accepting states: ['13']
Transition function:
	11	13	2	3
1 	11	2	11	2
0 	11	11	13	11
Current state: 3
Currently accepting: False

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:16
Done fitting takes time: 0.0792
==Minimized===

This DFA has 4 states
States: ['13', '16', '11', '3']
Alphabet: set(['1', '0'])
Starting state: 3
Accepting states: ['13']
Transition function:
	11	13	16	3
1 	11	16	11	16
0 	11	11	13	11
Current state: 3
Currently accepting: False

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:17
Done fitting takes time: 0.0420
==Minimized===

This DFA has 4 states
States: ['13', '16', '11', '3']
Alphabet: set(['1', '0'])
Starting state: 3
Accepting states: ['13']
Transition function:
	11	13	16	3
1 	11	16	11	16
0 	11	11	13	11
Current state: 3
Currently accepting: False

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:18
Done fitting takes time: 0.0448
==Minimized===

This DFA has 4 states
States: ['13', '16', '11', '3']
Alphabet: set(['1', '0'])
Starting state: 3
Accepting states: ['13']
Transition function:
	11	13	16	3
1 	11	16	11	16
0 	11	11	13	11
Current state: 3
Currently accepting: False

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:19
Done fitting takes time: 0.0504
==Minimized===

This DFA has 4 states
States: ['13', '16', '11', '3']
Alphabet: set(['1', '0'])
Starting state: 3
Accepting states: ['13']
Transition function:
	11	13	16	3
1 	11	16	11	16
0 	11	11	13	11
Current state: 3
Currently accepting: False

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000
[ 0.   0.   0.   0.   0.8  1.   1.   1.   1.   1.   1.   1.   1.   1.   1.
  1.   1.   1. ]


[[ 0.   0.   0.   0.   0.8  1.   1.   1.   1.   1.   1.   1.   1.   1.   1.
   1.   1.   1. ]
 [ 0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
   0.   0.   0. ]
 [ 0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
   0.   0.   0. ]
 [ 0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
   0.   0.   0. ]
 [ 0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
   0.   0.   0. ]
 [ 0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
   0.   0.   0. ]
 [ 0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
   0.   0.   0. ]
 [ 0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
   0.   0.   0. ]
 [ 0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
   0.   0.   0. ]]
