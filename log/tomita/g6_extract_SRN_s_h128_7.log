G:g6, model:SRN sigmoid, load all data and stored hidden activations


--------------------------------------------------------------------
Begin DFA extraction with n_state:2
Done fitting takes time: 1.5263
==Minimized===

This DFA has 1 states
States: ['1']
Alphabet: set(['1', '0'])
Starting state: 1
Accepting states: []
Transition function:
	1
1 	1
0 	1
Current state: 1
Currently accepting: False

Precision: 0.0000 Recall: 0.0000 Accuracy: 0.5177 F1: 0.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:3
Done fitting takes time: 0.8413
==Minimized===

This DFA has 1 states
States: ['1']
Alphabet: set(['1', '0'])
Starting state: 1
Accepting states: []
Transition function:
	1
1 	1
0 	1
Current state: 1
Currently accepting: False

Precision: 0.0000 Recall: 0.0000 Accuracy: 0.5177 F1: 0.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:4
Done fitting takes time: 2.1030
==Minimized===

This DFA has 1 states
States: ['1']
Alphabet: set(['1', '0'])
Starting state: 1
Accepting states: []
Transition function:
	1
1 	1
0 	1
Current state: 1
Currently accepting: False

Precision: 0.0000 Recall: 0.0000 Accuracy: 0.5177 F1: 0.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:5
Done fitting takes time: 1.6358
==Minimized===

This DFA has 3 states
States: ['5', '1', '2']
Alphabet: set(['1', '0'])
Starting state: 1
Accepting states: ['1', '2']
Transition function:
	1	2	5
1 	5	1	5
0 	2	2	5
Current state: 1
Currently accepting: True

Precision: 0.4591 Recall: 0.0333 Accuracy: 0.5149 F1: 0.0621


--------------------------------------------------------------------
Begin DFA extraction with n_state:6
Done fitting takes time: 1.9180
==Minimized===

This DFA has 1 states
States: ['1']
Alphabet: set(['1', '0'])
Starting state: 1
Accepting states: []
Transition function:
	1
1 	1
0 	1
Current state: 1
Currently accepting: False

Precision: 0.0000 Recall: 0.0000 Accuracy: 0.5177 F1: 0.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:7
Done fitting takes time: 1.6636
==Minimized===

This DFA has 4 states
States: ['4', '2', '1', '7']
Alphabet: set(['1', '0'])
Starting state: 1
Accepting states: ['1', '2', '7']
Transition function:
	1	2	4	7
1 	4	1	7	4
0 	2	2	7	4
Current state: 1
Currently accepting: True

Precision: 0.4835 Recall: 0.5084 Accuracy: 0.5010 F1: 0.4956


--------------------------------------------------------------------
Begin DFA extraction with n_state:8
Done fitting takes time: 2.1420
==Minimized===

This DFA has 4 states
States: ['4', '2', '1', '7']
Alphabet: set(['1', '0'])
Starting state: 1
Accepting states: ['1', '2', '7']
Transition function:
	1	2	4	7
1 	4	1	7	4
0 	2	2	7	4
Current state: 1
Currently accepting: True

Precision: 0.4835 Recall: 0.5084 Accuracy: 0.5010 F1: 0.4956


--------------------------------------------------------------------
Begin DFA extraction with n_state:9
Done fitting takes time: 0.8942
==Minimized===

This DFA has 2 states
States: ['1', '4']
Alphabet: set(['1', '0'])
Starting state: 1
Accepting states: ['1']
Transition function:
	1	4
1 	4	1
0 	4	1
Current state: 1
Currently accepting: True

Precision: 0.4822 Recall: 0.4812 Accuracy: 0.5006 F1: 0.4817


--------------------------------------------------------------------
Begin DFA extraction with n_state:10
Done fitting takes time: 2.0700
==Minimized===

This DFA has 9 states
States: ['2', '9', '10', '4', '1', '8', '6', '5', '7']
Alphabet: set(['1', '0'])
Starting state: 1
Accepting states: ['1', '2', '5', '7', '6', '8']
Transition function:
	1	10	2	4	5	6	7	8	9
1 	4	5	1	7	10	4	10	10	9
0 	2	8	9	6	10	4	4	2	9
Current state: 1
Currently accepting: True

Precision: 0.4693 Recall: 0.2422 Accuracy: 0.5024 F1: 0.3195


--------------------------------------------------------------------
Begin DFA extraction with n_state:11
Done fitting takes time: 2.2286
==Minimized===

This DFA has 10 states
States: ['7', '8', '3', '11', '10', '2', '4', '5', '1', '6']
Alphabet: set(['1', '0'])
Starting state: 1
Accepting states: ['11', '10', '1', '5', '7', '6', '8']
Transition function:
	1	10	11	2	3	4	5	6	7	8
1 	4	8	7	8	3	7	2	4	10	8
0 	11	5	6	5	3	6	2	4	11	3
Current state: 1
Currently accepting: True

Precision: 0.4773 Recall: 0.2199 Accuracy: 0.5076 F1: 0.3011


--------------------------------------------------------------------
Begin DFA extraction with n_state:12
Done fitting takes time: 1.9130
==Minimized===

This DFA has 6 states
States: ['6', '1', '12', '9', '11', '4']
Alphabet: set(['1', '0'])
Starting state: 1
Accepting states: ['1', '12', '6']
Transition function:
	1	11	12	4	6	9
1 	12	1	1	1	4	9
0 	11	6	6	9	4	9
Current state: 1
Currently accepting: True

Precision: 0.4869 Recall: 0.1520 Accuracy: 0.5138 F1: 0.2316


--------------------------------------------------------------------
Begin DFA extraction with n_state:13
Done fitting takes time: 0.9235
==Minimized===

This DFA has 10 states
States: ['8', '4', '6', '11', '1', '7', '3', '2', '13', '9']
Alphabet: set(['1', '0'])
Starting state: 1
Accepting states: ['11', '13', '1', '4', '7', '6', '9', '8']
Transition function:
	1	11	13	2	3	4	6	7	8	9
1 	11	7	1	3	3	8	4	11	2	13
0 	13	6	9	1	3	9	11	11	2	9
Current state: 1
Currently accepting: True

Precision: 0.4821 Recall: 0.8093 Accuracy: 0.4887 F1: 0.6043


--------------------------------------------------------------------
Begin DFA extraction with n_state:14
Done fitting takes time: 2.8956
==Minimized===

This DFA has 13 states
States: ['3', '13', '9', '4', '5', '6', '8', '11', '2', '10', '12', '14', '1']
Alphabet: set(['1', '0'])
Starting state: 1
Accepting states: ['10', '13', '12', '14', '1', '5', '6', '9', '8']
Transition function:
	1	10	11	12	13	14	2	3	4	5	6	8	9
1 	12	8	1	14	1	10	8	3	1	2	4	10	13
0 	11	5	6	6	9	11	5	3	9	2	4	3	9
Current state: 1
Currently accepting: True

Precision: 0.4900 Recall: 0.6065 Accuracy: 0.5058 F1: 0.5421


--------------------------------------------------------------------
Begin DFA extraction with n_state:15
Done fitting takes time: 2.6268
==Minimized===

This DFA has 8 states
States: ['12', '1', '11', '10', '3', '6', '14', '5']
Alphabet: set(['1', '0'])
Starting state: 1
Accepting states: ['12', '14', '1', '5', '6']
Transition function:
	1	10	11	12	14	3	5	6
1 	12	3	1	14	10	3	10	11
0 	11	5	6	6	11	3	10	11
Current state: 1
Currently accepting: True

Precision: 0.4841 Recall: 0.3895 Accuracy: 0.5054 F1: 0.4317


--------------------------------------------------------------------
Begin DFA extraction with n_state:16
Done fitting takes time: 2.2925
==Minimized===

This DFA has 9 states
States: ['12', '14', '13', '1', '6', '11', '4', '15', '9']
Alphabet: set(['1', '0'])
Starting state: 1
Accepting states: ['12', '15', '14', '6', '9']
Transition function:
	1	11	12	13	14	15	4	6	9
1 	12	14	14	15	12	13	14	4	13
0 	11	6	6	9	11	13	9	4	9
Current state: 1
Currently accepting: False

Precision: 0.4814 Recall: 0.6164 Accuracy: 0.4947 F1: 0.5406


--------------------------------------------------------------------
Begin DFA extraction with n_state:17
Done fitting takes time: 1.9756
==Minimized===

This DFA has 15 states
States: ['12', '9', '11', '10', '4', '17', '7', '13', '6', '8', '14', '1', '2', '15', '5']
Alphabet: set(['1', '0'])
Starting state: 1
Accepting states: ['12', '15', '17', '5', '7', '6', '9', '8']
Transition function:
	1	10	11	12	13	14	15	17	2	4	5	6	7	8	9
1 	12	17	7	14	15	10	13	17	8	7	2	4	12	10	13
0 	11	5	6	6	9	11	13	17	5	9	2	4	11	10	9
Current state: 1
Currently accepting: False

Precision: 0.4814 Recall: 0.6680 Accuracy: 0.4929 F1: 0.5596


--------------------------------------------------------------------
Begin DFA extraction with n_state:18
Done fitting takes time: 2.2422
==Minimized===

This DFA has 4 states
States: ['12', '7', '11', '18']
Alphabet: set(['1', '0'])
Starting state: 18
Accepting states: ['12', '7']
Transition function:
	11	12	18	7
1 	7	18	12	12
0 	18	18	11	11
Current state: 18
Currently accepting: False

Precision: 0.4849 Recall: 0.3834 Accuracy: 0.5062 F1: 0.4282


--------------------------------------------------------------------
Begin DFA extraction with n_state:19
Done fitting takes time: 2.9324
==Minimized===

This DFA has 5 states
States: ['11', '19', '18', '12', '1']
Alphabet: set(['1', '0'])
Starting state: 1
Accepting states: ['11', '19', '18']
Transition function:
	1	11	12	18	19
1 	12	18	19	12	12
0 	11	18	18	11	12
Current state: 1
Currently accepting: False

Precision: 0.4838 Recall: 0.6553 Accuracy: 0.4966 F1: 0.5566
[ 0.          0.          0.          0.06207345  0.          0.49562484
  0.49562484  0.48168179  0.31954023  0.30112145  0.23163767  0.60425477
  0.54205607  0.43167552  0.54057772  0.55956204  0.42822384  0.55662472]


[[ 0.          0.          0.          0.06207345  0.          0.49562484
   0.49562484  0.48168179  0.31954023  0.30112145  0.23163767  0.60425477
   0.54205607  0.43167552  0.54057772  0.55956204  0.42822384  0.55662472]
 [ 0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.        ]
 [ 0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.        ]
 [ 0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.        ]
 [ 0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.        ]
 [ 0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.        ]
 [ 0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.        ]
 [ 0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.        ]
 [ 0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.        ]]
