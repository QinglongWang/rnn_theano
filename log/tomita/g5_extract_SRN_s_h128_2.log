G:g5, model:SRN sigmoid, load all data and stored hidden activations


--------------------------------------------------------------------
Begin DFA extraction with n_state:2
Done fitting takes time: 1.3920
==Minimized===

This DFA has 1 states
States: ['1']
Alphabet: set(['1', '0'])
Starting state: 1
Accepting states: []
Transition function:
	1
1 	1
0 	1
Current state: 1
Currently accepting: False

Precision: 0.0000 Recall: 0.0000 Accuracy: 0.5097 F1: 0.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:3
Done fitting takes time: 0.7300
==Minimized===

This DFA has 1 states
States: ['1']
Alphabet: set(['1', '0'])
Starting state: 1
Accepting states: []
Transition function:
	1
1 	1
0 	1
Current state: 1
Currently accepting: False

Precision: 0.0000 Recall: 0.0000 Accuracy: 0.5097 F1: 0.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:4
Done fitting takes time: 1.1888
==Minimized===

This DFA has 2 states
States: ['1', '3']
Alphabet: set(['1', '0'])
Starting state: 1
Accepting states: ['1']
Transition function:
	1	3
1 	3	1
0 	3	1
Current state: 1
Currently accepting: True

Precision: 0.5040 Recall: 1.0000 Accuracy: 0.5174 F1: 0.6702


--------------------------------------------------------------------
Begin DFA extraction with n_state:5
Done fitting takes time: 1.1557
==Minimized===

This DFA has 2 states
States: ['1', '3']
Alphabet: set(['1', '0'])
Starting state: 1
Accepting states: ['1']
Transition function:
	1	3
1 	3	1
0 	3	1
Current state: 1
Currently accepting: True

Precision: 0.5040 Recall: 1.0000 Accuracy: 0.5174 F1: 0.6702


--------------------------------------------------------------------
Begin DFA extraction with n_state:6
Done fitting takes time: 0.8093
==Minimized===

This DFA has 2 states
States: ['1', '3']
Alphabet: set(['1', '0'])
Starting state: 1
Accepting states: ['1']
Transition function:
	1	3
1 	3	1
0 	3	1
Current state: 1
Currently accepting: True

Precision: 0.5040 Recall: 1.0000 Accuracy: 0.5174 F1: 0.6702


--------------------------------------------------------------------
Begin DFA extraction with n_state:7
Done fitting takes time: 0.8663
==Minimized===

This DFA has 2 states
States: ['1', '3']
Alphabet: set(['1', '0'])
Starting state: 1
Accepting states: ['1']
Transition function:
	1	3
1 	3	1
0 	3	1
Current state: 1
Currently accepting: True

Precision: 0.5040 Recall: 1.0000 Accuracy: 0.5174 F1: 0.6702


--------------------------------------------------------------------
Begin DFA extraction with n_state:8
Done fitting takes time: 1.7637
==Minimized===

This DFA has 2 states
States: ['1', '3']
Alphabet: set(['1', '0'])
Starting state: 1
Accepting states: ['1']
Transition function:
	1	3
1 	3	1
0 	3	1
Current state: 1
Currently accepting: True

Precision: 0.5040 Recall: 1.0000 Accuracy: 0.5174 F1: 0.6702


--------------------------------------------------------------------
Begin DFA extraction with n_state:9
Done fitting takes time: 1.7435
==Minimized===

This DFA has 2 states
States: ['1', '3']
Alphabet: set(['1', '0'])
Starting state: 1
Accepting states: ['1']
Transition function:
	1	3
1 	3	1
0 	3	1
Current state: 1
Currently accepting: True

Precision: 0.5040 Recall: 1.0000 Accuracy: 0.5174 F1: 0.6702


--------------------------------------------------------------------
Begin DFA extraction with n_state:10
Done fitting takes time: 0.8377
==Minimized===

This DFA has 2 states
States: ['1', '3']
Alphabet: set(['1', '0'])
Starting state: 1
Accepting states: ['1']
Transition function:
	1	3
1 	3	1
0 	3	1
Current state: 1
Currently accepting: True

Precision: 0.5040 Recall: 1.0000 Accuracy: 0.5174 F1: 0.6702


--------------------------------------------------------------------
Begin DFA extraction with n_state:11
Done fitting takes time: 1.8945
==Minimized===

This DFA has 2 states
States: ['1', '3']
Alphabet: set(['1', '0'])
Starting state: 1
Accepting states: ['1']
Transition function:
	1	3
1 	3	1
0 	3	1
Current state: 1
Currently accepting: True

Precision: 0.5040 Recall: 1.0000 Accuracy: 0.5174 F1: 0.6702


--------------------------------------------------------------------
Begin DFA extraction with n_state:12
Done fitting takes time: 2.2890
==Minimized===

This DFA has 2 states
States: ['1', '3']
Alphabet: set(['1', '0'])
Starting state: 1
Accepting states: ['1']
Transition function:
	1	3
1 	3	1
0 	3	1
Current state: 1
Currently accepting: True

Precision: 0.5040 Recall: 1.0000 Accuracy: 0.5174 F1: 0.6702


--------------------------------------------------------------------
Begin DFA extraction with n_state:13
Done fitting takes time: 2.1727
==Minimized===

This DFA has 6 states
States: ['11', '2', '13', '3', '1', '4']
Alphabet: set(['1', '0'])
Starting state: 1
Accepting states: ['1', '2', '4']
Transition function:
	1	11	13	2	3	4
1 	3	11	4	11	1	3
0 	3	11	2	11	4	13
Current state: 1
Currently accepting: True

Precision: 0.5035 Recall: 0.4130 Accuracy: 0.5125 F1: 0.4538


--------------------------------------------------------------------
Begin DFA extraction with n_state:14
Done fitting takes time: 2.1562
==Minimized===

This DFA has 2 states
States: ['1', '3']
Alphabet: set(['1', '0'])
Starting state: 1
Accepting states: ['1']
Transition function:
	1	3
1 	3	1
0 	3	1
Current state: 1
Currently accepting: True

Precision: 0.5040 Recall: 1.0000 Accuracy: 0.5174 F1: 0.6702


--------------------------------------------------------------------
Begin DFA extraction with n_state:15
Done fitting takes time: 2.0161
==Minimized===

This DFA has 9 states
States: ['13', '3', '4', '15', '5', '11', '1', '7', '6']
Alphabet: set(['1', '0'])
Starting state: 1
Accepting states: ['11', '13', '1', '4', '7', '6']
Transition function:
	1	11	13	15	3	4	5	6	7
1 	15	5	11	1	6	3	11	15	3
0 	15	5	11	4	7	3	13	13	13
Current state: 1
Currently accepting: True

Precision: 0.4980 Recall: 0.7364 Accuracy: 0.5067 F1: 0.5941


--------------------------------------------------------------------
Begin DFA extraction with n_state:16
Done fitting takes time: 2.1054
==Minimized===

This DFA has 6 states
States: ['13', '7', '15', '3', '1', '4']
Alphabet: set(['1', '0'])
Starting state: 1
Accepting states: ['1', '4', '7']
Transition function:
	1	13	15	3	4	7
1 	15	13	1	1	3	3
0 	15	13	4	7	3	13
Current state: 1
Currently accepting: True

Precision: 0.5036 Recall: 0.4879 Accuracy: 0.5131 F1: 0.4956


--------------------------------------------------------------------
Begin DFA extraction with n_state:17
Done fitting takes time: 2.0078
==Minimized===

This DFA has 7 states
States: ['12', '11', '15', '14', '10', '13', '1']
Alphabet: set(['1', '0'])
Starting state: 1
Accepting states: ['10', '13', '12', '1']
Transition function:
	1	10	11	12	13	14	15
1 	15	14	11	14	11	10	1
0 	15	14	11	13	11	12	10
Current state: 1
Currently accepting: True

Precision: 0.4942 Recall: 0.2888 Accuracy: 0.5064 F1: 0.3646


--------------------------------------------------------------------
Begin DFA extraction with n_state:18
Done fitting takes time: 2.3964
==Minimized===

This DFA has 10 states
States: ['11', '15', '13', '17', '3', '1', '4', '6', '12', '7']
Alphabet: set(['1', '0'])
Starting state: 1
Accepting states: ['13', '12', '1', '4', '7', '6']
Transition function:
	1	11	12	13	15	17	3	4	6	7
1 	15	11	3	11	1	13	6	3	17	17
0 	15	11	13	11	4	12	7	3	17	13
Current state: 1
Currently accepting: True

Precision: 0.4969 Recall: 0.1164 Accuracy: 0.5089 F1: 0.1887


--------------------------------------------------------------------
Begin DFA extraction with n_state:19
Done fitting takes time: 0.7594
==Minimized===

This DFA has 11 states
States: ['13', '7', '11', '2', '17', '15', '3', '12', '19', '1', '6']
Alphabet: set(['1', '0'])
Starting state: 1
Accepting states: ['13', '12', '19', '1', '2', '7', '6']
Transition function:
	1	11	12	13	15	17	19	2	3	6	7
1 	15	11	3	6	1	2	3	11	6	17	17
0 	15	11	17	7	19	12	3	11	7	17	13
Current state: 1
Currently accepting: True

Precision: 0.5021 Recall: 0.2826 Accuracy: 0.5108 F1: 0.3617
[ 0.          0.          0.67020677  0.67020677  0.67020677  0.67020677
  0.67020677  0.67020677  0.67020677  0.67020677  0.67020677  0.45376599
  0.67020677  0.59414955  0.49560976  0.3646007   0.18867925  0.3616531 ]


[[ 0.          0.          0.67020677  0.67020677  0.67020677  0.67020677
   0.67020677  0.67020677  0.67020677  0.67020677  0.67020677  0.45376599
   0.67020677  0.59414955  0.49560976  0.3646007   0.18867925  0.3616531 ]
 [ 0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.        ]
 [ 0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.        ]
 [ 0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.        ]
 [ 0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.        ]
 [ 0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.        ]
 [ 0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.        ]
 [ 0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.        ]
 [ 0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.        ]]
