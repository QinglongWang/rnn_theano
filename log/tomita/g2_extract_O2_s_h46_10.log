G:g2, model:O2 sigmoid, load all data and stored hidden activations


--------------------------------------------------------------------
Begin DFA extraction with n_state:2
Done fitting takes time: 0.0270
==Minimized===

This DFA has 1 states
States: ['1']
Alphabet: set(['1', '0'])
Starting state: 1
Accepting states: []
Transition function:
	1
1 	1
0 	1
Current state: 1
Currently accepting: False

Precision: 0.0000 Recall: 0.0000 Accuracy: 0.9869 F1: 0.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:3
Done fitting takes time: 0.0374
==Minimized===

This DFA has 1 states
States: ['1']
Alphabet: set(['1', '0'])
Starting state: 1
Accepting states: []
Transition function:
	1
1 	1
0 	1
Current state: 1
Currently accepting: False

Precision: 0.0000 Recall: 0.0000 Accuracy: 0.9869 F1: 0.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:4
Done fitting takes time: 0.0786
==Minimized===

This DFA has 1 states
States: ['1']
Alphabet: set(['1', '0'])
Starting state: 1
Accepting states: []
Transition function:
	1
1 	1
0 	1
Current state: 1
Currently accepting: False

Precision: 0.0000 Recall: 0.0000 Accuracy: 0.9869 F1: 0.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:5
Done fitting takes time: 0.0660
==Minimized===

This DFA has 4 states
States: ['3', '2', '1', '5']
Alphabet: set(['1', '0'])
Starting state: 5
Accepting states: ['3']
Transition function:
	1	2	3	5
1 	1	5	2	2
0 	1	3	1	1
Current state: 5
Currently accepting: False

Precision: 0.7500 Recall: 1.0000 Accuracy: 0.9956 F1: 0.8571


--------------------------------------------------------------------
Begin DFA extraction with n_state:6
Done fitting takes time: 0.0350
==Minimized===

This DFA has 4 states
States: ['3', '2', '1', '5']
Alphabet: set(['1', '0'])
Starting state: 5
Accepting states: ['3']
Transition function:
	1	2	3	5
1 	1	5	2	2
0 	1	3	1	1
Current state: 5
Currently accepting: False

Precision: 0.7500 Recall: 1.0000 Accuracy: 0.9956 F1: 0.8571


--------------------------------------------------------------------
Begin DFA extraction with n_state:7
Done fitting takes time: 0.0701
==Minimized===

This DFA has 4 states
States: ['3', '2', '1', '5']
Alphabet: set(['1', '0'])
Starting state: 5
Accepting states: ['3']
Transition function:
	1	2	3	5
1 	1	5	2	2
0 	1	3	1	1
Current state: 5
Currently accepting: False

Precision: 0.7500 Recall: 1.0000 Accuracy: 0.9956 F1: 0.8571


--------------------------------------------------------------------
Begin DFA extraction with n_state:8
Done fitting takes time: 0.0349
==Minimized===

This DFA has 4 states
States: ['3', '2', '5', '4']
Alphabet: set(['1', '0'])
Starting state: 5
Accepting states: ['3']
Transition function:
	2	3	4	5
1 	5	2	4	2
0 	3	4	4	4
Current state: 5
Currently accepting: False

Precision: 0.7500 Recall: 1.0000 Accuracy: 0.9956 F1: 0.8571


--------------------------------------------------------------------
Begin DFA extraction with n_state:9
Done fitting takes time: 0.0407
==Minimized===

This DFA has 4 states
States: ['3', '2', '5', '4']
Alphabet: set(['1', '0'])
Starting state: 5
Accepting states: ['3']
Transition function:
	2	3	4	5
1 	5	2	4	2
0 	3	4	4	4
Current state: 5
Currently accepting: False

Precision: 0.7500 Recall: 1.0000 Accuracy: 0.9956 F1: 0.8571


--------------------------------------------------------------------
Begin DFA extraction with n_state:10
Done fitting takes time: 0.0526
==Minimized===

This DFA has 4 states
States: ['3', '2', '10', '5']
Alphabet: set(['1', '0'])
Starting state: 5
Accepting states: ['3']
Transition function:
	10	2	3	5
1 	10	5	2	2
0 	10	3	10	10
Current state: 5
Currently accepting: False

Precision: 0.7500 Recall: 1.0000 Accuracy: 0.9956 F1: 0.8571


--------------------------------------------------------------------
Begin DFA extraction with n_state:11
Done fitting takes time: 0.0859
==Minimized===

This DFA has 4 states
States: ['3', '2', '11', '5']
Alphabet: set(['1', '0'])
Starting state: 5
Accepting states: ['3']
Transition function:
	11	2	3	5
1 	11	11	2	2
0 	11	3	11	11
Current state: 5
Currently accepting: False

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:12
Done fitting takes time: 0.0619
==Minimized===

This DFA has 4 states
States: ['3', '2', '11', '5']
Alphabet: set(['1', '0'])
Starting state: 5
Accepting states: ['3']
Transition function:
	11	2	3	5
1 	11	11	2	2
0 	11	3	11	11
Current state: 5
Currently accepting: False

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:13
Done fitting takes time: 0.0803
==Minimized===

This DFA has 4 states
States: ['3', '2', '11', '5']
Alphabet: set(['1', '0'])
Starting state: 5
Accepting states: ['3']
Transition function:
	11	2	3	5
1 	11	11	2	2
0 	11	3	11	11
Current state: 5
Currently accepting: False

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:14
Done fitting takes time: 0.0389
==Minimized===

This DFA has 4 states
States: ['3', '2', '11', '5']
Alphabet: set(['1', '0'])
Starting state: 5
Accepting states: ['3']
Transition function:
	11	2	3	5
1 	11	11	2	2
0 	11	3	11	11
Current state: 5
Currently accepting: False

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:15
Done fitting takes time: 0.0727
==Minimized===

This DFA has 4 states
States: ['3', '2', '11', '5']
Alphabet: set(['1', '0'])
Starting state: 5
Accepting states: ['3']
Transition function:
	11	2	3	5
1 	11	11	2	2
0 	11	3	11	11
Current state: 5
Currently accepting: False

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:16
Done fitting takes time: 0.0639
==Minimized===

This DFA has 4 states
States: ['3', '2', '11', '5']
Alphabet: set(['1', '0'])
Starting state: 5
Accepting states: ['3']
Transition function:
	11	2	3	5
1 	11	11	2	2
0 	11	3	11	11
Current state: 5
Currently accepting: False

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:17
Done fitting takes time: 0.0773
==Minimized===

This DFA has 4 states
States: ['3', '2', '11', '5']
Alphabet: set(['1', '0'])
Starting state: 5
Accepting states: ['3']
Transition function:
	11	2	3	5
1 	11	11	2	2
0 	11	3	11	11
Current state: 5
Currently accepting: False

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:18
Done fitting takes time: 0.0413
==Minimized===

This DFA has 4 states
States: ['3', '2', '11', '5']
Alphabet: set(['1', '0'])
Starting state: 5
Accepting states: ['3']
Transition function:
	11	2	3	5
1 	11	11	2	2
0 	11	3	11	11
Current state: 5
Currently accepting: False

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:19
Done fitting takes time: 0.0638
==Minimized===

This DFA has 4 states
States: ['3', '19', '11', '5']
Alphabet: set(['1', '0'])
Starting state: 5
Accepting states: ['3']
Transition function:
	11	19	3	5
1 	11	11	19	19
0 	11	3	11	11
Current state: 5
Currently accepting: False

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000
[ 0.          0.          0.          0.85714286  0.85714286  0.85714286
  0.85714286  0.85714286  0.85714286  1.          1.          1.          1.
  1.          1.          1.          1.          1.        ]


[[ 0.          0.          0.          0.          0.          0.8         0.8
   1.          1.          1.          1.          1.          1.          1.
   1.          1.          1.          1.        ]
 [ 0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.        ]
 [ 0.          0.          0.          0.85714286  0.85714286  0.85714286
   0.85714286  0.85714286  0.85714286  1.          1.          1.          1.
   1.          1.          1.          1.          1.        ]
 [ 0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.        ]
 [ 0.05263158  0.05263158  0.05263158  0.          1.          1.          1.
   1.          1.          1.          1.          1.          1.          1.
   1.          1.          1.          1.        ]
 [ 0.          0.          0.85714286  0.          0.70588235  1.          1.
   1.          1.          1.          1.          1.          1.          1.
   1.          1.          1.          1.        ]
 [ 0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.        ]
 [ 0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.        ]
 [ 0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.        ]]
