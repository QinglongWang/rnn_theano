G:g3, model:O2 sigmoid, load all data and stored hidden activations


--------------------------------------------------------------------
Begin DFA extraction with n_state:2
Done fitting takes time: 0.3529
==Minimized===

This DFA has 1 states
States: ['2']
Alphabet: set(['1', '0'])
Starting state: 2
Accepting states: []
Transition function:
	2
1 	2
0 	2
Current state: 2
Currently accepting: False

Precision: 0.0000 Recall: 0.0000 Accuracy: 0.5422 F1: 0.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:3
Done fitting takes time: 0.5240
==Minimized===

This DFA has 3 states
States: ['1', '3', '2']
Alphabet: set(['1', '0'])
Starting state: 2
Accepting states: ['3', '2']
Transition function:
	1	2	3
1 	1	3	2
0 	1	2	1
Current state: 2
Currently accepting: True

Precision: 1.0000 Recall: 0.4695 Accuracy: 0.7572 F1: 0.6390


--------------------------------------------------------------------
Begin DFA extraction with n_state:4
Done fitting takes time: 0.2000
==Minimized===

This DFA has 2 states
States: ['2', '1']
Alphabet: set(['1', '0'])
Starting state: 2
Accepting states: ['2']
Transition function:
	1	2
1 	1	2
0 	1	1
Current state: 2
Currently accepting: True

Precision: 1.0000 Recall: 0.0055 Accuracy: 0.5448 F1: 0.0110


--------------------------------------------------------------------
Begin DFA extraction with n_state:5
Done fitting takes time: 0.3640
==Minimized===

This DFA has 3 states
States: ['4', '3', '5']
Alphabet: set(['1', '0'])
Starting state: 5
Accepting states: ['3', '5']
Transition function:
	3	4	5
1 	4	3	5
0 	4	4	4
Current state: 5
Currently accepting: True

Precision: 0.4958 Recall: 0.3853 Accuracy: 0.5392 F1: 0.4336


--------------------------------------------------------------------
Begin DFA extraction with n_state:6
Done fitting takes time: 0.2028
==Minimized===

This DFA has 3 states
States: ['5', '1', '6']
Alphabet: set(['1', '0'])
Starting state: 5
Accepting states: ['5']
Transition function:
	1	5	6
1 	1	5	1
0 	1	6	5
Current state: 5
Currently accepting: True

Precision: 1.0000 Recall: 0.2980 Accuracy: 0.6787 F1: 0.4592


--------------------------------------------------------------------
Begin DFA extraction with n_state:7
Done fitting takes time: 0.2078
==Minimized===

This DFA has 3 states
States: ['5', '1', '6']
Alphabet: set(['1', '0'])
Starting state: 5
Accepting states: ['5']
Transition function:
	1	5	6
1 	1	5	1
0 	1	6	5
Current state: 5
Currently accepting: True

Precision: 1.0000 Recall: 0.2980 Accuracy: 0.6787 F1: 0.4592


--------------------------------------------------------------------
Begin DFA extraction with n_state:8
Done fitting takes time: 0.2489
==Minimized===

This DFA has 3 states
States: ['5', '1', '6']
Alphabet: set(['1', '0'])
Starting state: 5
Accepting states: ['5']
Transition function:
	1	5	6
1 	1	5	1
0 	1	6	5
Current state: 5
Currently accepting: True

Precision: 1.0000 Recall: 0.2980 Accuracy: 0.6787 F1: 0.4592


--------------------------------------------------------------------
Begin DFA extraction with n_state:9
Done fitting takes time: 0.3719
==Minimized===

This DFA has 6 states
States: ['4', '3', '5', '9', '1', '6']
Alphabet: set(['1', '0'])
Starting state: 9
Accepting states: ['3', '5', '4']
Transition function:
	1	3	4	5	6	9
1 	1	4	3	5	1	3
0 	1	6	4	6	5	4
Current state: 9
Currently accepting: False

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:10
Done fitting takes time: 0.2684
==Minimized===

This DFA has 6 states
States: ['4', '10', '3', '9', '1', '6']
Alphabet: set(['1', '0'])
Starting state: 9
Accepting states: ['10', '3', '4']
Transition function:
	1	10	3	4	6	9
1 	1	10	4	3	1	3
0 	1	6	6	4	10	4
Current state: 9
Currently accepting: False

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:11
Done fitting takes time: 0.2148
==Minimized===

This DFA has 6 states
States: ['11', '10', '3', '9', '1', '6']
Alphabet: set(['1', '0'])
Starting state: 9
Accepting states: ['11', '10', '3']
Transition function:
	1	10	11	3	6	9
1 	1	10	3	11	1	3
0 	1	6	11	6	10	11
Current state: 9
Currently accepting: False

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:12
Done fitting takes time: 0.4180
==Minimized===

This DFA has 6 states
States: ['11', '10', '3', '9', '1', '6']
Alphabet: set(['1', '0'])
Starting state: 9
Accepting states: ['11', '10', '3']
Transition function:
	1	10	11	3	6	9
1 	1	10	3	11	1	3
0 	1	6	11	6	10	11
Current state: 9
Currently accepting: False

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:13
Done fitting takes time: 0.4669
==Minimized===

This DFA has 6 states
States: ['11', '10', '3', '9', '1', '6']
Alphabet: set(['1', '0'])
Starting state: 9
Accepting states: ['11', '10', '3']
Transition function:
	1	10	11	3	6	9
1 	1	10	3	11	1	3
0 	1	6	11	6	10	11
Current state: 9
Currently accepting: False

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:14
Done fitting takes time: 0.4461
==Minimized===

This DFA has 6 states
States: ['11', '10', '3', '9', '14', '6']
Alphabet: set(['1', '0'])
Starting state: 9
Accepting states: ['11', '10', '3']
Transition function:
	10	11	14	3	6	9
1 	10	3	14	11	14	3
0 	6	11	14	6	10	11
Current state: 9
Currently accepting: False

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:15
Done fitting takes time: 0.4386
==Minimized===

This DFA has 6 states
States: ['11', '10', '3', '9', '14', '6']
Alphabet: set(['1', '0'])
Starting state: 9
Accepting states: ['11', '10', '3']
Transition function:
	10	11	14	3	6	9
1 	10	3	14	11	14	3
0 	6	11	14	6	10	11
Current state: 9
Currently accepting: False

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:16
Done fitting takes time: 0.2486
==Minimized===

This DFA has 6 states
States: ['11', '10', '3', '9', '14', '16']
Alphabet: set(['1', '0'])
Starting state: 9
Accepting states: ['11', '10', '3']
Transition function:
	10	11	14	16	3	9
1 	10	3	14	14	11	3
0 	16	11	14	10	16	11
Current state: 9
Currently accepting: False

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:17
Done fitting takes time: 0.3697
==Minimized===

This DFA has 6 states
States: ['11', '10', '3', '9', '14', '16']
Alphabet: set(['1', '0'])
Starting state: 9
Accepting states: ['11', '10', '3']
Transition function:
	10	11	14	16	3	9
1 	10	3	14	14	11	3
0 	16	11	14	10	16	11
Current state: 9
Currently accepting: False

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:18
Done fitting takes time: 0.3134
==Minimized===

This DFA has 6 states
States: ['11', '18', '3', '9', '14', '16']
Alphabet: set(['1', '0'])
Starting state: 9
Accepting states: ['11', '18', '3']
Transition function:
	11	14	16	18	3	9
1 	3	14	14	18	11	3
0 	11	14	18	16	16	11
Current state: 9
Currently accepting: False

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:19
Done fitting takes time: 0.2719
==Minimized===

This DFA has 6 states
States: ['11', '18', '3', '9', '14', '16']
Alphabet: set(['1', '0'])
Starting state: 9
Accepting states: ['11', '18', '3']
Transition function:
	11	14	16	18	3	9
1 	3	14	14	18	11	3
0 	11	14	18	16	16	11
Current state: 9
Currently accepting: False

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000
[ 0.          0.63898421  0.0110331   0.43359818  0.45920746  0.45920746
  0.45920746  1.          1.          1.          1.          1.          1.
  1.          1.          1.          1.          1.        ]


[[ 0.          0.          0.61633466  0.6280285   0.6280285   0.6280285
   0.6280285   0.6280285   0.84526854  0.92555426  0.92555426  0.92555426
   1.          1.          1.          0.88844086  0.88844086  1.        ]
 [ 0.          0.          0.          0.          0.          0.46753247
   0.43137255  0.43137255  0.43137255  0.24758221  0.42804218  0.40141886
   0.          0.17610063  0.40661426  0.52622673  0.45951968  0.43665768]
 [ 0.          0.63898421  0.0110331   0.43359818  0.45920746  0.45920746
   0.45920746  1.          1.          1.          1.          1.          1.
   1.          1.          1.          1.          1.        ]
 [ 0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.        ]
 [ 0.          0.6280285   0.6280285   0.45920746  0.94767025  0.94767025
   0.94767025  0.45920746  0.45920746  0.45920746  1.          1.          1.
   1.          1.          1.          1.          1.        ]
 [ 0.          0.43092666  0.94767025  0.94767025  0.94767025  1.          1.
   1.          1.          1.          1.          1.          1.          1.
   1.          1.          1.          1.        ]
 [ 0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.        ]
 [ 0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.        ]
 [ 0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.        ]]
