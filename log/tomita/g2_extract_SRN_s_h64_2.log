G:g2, model:SRN sigmoid, load all data and stored hidden activations


--------------------------------------------------------------------
Begin DFA extraction with n_state:2
Done fitting takes time: 0.0489
==Minimized===

This DFA has 1 states
States: ['1']
Alphabet: set(['1', '0'])
Starting state: 1
Accepting states: []
Transition function:
	1
1 	1
0 	1
Current state: 1
Currently accepting: False

Precision: 0.0000 Recall: 0.0000 Accuracy: 0.9869 F1: 0.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:3
Done fitting takes time: 0.0461
==Minimized===

This DFA has 1 states
States: ['3']
Alphabet: set(['1', '0'])
Starting state: 3
Accepting states: []
Transition function:
	3
1 	3
0 	3
Current state: 3
Currently accepting: False

Precision: 0.0000 Recall: 0.0000 Accuracy: 0.9869 F1: 0.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:4
Done fitting takes time: 0.1421
==Minimized===

This DFA has 1 states
States: ['1']
Alphabet: set(['1', '0'])
Starting state: 1
Accepting states: []
Transition function:
	1
1 	1
0 	1
Current state: 1
Currently accepting: False

Precision: 0.0000 Recall: 0.0000 Accuracy: 0.9869 F1: 0.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:5
Done fitting takes time: 0.0576
==Minimized===

This DFA has 1 states
States: ['3']
Alphabet: set(['1', '0'])
Starting state: 3
Accepting states: []
Transition function:
	3
1 	3
0 	3
Current state: 3
Currently accepting: False

Precision: 0.0000 Recall: 0.0000 Accuracy: 0.9869 F1: 0.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:6
Done fitting takes time: 0.1829
==Minimized===

This DFA has 1 states
States: ['3']
Alphabet: set(['1', '0'])
Starting state: 3
Accepting states: []
Transition function:
	3
1 	3
0 	3
Current state: 3
Currently accepting: False

Precision: 0.0000 Recall: 0.0000 Accuracy: 0.9869 F1: 0.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:7
Done fitting takes time: 0.0962
==Minimized===

This DFA has 1 states
States: ['3']
Alphabet: set(['1', '0'])
Starting state: 3
Accepting states: []
Transition function:
	3
1 	3
0 	3
Current state: 3
Currently accepting: False

Precision: 0.0000 Recall: 0.0000 Accuracy: 0.9869 F1: 0.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:8
Done fitting takes time: 0.0620
==Minimized===

This DFA has 7 states
States: ['4', '2', '3', '5', '1', '7', '6']
Alphabet: set(['1', '0'])
Starting state: 3
Accepting states: ['4']
Transition function:
	1	2	3	4	5	6	7
1 	5	1	2	2	3	7	7
0 	7	4	6	5	1	1	7
Current state: 3
Currently accepting: False

Precision: 0.6000 Recall: 1.0000 Accuracy: 0.9913 F1: 0.7500


--------------------------------------------------------------------
Begin DFA extraction with n_state:9
Done fitting takes time: 0.1858
==Minimized===

This DFA has 7 states
States: ['4', '2', '3', '5', '9', '1', '6']
Alphabet: set(['1', '0'])
Starting state: 3
Accepting states: ['4']
Transition function:
	1	2	3	4	5	6	9
1 	1	9	2	2	3	1	5
0 	1	4	6	5	1	9	1
Current state: 3
Currently accepting: False

Precision: 0.6667 Recall: 1.0000 Accuracy: 0.9934 F1: 0.8000


--------------------------------------------------------------------
Begin DFA extraction with n_state:10
Done fitting takes time: 0.1173
==Minimized===

This DFA has 7 states
States: ['4', '2', '3', '5', '1', '10', '6']
Alphabet: set(['1', '0'])
Starting state: 3
Accepting states: ['4']
Transition function:
	1	10	2	3	4	5	6
1 	5	10	1	2	2	3	10
0 	10	10	4	6	5	1	1
Current state: 3
Currently accepting: False

Precision: 0.6000 Recall: 1.0000 Accuracy: 0.9913 F1: 0.7500


--------------------------------------------------------------------
Begin DFA extraction with n_state:11
Done fitting takes time: 0.0837
==Minimized===

This DFA has 7 states
States: ['4', '2', '3', '5', '1', '10', '6']
Alphabet: set(['1', '0'])
Starting state: 3
Accepting states: ['4']
Transition function:
	1	10	2	3	4	5	6
1 	5	10	1	2	2	3	10
0 	10	10	4	6	5	1	1
Current state: 3
Currently accepting: False

Precision: 0.6000 Recall: 1.0000 Accuracy: 0.9913 F1: 0.7500


--------------------------------------------------------------------
Begin DFA extraction with n_state:12
Done fitting takes time: 0.0594
==Minimized===

This DFA has 4 states
States: ['4', '2', '11', '3']
Alphabet: set(['1', '0'])
Starting state: 3
Accepting states: ['4']
Transition function:
	11	2	3	4
1 	11	11	2	2
0 	11	4	11	11
Current state: 3
Currently accepting: False

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:13
Done fitting takes time: 0.1681
==Minimized===

This DFA has 4 states
States: ['4', '2', '11', '3']
Alphabet: set(['1', '0'])
Starting state: 3
Accepting states: ['4']
Transition function:
	11	2	3	4
1 	11	11	2	2
0 	11	4	11	11
Current state: 3
Currently accepting: False

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:14
Done fitting takes time: 0.1209
==Minimized===

This DFA has 4 states
States: ['4', '2', '11', '3']
Alphabet: set(['1', '0'])
Starting state: 3
Accepting states: ['4']
Transition function:
	11	2	3	4
1 	11	11	2	2
0 	11	4	11	11
Current state: 3
Currently accepting: False

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:15
Done fitting takes time: 0.1489
==Minimized===

This DFA has 4 states
States: ['4', '15', '11', '3']
Alphabet: set(['1', '0'])
Starting state: 3
Accepting states: ['4']
Transition function:
	11	15	3	4
1 	11	11	15	15
0 	11	4	11	11
Current state: 3
Currently accepting: False

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:16
Done fitting takes time: 0.1227
==Minimized===

This DFA has 4 states
States: ['4', '15', '11', '3']
Alphabet: set(['1', '0'])
Starting state: 3
Accepting states: ['4']
Transition function:
	11	15	3	4
1 	11	11	15	15
0 	11	4	11	11
Current state: 3
Currently accepting: False

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:17
Done fitting takes time: 0.0812
==Minimized===

This DFA has 4 states
States: ['4', '15', '11', '3']
Alphabet: set(['1', '0'])
Starting state: 3
Accepting states: ['4']
Transition function:
	11	15	3	4
1 	11	11	15	15
0 	11	4	11	11
Current state: 3
Currently accepting: False

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:18
Done fitting takes time: 0.0456
==Minimized===

This DFA has 4 states
States: ['18', '15', '11', '3']
Alphabet: set(['1', '0'])
Starting state: 3
Accepting states: ['18']
Transition function:
	11	15	18	3
1 	11	11	15	15
0 	11	18	11	11
Current state: 3
Currently accepting: False

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:19
Done fitting takes time: 0.0626
==Minimized===

This DFA has 4 states
States: ['18', '15', '11', '3']
Alphabet: set(['1', '0'])
Starting state: 3
Accepting states: ['18']
Transition function:
	11	15	18	3
1 	11	11	15	15
0 	11	18	11	11
Current state: 3
Currently accepting: False

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000
[ 0.    0.    0.    0.    0.    0.    0.75  0.8   0.75  0.75  1.    1.    1.
  1.    1.    1.    1.    1.  ]


[[ 0.    0.    0.    0.    0.    0.    0.75  0.8   0.75  0.75  1.    1.    1.
   1.    1.    1.    1.    1.  ]
 [ 0.    0.    0.    0.    0.    0.    0.    0.    0.    0.    0.    0.    0.
   0.    0.    0.    0.    0.  ]
 [ 0.    0.    0.    0.    0.    0.    0.    0.    0.    0.    0.    0.    0.
   0.    0.    0.    0.    0.  ]
 [ 0.    0.    0.    0.    0.    0.    0.    0.    0.    0.    0.    0.    0.
   0.    0.    0.    0.    0.  ]
 [ 0.    0.    0.    0.    0.    0.    0.    0.    0.    0.    0.    0.    0.
   0.    0.    0.    0.    0.  ]
 [ 0.    0.    0.    0.    0.    0.    0.    0.    0.    0.    0.    0.    0.
   0.    0.    0.    0.    0.  ]
 [ 0.    0.    0.    0.    0.    0.    0.    0.    0.    0.    0.    0.    0.
   0.    0.    0.    0.    0.  ]
 [ 0.    0.    0.    0.    0.    0.    0.    0.    0.    0.    0.    0.    0.
   0.    0.    0.    0.    0.  ]
 [ 0.    0.    0.    0.    0.    0.    0.    0.    0.    0.    0.    0.    0.
   0.    0.    0.    0.    0.  ]]
