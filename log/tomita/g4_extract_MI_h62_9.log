G:g4, model:MI tanh, load all data and stored hidden activations


--------------------------------------------------------------------
Begin DFA extraction with n_state:2
Done fitting takes time: 0.6579
==Minimized===

This DFA has 1 states
States: ['1']
Alphabet: set(['1', '0'])
Starting state: 1
Accepting states: ['1']
Transition function:
	1
1 	1
0 	1
Current state: 1
Currently accepting: True

Precision: 0.4906 Recall: 1.0000 Accuracy: 0.4906 F1: 0.6583


--------------------------------------------------------------------
Begin DFA extraction with n_state:3
Done fitting takes time: 0.5072
==Minimized===

This DFA has 1 states
States: ['1']
Alphabet: set(['1', '0'])
Starting state: 1
Accepting states: ['1']
Transition function:
	1
1 	1
0 	1
Current state: 1
Currently accepting: True

Precision: 0.4906 Recall: 1.0000 Accuracy: 0.4906 F1: 0.6583


--------------------------------------------------------------------
Begin DFA extraction with n_state:4
Done fitting takes time: 0.5739
==Minimized===

This DFA has 1 states
States: ['1']
Alphabet: set(['1', '0'])
Starting state: 1
Accepting states: ['1']
Transition function:
	1
1 	1
0 	1
Current state: 1
Currently accepting: True

Precision: 0.4906 Recall: 1.0000 Accuracy: 0.4906 F1: 0.6583


--------------------------------------------------------------------
Begin DFA extraction with n_state:5
Done fitting takes time: 0.5704
==Minimized===

This DFA has 1 states
States: ['1']
Alphabet: set(['1', '0'])
Starting state: 1
Accepting states: ['1']
Transition function:
	1
1 	1
0 	1
Current state: 1
Currently accepting: True

Precision: 0.4906 Recall: 1.0000 Accuracy: 0.4906 F1: 0.6583


--------------------------------------------------------------------
Begin DFA extraction with n_state:6
Done fitting takes time: 1.0005
==Minimized===

This DFA has 4 states
States: ['3', '6', '1', '2']
Alphabet: set(['1', '0'])
Starting state: 1
Accepting states: ['1', '2', '6']
Transition function:
	1	2	3	6
1 	1	1	3	1
0 	2	6	3	3
Current state: 1
Currently accepting: True

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:7
Done fitting takes time: 1.3437
==Minimized===

This DFA has 4 states
States: ['3', '6', '1', '2']
Alphabet: set(['1', '0'])
Starting state: 1
Accepting states: ['1', '2', '6']
Transition function:
	1	2	3	6
1 	1	1	3	1
0 	2	6	3	3
Current state: 1
Currently accepting: True

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:8
Done fitting takes time: 0.7882
==Minimized===

This DFA has 4 states
States: ['3', '6', '1', '2']
Alphabet: set(['1', '0'])
Starting state: 1
Accepting states: ['1', '2', '6']
Transition function:
	1	2	3	6
1 	1	1	3	1
0 	2	6	3	3
Current state: 1
Currently accepting: True

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:9
Done fitting takes time: 0.9569
==Minimized===

This DFA has 4 states
States: ['3', '6', '1', '2']
Alphabet: set(['1', '0'])
Starting state: 1
Accepting states: ['1', '2', '6']
Transition function:
	1	2	3	6
1 	1	1	3	1
0 	2	6	3	3
Current state: 1
Currently accepting: True

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:10
Done fitting takes time: 1.4308
==Minimized===

This DFA has 4 states
States: ['3', '6', '10', '1']
Alphabet: set(['1', '0'])
Starting state: 1
Accepting states: ['10', '1', '6']
Transition function:
	1	10	3	6
1 	1	1	3	1
0 	10	6	3	3
Current state: 1
Currently accepting: True

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:11
Done fitting takes time: 0.5972
==Minimized===

This DFA has 4 states
States: ['3', '6', '10', '1']
Alphabet: set(['1', '0'])
Starting state: 1
Accepting states: ['10', '1', '6']
Transition function:
	1	10	3	6
1 	1	1	3	1
0 	10	6	3	3
Current state: 1
Currently accepting: True

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:12
Done fitting takes time: 0.5938
==Minimized===

This DFA has 4 states
States: ['12', '6', '10', '1']
Alphabet: set(['1', '0'])
Starting state: 1
Accepting states: ['10', '1', '6']
Transition function:
	1	10	12	6
1 	1	1	12	1
0 	10	6	12	12
Current state: 1
Currently accepting: True

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:13
Done fitting takes time: 0.9528
==Minimized===

This DFA has 4 states
States: ['13', '6', '10', '1']
Alphabet: set(['1', '0'])
Starting state: 1
Accepting states: ['10', '1', '6']
Transition function:
	1	10	13	6
1 	1	1	13	1
0 	10	6	13	13
Current state: 1
Currently accepting: True

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:14
Done fitting takes time: 0.6088
==Minimized===

This DFA has 5 states
States: ['6', '11', '10', '13', '14']
Alphabet: set(['1', '0'])
Starting state: 14
Accepting states: ['11', '10', '6']
Transition function:
	10	11	13	14	6
1 	11	11	13	11	11
0 	6	10	13	10	13
Current state: 14
Currently accepting: False

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:15
Done fitting takes time: 1.2766
==Minimized===

This DFA has 5 states
States: ['6', '11', '10', '13', '14']
Alphabet: set(['1', '0'])
Starting state: 14
Accepting states: ['11', '10', '6']
Transition function:
	10	11	13	14	6
1 	11	11	13	11	11
0 	6	10	13	10	13
Current state: 14
Currently accepting: False

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:16
Done fitting takes time: 1.4828
==Minimized===

This DFA has 5 states
States: ['16', '11', '10', '13', '14']
Alphabet: set(['1', '0'])
Starting state: 14
Accepting states: ['11', '10', '16']
Transition function:
	10	11	13	14	16
1 	11	11	13	11	11
0 	16	10	13	10	13
Current state: 14
Currently accepting: False

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:17
Done fitting takes time: 0.6365
==Minimized===

This DFA has 5 states
States: ['16', '11', '10', '13', '14']
Alphabet: set(['1', '0'])
Starting state: 14
Accepting states: ['11', '10', '16']
Transition function:
	10	11	13	14	16
1 	11	11	13	11	11
0 	16	10	13	10	13
Current state: 14
Currently accepting: False

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:18
Done fitting takes time: 0.6366
==Minimized===

This DFA has 5 states
States: ['16', '11', '10', '13', '14']
Alphabet: set(['1', '0'])
Starting state: 14
Accepting states: ['11', '10', '16']
Transition function:
	10	11	13	14	16
1 	11	11	13	11	11
0 	16	10	13	10	13
Current state: 14
Currently accepting: False

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:19
Done fitting takes time: 0.6394
==Minimized===

This DFA has 5 states
States: ['16', '11', '10', '13', '14']
Alphabet: set(['1', '0'])
Starting state: 14
Accepting states: ['11', '10', '16']
Transition function:
	10	11	13	14	16
1 	11	11	13	11	11
0 	16	10	13	10	13
Current state: 14
Currently accepting: False

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000
[ 0.65829436  0.65829436  0.65829436  0.65829436  1.          1.          1.
  1.          1.          1.          1.          1.          1.          1.
  1.          1.          1.          1.        ]


[[ 0.          0.          0.65829436  0.65829436  0.65829436  0.65829436
   1.          1.          1.          1.          1.          1.          1.
   1.          1.          1.          1.          1.        ]
 [ 0.          0.          0.          0.29842062  0.29842062  0.29842062
   0.          0.39324383  0.83196908  1.          0.92137658  0.92137658
   0.77685477  0.92442323  0.91968052  0.91968052  0.67028041  0.97410604]
 [ 0.65829436  0.65829436  0.65829436  0.65829436  0.65829436  0.94447509
   1.          1.          1.          1.          1.          1.          1.
   1.          1.          1.          1.          1.        ]
 [ 0.65829436  0.65829436  0.90690499  0.90690499  0.94447509  1.          1.
   1.          1.          1.          1.          1.          1.          1.
   1.          1.          1.          1.        ]
 [ 0.          0.65829436  0.69735007  1.          1.          1.          1.
   1.          1.          1.          1.          1.          1.          1.
   1.          1.          1.          1.        ]
 [ 0.          0.65829436  0.65829436  0.65829436  1.          1.          1.
   1.          1.          1.          1.          1.          1.          1.
   1.          1.          1.          1.        ]
 [ 0.65829436  0.65829436  0.65829436  0.65829436  1.          1.          1.
   1.          1.          1.          1.          1.          1.          1.
   1.          1.          1.          1.        ]
 [ 0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.        ]
 [ 0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.        ]]
