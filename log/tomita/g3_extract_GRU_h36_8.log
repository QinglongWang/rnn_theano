G:g3, model:GRU tanh, load all data and stored hidden activations


--------------------------------------------------------------------
Begin DFA extraction with n_state:2
Done fitting takes time: 0.2225
==Minimized===

This DFA has 1 states
States: ['2']
Alphabet: set(['1', '0'])
Starting state: 2
Accepting states: []
Transition function:
	2
1 	2
0 	2
Current state: 2
Currently accepting: False

Precision: 0.0000 Recall: 0.0000 Accuracy: 0.5422 F1: 0.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:3
Done fitting takes time: 0.3710
==Minimized===

This DFA has 1 states
States: ['3']
Alphabet: set(['1', '0'])
Starting state: 3
Accepting states: ['3']
Transition function:
	3
1 	3
0 	3
Current state: 3
Currently accepting: True

Precision: 0.4578 Recall: 1.0000 Accuracy: 0.4578 F1: 0.6280


--------------------------------------------------------------------
Begin DFA extraction with n_state:4
Done fitting takes time: 0.4849
==Minimized===

This DFA has 2 states
States: ['4', '3']
Alphabet: set(['1', '0'])
Starting state: 3
Accepting states: ['4']
Transition function:
	3	4
1 	3	3
0 	4	3
Current state: 3
Currently accepting: False

Precision: 0.1926 Recall: 0.1079 Accuracy: 0.3846 F1: 0.1383


--------------------------------------------------------------------
Begin DFA extraction with n_state:5
Done fitting takes time: 0.4611
==Minimized===

This DFA has 3 states
States: ['5', '3', '2']
Alphabet: set(['1', '0'])
Starting state: 3
Accepting states: ['3', '2']
Transition function:
	2	3	5
1 	3	3	3
0 	2	5	2
Current state: 3
Currently accepting: True

Precision: 0.5276 Recall: 0.9309 Accuracy: 0.5868 F1: 0.6735


--------------------------------------------------------------------
Begin DFA extraction with n_state:6
Done fitting takes time: 0.4770
==Minimized===

This DFA has 1 states
States: ['3']
Alphabet: set(['1', '0'])
Starting state: 3
Accepting states: []
Transition function:
	3
1 	3
0 	3
Current state: 3
Currently accepting: False

Precision: 0.0000 Recall: 0.0000 Accuracy: 0.5422 F1: 0.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:7
Done fitting takes time: 0.6537
==Minimized===

This DFA has 5 states
States: ['3', '2', '5', '1', '6']
Alphabet: set(['1', '0'])
Starting state: 3
Accepting states: ['3', '2']
Transition function:
	1	2	3	5	6
1 	6	3	2	1	6
0 	5	2	5	2	6
Current state: 3
Currently accepting: True

Precision: 0.6329 Recall: 0.6939 Accuracy: 0.6757 F1: 0.6620


--------------------------------------------------------------------
Begin DFA extraction with n_state:8
Done fitting takes time: 0.2097
==Minimized===

This DFA has 4 states
States: ['8', '5', '1', '6']
Alphabet: set(['1', '0'])
Starting state: 8
Accepting states: ['8']
Transition function:
	1	5	6	8
1 	6	1	6	8
0 	5	8	6	5
Current state: 8
Currently accepting: True

Precision: 0.8220 Recall: 0.4145 Accuracy: 0.6909 F1: 0.5511


--------------------------------------------------------------------
Begin DFA extraction with n_state:9
Done fitting takes time: 0.2100
==Minimized===

This DFA has 3 states
States: ['8', '1', '5']
Alphabet: set(['1', '0'])
Starting state: 8
Accepting states: ['8']
Transition function:
	1	5	8
1 	1	1	8
0 	1	8	5
Current state: 8
Currently accepting: True

Precision: 1.0000 Recall: 0.2980 Accuracy: 0.6787 F1: 0.4592


--------------------------------------------------------------------
Begin DFA extraction with n_state:10
Done fitting takes time: 0.5402
==Minimized===

This DFA has 3 states
States: ['8', '10', '5']
Alphabet: set(['1', '0'])
Starting state: 8
Accepting states: ['8']
Transition function:
	10	5	8
1 	10	10	8
0 	10	8	5
Current state: 8
Currently accepting: True

Precision: 1.0000 Recall: 0.2980 Accuracy: 0.6787 F1: 0.4592


--------------------------------------------------------------------
Begin DFA extraction with n_state:11
Done fitting takes time: 0.2185
==Minimized===

This DFA has 3 states
States: ['8', '10', '5']
Alphabet: set(['1', '0'])
Starting state: 8
Accepting states: ['8']
Transition function:
	10	5	8
1 	10	10	8
0 	10	8	5
Current state: 8
Currently accepting: True

Precision: 1.0000 Recall: 0.2980 Accuracy: 0.6787 F1: 0.4592


--------------------------------------------------------------------
Begin DFA extraction with n_state:12
Done fitting takes time: 0.5222
==Minimized===

This DFA has 3 states
States: ['8', '10', '12']
Alphabet: set(['1', '0'])
Starting state: 8
Accepting states: ['8']
Transition function:
	10	12	8
1 	10	10	8
0 	10	8	12
Current state: 8
Currently accepting: True

Precision: 1.0000 Recall: 0.2980 Accuracy: 0.6787 F1: 0.4592


--------------------------------------------------------------------
Begin DFA extraction with n_state:13
Done fitting takes time: 0.2141
==Minimized===

This DFA has 4 states
States: ['11', '2', '10', '12']
Alphabet: set(['1', '0'])
Starting state: 2
Accepting states: ['11', '2']
Transition function:
	10	11	12	2
1 	10	2	10	11
0 	10	12	11	2
Current state: 2
Currently accepting: True

Precision: 0.9005 Recall: 1.0000 Accuracy: 0.9494 F1: 0.9477


--------------------------------------------------------------------
Begin DFA extraction with n_state:14
Done fitting takes time: 0.7044
==Minimized===

This DFA has 6 states
States: ['2', '11', '13', '14', '10', '12']
Alphabet: set(['1', '0'])
Starting state: 14
Accepting states: ['11', '13', '2']
Transition function:
	10	11	12	13	14	2
1 	10	2	10	13	11	11
0 	10	12	13	12	2	2
Current state: 14
Currently accepting: False

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:15
Done fitting takes time: 0.6805
==Minimized===

This DFA has 6 states
States: ['2', '11', '13', '14', '10', '12']
Alphabet: set(['1', '0'])
Starting state: 14
Accepting states: ['11', '13', '2']
Transition function:
	10	11	12	13	14	2
1 	10	2	10	13	11	11
0 	10	12	13	12	2	2
Current state: 14
Currently accepting: False

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:16
Done fitting takes time: 0.6609
==Minimized===

This DFA has 6 states
States: ['2', '11', '13', '14', '10', '12']
Alphabet: set(['1', '0'])
Starting state: 14
Accepting states: ['11', '13', '2']
Transition function:
	10	11	12	13	14	2
1 	10	2	10	13	11	11
0 	10	12	13	12	2	2
Current state: 14
Currently accepting: False

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:17
Done fitting takes time: 0.2192
==Minimized===

This DFA has 6 states
States: ['2', '11', '13', '14', '10', '12']
Alphabet: set(['1', '0'])
Starting state: 14
Accepting states: ['11', '13', '2']
Transition function:
	10	11	12	13	14	2
1 	10	2	10	13	11	11
0 	10	12	13	12	2	2
Current state: 14
Currently accepting: False

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:18
Done fitting takes time: 0.2195
==Minimized===

This DFA has 6 states
States: ['2', '11', '13', '14', '10', '12']
Alphabet: set(['1', '0'])
Starting state: 14
Accepting states: ['11', '13', '2']
Transition function:
	10	11	12	13	14	2
1 	10	2	10	13	11	11
0 	10	12	13	12	2	2
Current state: 14
Currently accepting: False

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:19
Done fitting takes time: 0.2284
==Minimized===

This DFA has 6 states
States: ['2', '11', '13', '14', '10', '12']
Alphabet: set(['1', '0'])
Starting state: 14
Accepting states: ['11', '13', '2']
Transition function:
	10	11	12	13	14	2
1 	10	2	10	13	11	11
0 	10	12	13	12	2	2
Current state: 14
Currently accepting: False

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000
[ 0.          0.6280285   0.13833226  0.67347683  0.          0.66201588
  0.55112303  0.45920746  0.45920746  0.45920746  0.45920746  0.94767025
  1.          1.          1.          1.          1.          1.        ]


[[ 0.          0.6280285   0.6280285   0.6280285   0.51224105  0.51224105
   0.62759385  0.78759482  0.78759482  0.85577649  0.85577649  0.85437312
   0.80698152  0.88863993  0.83428261  1.          0.94114855  0.97205882]
 [ 0.          0.          0.          0.          0.          0.37228608
   0.          0.21918847  0.          0.32        0.01203008  0.46678107
   0.38727836  0.32577904  0.38313526  0.38846826  0.41204888  0.3550152 ]
 [ 0.          0.63898421  0.0110331   0.64709596  0.88685152  0.88685152
   0.88685152  1.          1.          1.          1.          1.          1.
   1.          1.          1.          1.          1.        ]
 [ 0.6280285   0.          0.94767025  0.45920746  1.          1.          1.
   1.          1.          1.          1.          1.          1.          1.
   1.          1.          1.          1.        ]
 [ 0.          0.0110331   0.45920746  0.45920746  0.45920746  0.45920746
   0.45920746  1.          1.          1.          1.          1.          1.
   1.          1.          1.          1.          1.        ]
 [ 0.          0.63898421  0.43092666  0.45920746  1.          1.          1.
   1.          1.          1.          1.          1.          1.          1.
   1.          1.          1.          1.        ]
 [ 0.          0.6280285   0.58386459  0.59661017  0.6280285   0.6280285
   0.6387502   0.80056338  1.          0.66221406  0.66221406  0.66221406
   0.66599496  0.67494894  0.66599496  0.66599496  0.66033966  0.68097527]
 [ 0.          0.          0.53856008  0.          0.24540368  0.24540368
   0.45920746  0.          0.          0.85479042  0.85479042  0.8554337
   0.9588776   0.9588776   0.9588776   0.9588776   0.9588776   1.        ]
 [ 0.          0.6280285   0.13833226  0.67347683  0.          0.66201588
   0.55112303  0.45920746  0.45920746  0.45920746  0.45920746  0.94767025
   1.          1.          1.          1.          1.          1.        ]]
