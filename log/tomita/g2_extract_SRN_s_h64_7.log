G:g2, model:SRN sigmoid, load all data and stored hidden activations


--------------------------------------------------------------------
Begin DFA extraction with n_state:2
Done fitting takes time: 0.0466
==Minimized===

This DFA has 2 states
States: ['1', '2']
Alphabet: set(['1', '0'])
Starting state: 2
Accepting states: ['1']
Transition function:
	1	2
1 	2	2
0 	2	1
Current state: 2
Currently accepting: False

Precision: 0.0411 Recall: 1.0000 Accuracy: 0.6943 F1: 0.0789


--------------------------------------------------------------------
Begin DFA extraction with n_state:3
Done fitting takes time: 0.0281
==Minimized===

This DFA has 1 states
States: ['2']
Alphabet: set(['1', '0'])
Starting state: 2
Accepting states: []
Transition function:
	2
1 	2
0 	2
Current state: 2
Currently accepting: False

Precision: 0.0000 Recall: 0.0000 Accuracy: 0.9869 F1: 0.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:4
Done fitting takes time: 0.0333
==Minimized===

This DFA has 1 states
States: ['1']
Alphabet: set(['1', '0'])
Starting state: 1
Accepting states: []
Transition function:
	1
1 	1
0 	1
Current state: 1
Currently accepting: False

Precision: 0.0000 Recall: 0.0000 Accuracy: 0.9869 F1: 0.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:5
Done fitting takes time: 0.0739
==Minimized===

This DFA has 1 states
States: ['1']
Alphabet: set(['1', '0'])
Starting state: 1
Accepting states: []
Transition function:
	1
1 	1
0 	1
Current state: 1
Currently accepting: False

Precision: 0.0000 Recall: 0.0000 Accuracy: 0.9869 F1: 0.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:6
Done fitting takes time: 0.0322
==Minimized===

This DFA has 1 states
States: ['1']
Alphabet: set(['1', '0'])
Starting state: 1
Accepting states: []
Transition function:
	1
1 	1
0 	1
Current state: 1
Currently accepting: False

Precision: 0.0000 Recall: 0.0000 Accuracy: 0.9869 F1: 0.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:7
Done fitting takes time: 0.0456
==Minimized===

This DFA has 4 states
States: ['6', '3', '2', '5']
Alphabet: set(['1', '0'])
Starting state: 5
Accepting states: ['6']
Transition function:
	2	3	5	6
1 	2	2	3	3
0 	2	6	3	2
Current state: 5
Currently accepting: False

Precision: 0.6667 Recall: 1.0000 Accuracy: 0.9934 F1: 0.8000


--------------------------------------------------------------------
Begin DFA extraction with n_state:8
Done fitting takes time: 0.0765
==Minimized===

This DFA has 4 states
States: ['6', '3', '2', '5']
Alphabet: set(['1', '0'])
Starting state: 5
Accepting states: ['6']
Transition function:
	2	3	5	6
1 	2	2	3	3
0 	2	6	3	2
Current state: 5
Currently accepting: False

Precision: 0.6667 Recall: 1.0000 Accuracy: 0.9934 F1: 0.8000


--------------------------------------------------------------------
Begin DFA extraction with n_state:9
Done fitting takes time: 0.0758
==Minimized===

This DFA has 4 states
States: ['6', '3', '1', '5']
Alphabet: set(['1', '0'])
Starting state: 5
Accepting states: ['6']
Transition function:
	1	3	5	6
1 	1	1	3	3
0 	1	6	1	1
Current state: 5
Currently accepting: False

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:10
Done fitting takes time: 0.0394
==Minimized===

This DFA has 4 states
States: ['6', '3', '10', '5']
Alphabet: set(['1', '0'])
Starting state: 5
Accepting states: ['6']
Transition function:
	10	3	5	6
1 	10	10	3	3
0 	10	6	10	10
Current state: 5
Currently accepting: False

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:11
Done fitting takes time: 0.0377
==Minimized===

This DFA has 4 states
States: ['6', '3', '11', '5']
Alphabet: set(['1', '0'])
Starting state: 5
Accepting states: ['6']
Transition function:
	11	3	5	6
1 	11	11	3	3
0 	11	6	11	11
Current state: 5
Currently accepting: False

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:12
Done fitting takes time: 0.0657
==Minimized===

This DFA has 4 states
States: ['6', '3', '11', '5']
Alphabet: set(['1', '0'])
Starting state: 5
Accepting states: ['6']
Transition function:
	11	3	5	6
1 	11	11	3	3
0 	11	6	11	11
Current state: 5
Currently accepting: False

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:13
Done fitting takes time: 0.0403
==Minimized===

This DFA has 4 states
States: ['6', '13', '11', '5']
Alphabet: set(['1', '0'])
Starting state: 5
Accepting states: ['6']
Transition function:
	11	13	5	6
1 	11	11	13	13
0 	11	6	11	11
Current state: 5
Currently accepting: False

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:14
Done fitting takes time: 0.1637
==Minimized===

This DFA has 4 states
States: ['6', '13', '11', '5']
Alphabet: set(['1', '0'])
Starting state: 5
Accepting states: ['6']
Transition function:
	11	13	5	6
1 	11	11	13	13
0 	11	6	11	11
Current state: 5
Currently accepting: False

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:15
Done fitting takes time: 0.1557
==Minimized===

This DFA has 4 states
States: ['6', '13', '11', '5']
Alphabet: set(['1', '0'])
Starting state: 5
Accepting states: ['6']
Transition function:
	11	13	5	6
1 	11	11	13	13
0 	11	6	11	11
Current state: 5
Currently accepting: False

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:16
Done fitting takes time: 0.0436
==Minimized===

This DFA has 4 states
States: ['6', '13', '11', '5']
Alphabet: set(['1', '0'])
Starting state: 5
Accepting states: ['6']
Transition function:
	11	13	5	6
1 	11	11	13	13
0 	11	6	11	11
Current state: 5
Currently accepting: False

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:17
Done fitting takes time: 0.0929
==Minimized===

This DFA has 4 states
States: ['6', '13', '11', '5']
Alphabet: set(['1', '0'])
Starting state: 5
Accepting states: ['6']
Transition function:
	11	13	5	6
1 	11	11	13	13
0 	11	6	11	11
Current state: 5
Currently accepting: False

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:18
Done fitting takes time: 0.1423
==Minimized===

This DFA has 4 states
States: ['6', '13', '11', '5']
Alphabet: set(['1', '0'])
Starting state: 5
Accepting states: ['6']
Transition function:
	11	13	5	6
1 	11	11	13	13
0 	11	6	11	11
Current state: 5
Currently accepting: False

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:19
Done fitting takes time: 0.0906
==Minimized===

This DFA has 4 states
States: ['6', '13', '11', '5']
Alphabet: set(['1', '0'])
Starting state: 5
Accepting states: ['6']
Transition function:
	11	13	5	6
1 	11	11	13	13
0 	11	6	11	11
Current state: 5
Currently accepting: False

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000
[ 0.07894737  0.          0.          0.          0.          0.8         0.8
  1.          1.          1.          1.          1.          1.          1.
  1.          1.          1.          1.        ]


[[ 0.07894737  0.          0.          0.          0.          0.8         0.8
   1.          1.          1.          1.          1.          1.          1.
   1.          1.          1.          1.        ]
 [ 0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.        ]
 [ 0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.        ]
 [ 0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.        ]
 [ 0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.        ]
 [ 0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.        ]
 [ 0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.        ]
 [ 0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.        ]
 [ 0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.        ]]
