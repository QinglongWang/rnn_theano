G:g2, model:LSTM tanh, load all data and stored hidden activations


--------------------------------------------------------------------
Begin DFA extraction with n_state:2
Done fitting takes time: 0.0918
==Minimized===

This DFA has 1 states
States: ['2']
Alphabet: set(['1', '0'])
Starting state: 2
Accepting states: []
Transition function:
	2
1 	2
0 	2
Current state: 2
Currently accepting: False

Precision: 0.0000 Recall: 0.0000 Accuracy: 0.9869 F1: 0.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:3
Done fitting takes time: 0.0738
==Minimized===

This DFA has 1 states
States: ['2']
Alphabet: set(['1', '0'])
Starting state: 2
Accepting states: []
Transition function:
	2
1 	2
0 	2
Current state: 2
Currently accepting: False

Precision: 0.0000 Recall: 0.0000 Accuracy: 0.9869 F1: 0.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:4
Done fitting takes time: 0.0813
==Minimized===

This DFA has 1 states
States: ['2']
Alphabet: set(['1', '0'])
Starting state: 2
Accepting states: []
Transition function:
	2
1 	2
0 	2
Current state: 2
Currently accepting: False

Precision: 0.0000 Recall: 0.0000 Accuracy: 0.9869 F1: 0.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:5
Done fitting takes time: 0.0990
==Minimized===

This DFA has 1 states
States: ['2']
Alphabet: set(['1', '0'])
Starting state: 2
Accepting states: []
Transition function:
	2
1 	2
0 	2
Current state: 2
Currently accepting: False

Precision: 0.0000 Recall: 0.0000 Accuracy: 0.9869 F1: 0.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:6
Done fitting takes time: 0.1036
==Minimized===

This DFA has 5 states
States: ['3', '5', '6', '1', '2']
Alphabet: set(['1', '0'])
Starting state: 6
Accepting states: ['3']
Transition function:
	1	2	3	5	6
1 	2	2	5	1	5
0 	6	2	1	3	5
Current state: 6
Currently accepting: False

Precision: 0.3000 Recall: 1.0000 Accuracy: 0.9694 F1: 0.4615


--------------------------------------------------------------------
Begin DFA extraction with n_state:7
Done fitting takes time: 0.0552
==Minimized===

This DFA has 4 states
States: ['3', '5', '1', '6']
Alphabet: set(['1', '0'])
Starting state: 6
Accepting states: ['3']
Transition function:
	1	3	5	6
1 	1	5	1	5
0 	1	1	3	5
Current state: 6
Currently accepting: False

Precision: 0.6667 Recall: 1.0000 Accuracy: 0.9934 F1: 0.8000


--------------------------------------------------------------------
Begin DFA extraction with n_state:8
Done fitting takes time: 0.0765
==Minimized===

This DFA has 4 states
States: ['3', '5', '1', '6']
Alphabet: set(['1', '0'])
Starting state: 6
Accepting states: ['3']
Transition function:
	1	3	5	6
1 	1	5	1	5
0 	1	1	3	1
Current state: 6
Currently accepting: False

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:9
Done fitting takes time: 0.0454
==Minimized===

This DFA has 4 states
States: ['3', '5', '1', '6']
Alphabet: set(['1', '0'])
Starting state: 6
Accepting states: ['3']
Transition function:
	1	3	5	6
1 	1	5	1	5
0 	1	1	3	1
Current state: 6
Currently accepting: False

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:10
Done fitting takes time: 0.0975
==Minimized===

This DFA has 7 states
States: ['3', '5', '6', '1', '2', '10', '7']
Alphabet: set(['1', '0'])
Starting state: 6
Accepting states: ['3']
Transition function:
	1	10	2	3	5	6	7
1 	10	2	2	5	7	5	10
0 	6	1	2	7	3	7	1
Current state: 6
Currently accepting: False

Precision: 0.4615 Recall: 1.0000 Accuracy: 0.9847 F1: 0.6316


--------------------------------------------------------------------
Begin DFA extraction with n_state:11
Done fitting takes time: 0.1396
==Minimized===

This DFA has 4 states
States: ['3', '11', '10', '6']
Alphabet: set(['1', '0'])
Starting state: 6
Accepting states: ['3']
Transition function:
	10	11	3	6
1 	10	10	11	11
0 	10	3	10	10
Current state: 6
Currently accepting: False

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:12
Done fitting takes time: 0.0524
==Minimized===

This DFA has 4 states
States: ['3', '11', '10', '6']
Alphabet: set(['1', '0'])
Starting state: 6
Accepting states: ['3']
Transition function:
	10	11	3	6
1 	10	10	11	11
0 	10	3	10	10
Current state: 6
Currently accepting: False

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:13
Done fitting takes time: 0.1063
==Minimized===

This DFA has 4 states
States: ['3', '11', '10', '6']
Alphabet: set(['1', '0'])
Starting state: 6
Accepting states: ['3']
Transition function:
	10	11	3	6
1 	10	10	11	11
0 	10	3	10	10
Current state: 6
Currently accepting: False

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:14
Done fitting takes time: 0.0618
==Minimized===

This DFA has 4 states
States: ['3', '11', '10', '14']
Alphabet: set(['1', '0'])
Starting state: 14
Accepting states: ['3']
Transition function:
	10	11	14	3
1 	10	10	11	11
0 	10	3	10	10
Current state: 14
Currently accepting: False

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:15
Done fitting takes time: 0.0487
==Minimized===

This DFA has 4 states
States: ['3', '11', '10', '14']
Alphabet: set(['1', '0'])
Starting state: 14
Accepting states: ['3']
Transition function:
	10	11	14	3
1 	10	10	11	11
0 	10	3	10	10
Current state: 14
Currently accepting: False

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:16
Done fitting takes time: 0.0837
==Minimized===

This DFA has 4 states
States: ['3', '11', '10', '14']
Alphabet: set(['1', '0'])
Starting state: 14
Accepting states: ['3']
Transition function:
	10	11	14	3
1 	10	10	11	11
0 	10	3	10	10
Current state: 14
Currently accepting: False

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:17
Done fitting takes time: 0.0884
==Minimized===

This DFA has 4 states
States: ['3', '11', '10', '14']
Alphabet: set(['1', '0'])
Starting state: 14
Accepting states: ['3']
Transition function:
	10	11	14	3
1 	10	10	11	11
0 	10	3	10	10
Current state: 14
Currently accepting: False

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:18
Done fitting takes time: 0.0565
==Minimized===

This DFA has 4 states
States: ['3', '11', '10', '14']
Alphabet: set(['1', '0'])
Starting state: 14
Accepting states: ['3']
Transition function:
	10	11	14	3
1 	10	10	11	11
0 	10	3	10	10
Current state: 14
Currently accepting: False

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:19
Done fitting takes time: 0.0682
==Minimized===

This DFA has 4 states
States: ['3', '11', '10', '14']
Alphabet: set(['1', '0'])
Starting state: 14
Accepting states: ['3']
Transition function:
	10	11	14	3
1 	10	10	11	11
0 	10	3	10	10
Current state: 14
Currently accepting: False

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000
[ 0.          0.          0.          0.          0.46153846  0.8         1.
  1.          0.63157895  1.          1.          1.          1.          1.
  1.          1.          1.          1.        ]


[[ 0.07894737  0.          0.          0.          0.          0.          0.
   0.          0.          1.          1.          1.          1.          1.
   1.          1.          1.          1.        ]
 [ 0.          0.          0.05263158  0.          0.          0.          0.
   0.          0.          0.          0.          0.          0.          0.
   0.4         0.28571429  0.28571429  0.        ]
 [ 0.05263158  0.          0.          0.          0.          0.          0.
   1.          1.          1.          1.          1.          1.          1.
   1.          1.          1.          1.        ]
 [ 0.          0.          0.          0.          0.          0.6         0.6
   0.6         0.6         0.70588235  0.70588235  0.70588235  1.          1.
   1.          1.          1.          1.        ]
 [ 0.          0.          0.          0.          0.          0.          0.
   0.          1.          1.          1.          1.          1.          1.
   1.          1.          1.          1.        ]
 [ 0.          0.          0.          0.85714286  1.          0.8
   0.70588235  0.70588235  0.70588235  0.70588235  0.70588235  0.70588235
   0.70588235  1.          1.          1.          1.          1.        ]
 [ 0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.          0.75        1.          1.
   1.          1.          1.          1.        ]
 [ 0.          0.          0.          0.          0.46153846  0.8         1.
   1.          0.63157895  1.          1.          1.          1.          1.
   1.          1.          1.          1.        ]
 [ 0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.        ]]
