G:g2, model:MI tanh, load all data and stored hidden activations


--------------------------------------------------------------------
Begin DFA extraction with n_state:2
Done fitting takes time: 0.0412
==Minimized===

This DFA has 2 states
States: ['2', '1']
Alphabet: set(['1', '0'])
Starting state: 2
Accepting states: ['2']
Transition function:
	1	2
1 	2	2
0 	1	1
Current state: 2
Currently accepting: True

Precision: 0.0000 Recall: 0.0000 Accuracy: 0.4716 F1: 0.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:3
Done fitting takes time: 0.0359
==Minimized===

This DFA has 1 states
States: ['1']
Alphabet: set(['1', '0'])
Starting state: 1
Accepting states: []
Transition function:
	1
1 	1
0 	1
Current state: 1
Currently accepting: False

Precision: 0.0000 Recall: 0.0000 Accuracy: 0.9869 F1: 0.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:4
Done fitting takes time: 0.0875
==Minimized===

This DFA has 1 states
States: ['1']
Alphabet: set(['1', '0'])
Starting state: 1
Accepting states: []
Transition function:
	1
1 	1
0 	1
Current state: 1
Currently accepting: False

Precision: 0.0000 Recall: 0.0000 Accuracy: 0.9869 F1: 0.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:5
Done fitting takes time: 0.1062
==Minimized===

This DFA has 1 states
States: ['1']
Alphabet: set(['1', '0'])
Starting state: 1
Accepting states: []
Transition function:
	1
1 	1
0 	1
Current state: 1
Currently accepting: False

Precision: 0.0000 Recall: 0.0000 Accuracy: 0.9869 F1: 0.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:6
Done fitting takes time: 0.0497
==Minimized===

This DFA has 1 states
States: ['1']
Alphabet: set(['1', '0'])
Starting state: 1
Accepting states: []
Transition function:
	1
1 	1
0 	1
Current state: 1
Currently accepting: False

Precision: 0.0000 Recall: 0.0000 Accuracy: 0.9869 F1: 0.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:7
Done fitting takes time: 0.0863
==Minimized===

This DFA has 1 states
States: ['2']
Alphabet: set(['1', '0'])
Starting state: 2
Accepting states: []
Transition function:
	2
1 	2
0 	2
Current state: 2
Currently accepting: False

Precision: 0.0000 Recall: 0.0000 Accuracy: 0.9869 F1: 0.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:8
Done fitting takes time: 0.0562
==Minimized===

This DFA has 1 states
States: ['5']
Alphabet: set(['1', '0'])
Starting state: 5
Accepting states: []
Transition function:
	5
1 	5
0 	5
Current state: 5
Currently accepting: False

Precision: 0.0000 Recall: 0.0000 Accuracy: 0.9869 F1: 0.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:9
Done fitting takes time: 0.0600
==Minimized===

This DFA has 4 states
States: ['6', '9', '5', '4']
Alphabet: set(['1', '0'])
Starting state: 5
Accepting states: ['6']
Transition function:
	4	5	6	9
1 	5	9	9	5
0 	5	4	4	6
Current state: 5
Currently accepting: False

Precision: 0.1034 Recall: 1.0000 Accuracy: 0.8865 F1: 0.1875


--------------------------------------------------------------------
Begin DFA extraction with n_state:10
Done fitting takes time: 0.0608
==Minimized===

This DFA has 6 states
States: ['6', '9', '5', '4', '10', '2']
Alphabet: set(['1', '0'])
Starting state: 5
Accepting states: ['6']
Transition function:
	10	2	4	5	6	9
1 	2	2	5	9	9	5
0 	5	2	5	4	10	6
Current state: 5
Currently accepting: False

Precision: 0.1395 Recall: 1.0000 Accuracy: 0.9192 F1: 0.2449


--------------------------------------------------------------------
Begin DFA extraction with n_state:11
Done fitting takes time: 0.1316
==Minimized===

This DFA has 6 states
States: ['6', '9', '5', '11', '10', '2']
Alphabet: set(['1', '0'])
Starting state: 5
Accepting states: ['6']
Transition function:
	10	11	2	5	6	9
1 	2	5	2	9	9	11
0 	5	10	2	10	10	6
Current state: 5
Currently accepting: False

Precision: 0.3750 Recall: 1.0000 Accuracy: 0.9782 F1: 0.5455


--------------------------------------------------------------------
Begin DFA extraction with n_state:12
Done fitting takes time: 0.1243
==Minimized===

This DFA has 6 states
States: ['6', '9', '5', '11', '10', '4']
Alphabet: set(['1', '0'])
Starting state: 5
Accepting states: ['6']
Transition function:
	10	11	4	5	6	9
1 	10	5	10	9	9	11
0 	10	10	5	4	10	6
Current state: 5
Currently accepting: False

Precision: 0.5455 Recall: 1.0000 Accuracy: 0.9891 F1: 0.7059


--------------------------------------------------------------------
Begin DFA extraction with n_state:13
Done fitting takes time: 0.0639
==Minimized===

This DFA has 6 states
States: ['6', '9', '5', '11', '10', '4']
Alphabet: set(['1', '0'])
Starting state: 5
Accepting states: ['6']
Transition function:
	10	11	4	5	6	9
1 	10	5	10	9	9	11
0 	10	10	5	4	10	6
Current state: 5
Currently accepting: False

Precision: 0.5455 Recall: 1.0000 Accuracy: 0.9891 F1: 0.7059


--------------------------------------------------------------------
Begin DFA extraction with n_state:14
Done fitting takes time: 0.1908
==Minimized===

This DFA has 5 states
States: ['6', '9', '5', '11', '4']
Alphabet: set(['1', '0'])
Starting state: 5
Accepting states: ['6']
Transition function:
	11	4	5	6	9
1 	11	11	9	9	11
0 	11	5	4	11	6
Current state: 5
Currently accepting: False

Precision: 0.7500 Recall: 1.0000 Accuracy: 0.9956 F1: 0.8571


--------------------------------------------------------------------
Begin DFA extraction with n_state:15
Done fitting takes time: 0.0697
==Minimized===

This DFA has 5 states
States: ['6', '9', '5', '11', '4']
Alphabet: set(['1', '0'])
Starting state: 5
Accepting states: ['6']
Transition function:
	11	4	5	6	9
1 	11	11	9	11	11
0 	11	5	4	11	6
Current state: 5
Currently accepting: False

Precision: 0.5000 Recall: 0.1667 Accuracy: 0.9869 F1: 0.2500


--------------------------------------------------------------------
Begin DFA extraction with n_state:16
Done fitting takes time: 0.0553
==Minimized===

This DFA has 6 states
States: ['6', '9', '5', '11', '10', '4']
Alphabet: set(['1', '0'])
Starting state: 5
Accepting states: ['6']
Transition function:
	10	11	4	5	6	9
1 	10	5	10	9	10	11
0 	10	10	5	4	10	6
Current state: 5
Currently accepting: False

Precision: 0.3333 Recall: 0.1667 Accuracy: 0.9847 F1: 0.2222


--------------------------------------------------------------------
Begin DFA extraction with n_state:17
Done fitting takes time: 0.0569
==Minimized===

This DFA has 5 states
States: ['6', '9', '5', '11', '4']
Alphabet: set(['1', '0'])
Starting state: 5
Accepting states: ['6']
Transition function:
	11	4	5	6	9
1 	11	11	9	11	11
0 	11	5	4	11	6
Current state: 5
Currently accepting: False

Precision: 0.5000 Recall: 0.1667 Accuracy: 0.9869 F1: 0.2500


--------------------------------------------------------------------
Begin DFA extraction with n_state:18
Done fitting takes time: 0.0608
==Minimized===

This DFA has 5 states
States: ['6', '9', '5', '11', '4']
Alphabet: set(['1', '0'])
Starting state: 5
Accepting states: ['6']
Transition function:
	11	4	5	6	9
1 	11	11	9	11	11
0 	11	5	4	11	6
Current state: 5
Currently accepting: False

Precision: 0.5000 Recall: 0.1667 Accuracy: 0.9869 F1: 0.2500


--------------------------------------------------------------------
Begin DFA extraction with n_state:19
Done fitting takes time: 0.1582
==Minimized===

This DFA has 5 states
States: ['6', '9', '5', '11', '4']
Alphabet: set(['1', '0'])
Starting state: 5
Accepting states: ['6']
Transition function:
	11	4	5	6	9
1 	11	11	9	11	11
0 	11	5	4	11	6
Current state: 5
Currently accepting: False

Precision: 0.5000 Recall: 0.1667 Accuracy: 0.9869 F1: 0.2500
[ 0.          0.          0.          0.          0.          0.          0.
  0.1875      0.24489796  0.54545455  0.70588235  0.70588235  0.85714286
  0.25        0.22222222  0.25        0.25        0.25      ]


[[ 0.          0.          0.          0.          0.          0.          0.75
   0.8         0.75        0.75        1.          1.          1.          1.
   1.          1.          1.          1.        ]
 [ 0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.          0.          0.06382979
   0.05660377  0.          0.          0.          0.        ]
 [ 0.05263158  0.05263158  0.          1.          1.          1.          1.
   1.          1.          1.          1.          1.          1.          1.
   1.          1.          1.          1.        ]
 [ 0.          0.          0.          0.          0.66666667  0.
   0.70588235  0.70588235  1.          1.          0.          1.          1.
   1.          1.          1.          1.          1.        ]
 [ 0.05263158  0.          0.          0.          0.          0.85714286
   0.85714286  1.          1.          1.          1.          1.          1.
   1.          1.          1.          1.          1.        ]
 [ 0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.          0.          1.          1.
   1.          1.          1.          1.        ]
 [ 0.          0.          0.          0.          0.          0.          0.
   0.1875      0.24489796  0.54545455  0.70588235  0.70588235  0.85714286
   0.25        0.22222222  0.25        0.25        0.25      ]
 [ 0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.        ]
 [ 0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.        ]]
