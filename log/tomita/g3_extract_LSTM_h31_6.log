G:g3, model:LSTM tanh, load all data and stored hidden activations


--------------------------------------------------------------------
Begin DFA extraction with n_state:2
Done fitting takes time: 0.2133
==Minimized===

This DFA has 1 states
States: ['2']
Alphabet: set(['1', '0'])
Starting state: 2
Accepting states: []
Transition function:
	2
1 	2
0 	2
Current state: 2
Currently accepting: False

Precision: 0.0000 Recall: 0.0000 Accuracy: 0.5422 F1: 0.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:3
Done fitting takes time: 0.1986
==Minimized===

This DFA has 1 states
States: ['2']
Alphabet: set(['1', '0'])
Starting state: 2
Accepting states: []
Transition function:
	2
1 	2
0 	2
Current state: 2
Currently accepting: False

Precision: 0.0000 Recall: 0.0000 Accuracy: 0.5422 F1: 0.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:4
Done fitting takes time: 0.2483
==Minimized===

This DFA has 1 states
States: ['3']
Alphabet: set(['1', '0'])
Starting state: 3
Accepting states: []
Transition function:
	3
1 	3
0 	3
Current state: 3
Currently accepting: False

Precision: 0.0000 Recall: 0.0000 Accuracy: 0.5422 F1: 0.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:5
Done fitting takes time: 0.3846
==Minimized===

This DFA has 3 states
States: ['4', '1', '3']
Alphabet: set(['1', '0'])
Starting state: 4
Accepting states: ['4']
Transition function:
	1	3	4
1 	1	1	4
0 	1	4	3
Current state: 4
Currently accepting: True

Precision: 1.0000 Recall: 0.2980 Accuracy: 0.6787 F1: 0.4592


--------------------------------------------------------------------
Begin DFA extraction with n_state:6
Done fitting takes time: 0.2199
==Minimized===

This DFA has 3 states
States: ['4', '1', '3']
Alphabet: set(['1', '0'])
Starting state: 4
Accepting states: ['4']
Transition function:
	1	3	4
1 	1	1	4
0 	1	4	3
Current state: 4
Currently accepting: True

Precision: 1.0000 Recall: 0.2980 Accuracy: 0.6787 F1: 0.4592


--------------------------------------------------------------------
Begin DFA extraction with n_state:7
Done fitting takes time: 0.5557
==Minimized===

This DFA has 4 states
States: ['2', '7', '1', '3']
Alphabet: set(['1', '0'])
Starting state: 2
Accepting states: ['2', '7']
Transition function:
	1	2	3	7
1 	1	7	1	2
0 	1	2	2	3
Current state: 2
Currently accepting: True

Precision: 0.8304 Recall: 1.0000 Accuracy: 0.9065 F1: 0.9073


--------------------------------------------------------------------
Begin DFA extraction with n_state:8
Done fitting takes time: 0.6708
==Minimized===

This DFA has 4 states
States: ['2', '7', '1', '3']
Alphabet: set(['1', '0'])
Starting state: 2
Accepting states: ['2', '7']
Transition function:
	1	2	3	7
1 	1	7	1	2
0 	1	2	2	3
Current state: 2
Currently accepting: True

Precision: 0.8304 Recall: 1.0000 Accuracy: 0.9065 F1: 0.9073


--------------------------------------------------------------------
Begin DFA extraction with n_state:9
Done fitting takes time: 0.4351
==Minimized===

This DFA has 4 states
States: ['9', '8', '3', '4']
Alphabet: set(['1', '0'])
Starting state: 9
Accepting states: ['9', '8']
Transition function:
	3	4	8	9
1 	4	8	9	8
0 	4	3	3	9
Current state: 9
Currently accepting: True

Precision: 0.6222 Recall: 0.8205 Accuracy: 0.6898 F1: 0.7077


--------------------------------------------------------------------
Begin DFA extraction with n_state:10
Done fitting takes time: 0.4357
==Minimized===

This DFA has 5 states
States: ['2', '4', '7', '10', '3']
Alphabet: set(['1', '0'])
Starting state: 2
Accepting states: ['2', '4', '7']
Transition function:
	10	2	3	4	7
1 	10	7	10	4	2
0 	10	2	4	3	3
Current state: 2
Currently accepting: True

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:11
Done fitting takes time: 0.7229
==Minimized===

This DFA has 5 states
States: ['2', '11', '7', '3', '4']
Alphabet: set(['1', '0'])
Starting state: 2
Accepting states: ['11', '2', '7']
Transition function:
	11	2	3	4	7
1 	2	11	4	7	7
0 	3	2	4	3	3
Current state: 2
Currently accepting: True

Precision: 0.6966 Recall: 0.7756 Accuracy: 0.7426 F1: 0.7340


--------------------------------------------------------------------
Begin DFA extraction with n_state:12
Done fitting takes time: 0.8374
==Minimized===

This DFA has 5 states
States: ['2', '12', '4', '10', '3']
Alphabet: set(['1', '0'])
Starting state: 2
Accepting states: ['12', '2', '4']
Transition function:
	10	12	2	3	4
1 	10	2	12	10	4
0 	10	3	2	4	3
Current state: 2
Currently accepting: True

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:13
Done fitting takes time: 0.9829
==Minimized===

This DFA has 5 states
States: ['2', '11', '4', '10', '3']
Alphabet: set(['1', '0'])
Starting state: 2
Accepting states: ['11', '2', '4']
Transition function:
	10	11	2	3	4
1 	10	2	11	10	4
0 	10	3	2	4	3
Current state: 2
Currently accepting: True

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:14
Done fitting takes time: 1.0358
==Minimized===

This DFA has 6 states
States: ['2', '11', '7', '14', '3', '4']
Alphabet: set(['1', '0'])
Starting state: 14
Accepting states: ['11', '2', '7']
Transition function:
	11	14	2	3	4	7
1 	2	11	11	4	7	7
0 	3	2	2	4	3	3
Current state: 14
Currently accepting: False

Precision: 0.6966 Recall: 0.7756 Accuracy: 0.7426 F1: 0.7340


--------------------------------------------------------------------
Begin DFA extraction with n_state:15
Done fitting takes time: 0.6477
==Minimized===

This DFA has 6 states
States: ['15', '11', '7', '14', '3', '4']
Alphabet: set(['1', '0'])
Starting state: 14
Accepting states: ['11', '15', '7']
Transition function:
	11	14	15	3	4	7
1 	15	11	11	4	7	7
0 	3	15	15	4	3	3
Current state: 14
Currently accepting: False

Precision: 0.6966 Recall: 0.7756 Accuracy: 0.7426 F1: 0.7340


--------------------------------------------------------------------
Begin DFA extraction with n_state:16
Done fitting takes time: 0.7787
==Minimized===

This DFA has 6 states
States: ['15', '11', '4', '14', '10', '3']
Alphabet: set(['1', '0'])
Starting state: 14
Accepting states: ['11', '15', '4']
Transition function:
	10	11	14	15	3	4
1 	10	15	11	11	10	4
0 	10	3	15	15	4	3
Current state: 14
Currently accepting: False

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:17
Done fitting takes time: 0.7028
==Minimized===

This DFA has 6 states
States: ['15', '11', '17', '14', '10', '3']
Alphabet: set(['1', '0'])
Starting state: 14
Accepting states: ['11', '15', '17']
Transition function:
	10	11	14	15	17	3
1 	10	15	11	11	17	10
0 	10	3	15	15	3	17
Current state: 14
Currently accepting: False

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:18
Done fitting takes time: 0.2406
==Minimized===

This DFA has 6 states
States: ['15', '11', '17', '14', '10', '3']
Alphabet: set(['1', '0'])
Starting state: 14
Accepting states: ['11', '15', '17']
Transition function:
	10	11	14	15	17	3
1 	10	15	11	11	17	10
0 	10	3	15	15	3	17
Current state: 14
Currently accepting: False

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:19
Done fitting takes time: 0.5185
==Minimized===

This DFA has 6 states
States: ['15', '11', '17', '14', '10', '3']
Alphabet: set(['1', '0'])
Starting state: 14
Accepting states: ['11', '15', '17']
Transition function:
	10	11	14	15	17	3
1 	10	15	11	11	17	10
0 	10	3	15	15	3	17
Current state: 14
Currently accepting: False

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000
[ 0.          0.          0.          0.45920746  0.45920746  0.90734386
  0.90734386  0.707699    1.          0.73395371  1.          1.
  0.73395371  0.73395371  1.          1.          1.          1.        ]


[[ 0.          0.          0.6280285   0.6280285   0.6280285   0.6280285
   0.6280285   0.6280285   0.6280285   0.6280285   0.90734386  0.90734386
   1.          1.          1.          1.          1.          1.        ]
 [ 0.          0.          0.          0.          0.          0.          0.
   0.48617176  0.48706385  0.22262248  0.4619985   0.48415535  0.48706385
   0.          0.          0.45648443  0.45648443  0.53894081]
 [ 0.01203008  0.0110331   0.45920746  0.45920746  1.          1.          1.
   1.          1.          1.          1.          1.          1.          1.
   1.          1.          1.          1.        ]
 [ 0.          0.0110331   0.63898421  0.6280285   0.63898421  1.          1.
   1.          1.          1.          1.          1.          1.          1.
   1.          1.          1.          1.        ]
 [ 0.6280285   0.55354659  0.47577413  0.45920746  0.45920746  0.45920746
   1.          1.          1.          1.          1.          1.          1.
   1.          1.          1.          1.          1.        ]
 [ 0.01203008  0.          0.          0.94767025  1.          1.          1.
   1.          1.          1.          1.          1.          1.          1.
   1.          1.          1.          1.        ]
 [ 0.          0.          0.          0.61434263  0.61434263  0.61434263
   0.61434263  0.61434263  0.61633466  0.81638288  0.90734386  0.81638288
   0.76811204  0.64702613  0.73268058  1.          0.89223847  1.        ]
 [ 0.          0.          0.          0.45920746  0.45920746  0.90734386
   0.90734386  0.707699    1.          0.73395371  1.          1.
   0.73395371  0.73395371  1.          1.          1.          1.        ]
 [ 0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.        ]]
