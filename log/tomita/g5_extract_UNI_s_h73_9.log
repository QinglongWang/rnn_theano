G:g5, model:UNI sigmoid, load all data and stored hidden activations


--------------------------------------------------------------------
Begin DFA extraction with n_state:2
Done fitting takes time: 0.8058
==Minimized===

This DFA has 1 states
States: ['1']
Alphabet: set(['1', '0'])
Starting state: 1
Accepting states: []
Transition function:
	1
1 	1
0 	1
Current state: 1
Currently accepting: False

Precision: 0.0000 Recall: 0.0000 Accuracy: 0.5097 F1: 0.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:3
Done fitting takes time: 0.4681
==Minimized===

This DFA has 1 states
States: ['1']
Alphabet: set(['1', '0'])
Starting state: 1
Accepting states: []
Transition function:
	1
1 	1
0 	1
Current state: 1
Currently accepting: False

Precision: 0.0000 Recall: 0.0000 Accuracy: 0.5097 F1: 0.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:4
Done fitting takes time: 0.4878
==Minimized===

This DFA has 2 states
States: ['1', '2']
Alphabet: set(['1', '0'])
Starting state: 1
Accepting states: ['1']
Transition function:
	1	2
1 	2	1
0 	2	1
Current state: 1
Currently accepting: True

Precision: 0.5040 Recall: 1.0000 Accuracy: 0.5174 F1: 0.6702


--------------------------------------------------------------------
Begin DFA extraction with n_state:5
Done fitting takes time: 0.5189
==Minimized===

This DFA has 2 states
States: ['1', '2']
Alphabet: set(['1', '0'])
Starting state: 1
Accepting states: ['1']
Transition function:
	1	2
1 	2	1
0 	2	1
Current state: 1
Currently accepting: True

Precision: 0.5040 Recall: 1.0000 Accuracy: 0.5174 F1: 0.6702


--------------------------------------------------------------------
Begin DFA extraction with n_state:6
Done fitting takes time: 0.5046
==Minimized===

This DFA has 3 states
States: ['5', '2', '6']
Alphabet: set(['1', '0'])
Starting state: 5
Accepting states: ['5']
Transition function:
	2	5	6
1 	6	2	2
0 	5	2	2
Current state: 5
Currently accepting: True

Precision: 0.5109 Recall: 0.5056 Accuracy: 0.5202 F1: 0.5083


--------------------------------------------------------------------
Begin DFA extraction with n_state:7
Done fitting takes time: 0.8895
==Minimized===

This DFA has 5 states
States: ['7', '1', '4', '2', '6']
Alphabet: set(['1', '0'])
Starting state: 4
Accepting states: ['1', '4', '7']
Transition function:
	1	2	4	6	7
1 	2	6	2	2	1
0 	7	1	2	7	1
Current state: 4
Currently accepting: True

Precision: 0.5017 Recall: 0.7604 Accuracy: 0.5121 F1: 0.6045


--------------------------------------------------------------------
Begin DFA extraction with n_state:8
Done fitting takes time: 0.5032
==Minimized===

This DFA has 6 states
States: ['1', '7', '2', '6', '5', '4']
Alphabet: set(['1', '0'])
Starting state: 4
Accepting states: ['1', '5', '4', '7']
Transition function:
	1	2	4	5	6	7
1 	7	6	2	2	2	1
0 	7	5	2	7	7	5
Current state: 4
Currently accepting: True

Precision: 0.4978 Recall: 0.8420 Accuracy: 0.5060 F1: 0.6257


--------------------------------------------------------------------
Begin DFA extraction with n_state:9
Done fitting takes time: 0.8501
==Minimized===

This DFA has 6 states
States: ['1', '7', '2', '6', '5', '4']
Alphabet: set(['1', '0'])
Starting state: 4
Accepting states: ['1', '5', '4', '7']
Transition function:
	1	2	4	5	6	7
1 	7	6	2	2	2	1
0 	7	5	2	7	7	5
Current state: 4
Currently accepting: True

Precision: 0.4978 Recall: 0.8420 Accuracy: 0.5060 F1: 0.6257


--------------------------------------------------------------------
Begin DFA extraction with n_state:10
Done fitting takes time: 0.5197
==Minimized===

This DFA has 5 states
States: ['10', '1', '7', '2', '5']
Alphabet: set(['1', '0'])
Starting state: 10
Accepting states: ['10', '1', '7']
Transition function:
	1	10	2	5	7
1 	7	2	5	2	1
0 	7	2	5	7	5
Current state: 10
Currently accepting: True

Precision: 0.4793 Recall: 0.3364 Accuracy: 0.4954 F1: 0.3953


--------------------------------------------------------------------
Begin DFA extraction with n_state:11
Done fitting takes time: 0.9267
==Minimized===

This DFA has 7 states
States: ['11', '10', '2', '6', '5', '1', '7']
Alphabet: set(['1', '0'])
Starting state: 10
Accepting states: ['11', '10', '1', '5', '7']
Transition function:
	1	10	11	2	5	6	7
1 	7	2	6	10	11	11	1
0 	7	2	10	5	7	7	5
Current state: 10
Currently accepting: True

Precision: 0.4961 Recall: 0.8812 Accuracy: 0.5028 F1: 0.6348


--------------------------------------------------------------------
Begin DFA extraction with n_state:12
Done fitting takes time: 0.5231
==Minimized===

This DFA has 7 states
States: ['11', '10', '2', '6', '5', '12', '7']
Alphabet: set(['1', '0'])
Starting state: 10
Accepting states: ['11', '10', '12', '5', '7']
Transition function:
	10	11	12	2	5	6	7
1 	2	6	7	10	11	11	12
0 	2	10	7	5	7	7	5
Current state: 10
Currently accepting: True

Precision: 0.4961 Recall: 0.8812 Accuracy: 0.5028 F1: 0.6348


--------------------------------------------------------------------
Begin DFA extraction with n_state:13
Done fitting takes time: 0.9931
==Minimized===

This DFA has 7 states
States: ['11', '10', '2', '5', '13', '12', '7']
Alphabet: set(['1', '0'])
Starting state: 10
Accepting states: ['11', '10', '13', '12', '7']
Transition function:
	10	11	12	13	2	5	7
1 	2	5	7	12	10	11	12
0 	2	10	13	10	5	7	5
Current state: 10
Currently accepting: True

Precision: 0.4910 Recall: 0.5570 Accuracy: 0.4996 F1: 0.5219


--------------------------------------------------------------------
Begin DFA extraction with n_state:14
Done fitting takes time: 1.2744
==Minimized===

This DFA has 2 states
States: ['10', '2']
Alphabet: set(['1', '0'])
Starting state: 10
Accepting states: ['10']
Transition function:
	10	2
1 	2	10
0 	2	10
Current state: 10
Currently accepting: True

Precision: 0.5040 Recall: 1.0000 Accuracy: 0.5174 F1: 0.6702


--------------------------------------------------------------------
Begin DFA extraction with n_state:15
Done fitting takes time: 0.5487
==Minimized===

This DFA has 9 states
States: ['11', '10', '15', '2', '13', '12', '9', '7', '8']
Alphabet: set(['1', '0'])
Starting state: 10
Accepting states: ['11', '10', '13', '12', '7', '9', '8']
Transition function:
	10	11	12	13	15	2	7	8	9
1 	2	15	8	9	11	10	12	9	8
0 	2	10	7	13	7	15	15	15	13
Current state: 10
Currently accepting: True

Precision: 0.4845 Recall: 0.5412 Accuracy: 0.4927 F1: 0.5113


--------------------------------------------------------------------
Begin DFA extraction with n_state:16
Done fitting takes time: 1.0015
==Minimized===

This DFA has 8 states
States: ['11', '10', '15', '6', '12', '7', '16', '2']
Alphabet: set(['1', '0'])
Starting state: 10
Accepting states: ['11', '10', '12', '7']
Transition function:
	10	11	12	15	16	2	6	7
1 	2	6	7	11	12	10	11	12
0 	2	10	7	16	15	15	7	15
Current state: 10
Currently accepting: True

Precision: 0.4903 Recall: 0.5018 Accuracy: 0.4999 F1: 0.4960


--------------------------------------------------------------------
Begin DFA extraction with n_state:17
Done fitting takes time: 0.5472
==Minimized===

This DFA has 8 states
States: ['11', '10', '15', '6', '12', '7', '16', '2']
Alphabet: set(['1', '0'])
Starting state: 10
Accepting states: ['11', '10', '12', '7']
Transition function:
	10	11	12	15	16	2	6	7
1 	2	6	7	11	12	10	11	12
0 	2	10	7	16	15	15	7	15
Current state: 10
Currently accepting: True

Precision: 0.4903 Recall: 0.5018 Accuracy: 0.4999 F1: 0.4960


--------------------------------------------------------------------
Begin DFA extraction with n_state:18
Done fitting takes time: 1.2269
==Minimized===

This DFA has 8 states
States: ['11', '10', '15', '6', '12', '7', '16', '2']
Alphabet: set(['1', '0'])
Starting state: 10
Accepting states: ['11', '10', '12', '7']
Transition function:
	10	11	12	15	16	2	6	7
1 	2	6	7	11	12	10	11	12
0 	2	10	7	16	15	15	7	15
Current state: 10
Currently accepting: True

Precision: 0.4903 Recall: 0.5018 Accuracy: 0.4999 F1: 0.4960


--------------------------------------------------------------------
Begin DFA extraction with n_state:19
Done fitting takes time: 1.1908
==Minimized===

This DFA has 8 states
States: ['12', '7', '16', '15', '17', '2', '11', '10']
Alphabet: set(['1', '0'])
Starting state: 10
Accepting states: ['11', '10', '12', '7']
Transition function:
	10	11	12	15	16	17	2	7
1 	2	17	7	11	12	11	10	12
0 	11	10	7	16	15	7	15	15
Current state: 10
Currently accepting: True

Precision: 0.6836 Recall: 0.7143 Accuracy: 0.6978 F1: 0.6986
[ 0.          0.          0.67020677  0.67020677  0.50826596  0.60450468
  0.62569135  0.62569135  0.39531603  0.63478336  0.63478336  0.52193476
  0.67020677  0.51128502  0.49596583  0.49596583  0.49596583  0.69860279]


[[ 0.          0.          0.          0.          0.          0.          0.
   0.          0.31709742  0.          0.          0.          0.          0.
   0.23880597  0.16176769  0.41240876  0.15698023]
 [ 0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.42464031  0.42464031  0.42464031  0.          0.
   0.42263312  0.          0.          0.        ]
 [ 0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.        ]
 [ 0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.        ]
 [ 0.          0.          0.67020677  0.67020677  0.50826596  0.60450468
   0.62569135  0.62569135  0.39531603  0.63478336  0.63478336  0.52193476
   0.67020677  0.51128502  0.49596583  0.49596583  0.49596583  0.69860279]
 [ 0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.        ]
 [ 0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.        ]
 [ 0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.        ]
 [ 0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.        ]]
