G:g6, model:GRU tanh, load all data and stored hidden activations


--------------------------------------------------------------------
Begin DFA extraction with n_state:2
Done fitting takes time: 0.7124
==Minimized===

This DFA has 1 states
States: ['1']
Alphabet: set(['1', '0'])
Starting state: 1
Accepting states: []
Transition function:
	1
1 	1
0 	1
Current state: 1
Currently accepting: False

Precision: 0.0000 Recall: 0.0000 Accuracy: 0.5177 F1: 0.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:3
Done fitting takes time: 0.6622
==Minimized===

This DFA has 1 states
States: ['3']
Alphabet: set(['1', '0'])
Starting state: 3
Accepting states: []
Transition function:
	3
1 	3
0 	3
Current state: 3
Currently accepting: False

Precision: 0.0000 Recall: 0.0000 Accuracy: 0.5177 F1: 0.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:4
Done fitting takes time: 1.1646
==Minimized===

This DFA has 1 states
States: ['3']
Alphabet: set(['1', '0'])
Starting state: 3
Accepting states: []
Transition function:
	3
1 	3
0 	3
Current state: 3
Currently accepting: False

Precision: 0.0000 Recall: 0.0000 Accuracy: 0.5177 F1: 0.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:5
Done fitting takes time: 1.5938
==Minimized===

This DFA has 1 states
States: ['3']
Alphabet: set(['1', '0'])
Starting state: 3
Accepting states: []
Transition function:
	3
1 	3
0 	3
Current state: 3
Currently accepting: False

Precision: 0.0000 Recall: 0.0000 Accuracy: 0.5177 F1: 0.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:6
Done fitting takes time: 1.6741
==Minimized===

This DFA has 1 states
States: ['3']
Alphabet: set(['1', '0'])
Starting state: 3
Accepting states: []
Transition function:
	3
1 	3
0 	3
Current state: 3
Currently accepting: False

Precision: 0.0000 Recall: 0.0000 Accuracy: 0.5177 F1: 0.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:7
Done fitting takes time: 1.9138
==Minimized===

This DFA has 2 states
States: ['3', '5']
Alphabet: set(['1', '0'])
Starting state: 3
Accepting states: ['3']
Transition function:
	3	5
1 	5	5
0 	3	5
Current state: 3
Currently accepting: True

Precision: 0.3333 Recall: 0.0007 Accuracy: 0.5174 F1: 0.0014


--------------------------------------------------------------------
Begin DFA extraction with n_state:8
Done fitting takes time: 1.6356
==Minimized===

This DFA has 2 states
States: ['3', '4']
Alphabet: set(['1', '0'])
Starting state: 3
Accepting states: ['3']
Transition function:
	3	4
1 	4	4
0 	4	4
Current state: 3
Currently accepting: True

Precision: 0.0000 Recall: 0.0000 Accuracy: 0.5177 F1: 0.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:9
Done fitting takes time: 1.6636
==Minimized===

This DFA has 2 states
States: ['9', '4']
Alphabet: set(['1', '0'])
Starting state: 9
Accepting states: ['9']
Transition function:
	4	9
1 	4	4
0 	4	9
Current state: 9
Currently accepting: True

Precision: 0.3333 Recall: 0.0007 Accuracy: 0.5174 F1: 0.0014


--------------------------------------------------------------------
Begin DFA extraction with n_state:10
Done fitting takes time: 2.1426
==Minimized===

This DFA has 1 states
States: ['10']
Alphabet: set(['1', '0'])
Starting state: 10
Accepting states: []
Transition function:
	10
1 	10
0 	10
Current state: 10
Currently accepting: False

Precision: 0.0000 Recall: 0.0000 Accuracy: 0.5177 F1: 0.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:11
Done fitting takes time: 1.7188
==Minimized===

This DFA has 1 states
States: ['10']
Alphabet: set(['1', '0'])
Starting state: 10
Accepting states: []
Transition function:
	10
1 	10
0 	10
Current state: 10
Currently accepting: False

Precision: 0.0000 Recall: 0.0000 Accuracy: 0.5177 F1: 0.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:12
Done fitting takes time: 1.9638
==Minimized===

This DFA has 1 states
States: ['10']
Alphabet: set(['1', '0'])
Starting state: 10
Accepting states: []
Transition function:
	10
1 	10
0 	10
Current state: 10
Currently accepting: False

Precision: 0.0000 Recall: 0.0000 Accuracy: 0.5177 F1: 0.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:13
Done fitting takes time: 1.5158
==Minimized===

This DFA has 4 states
States: ['7', '4', '10', '13']
Alphabet: set(['1', '0'])
Starting state: 10
Accepting states: ['10', '13', '4']
Transition function:
	10	13	4	7
1 	10	4	4	7
0 	13	13	7	7
Current state: 10
Currently accepting: True

Precision: 0.4156 Recall: 0.0167 Accuracy: 0.5145 F1: 0.0322


--------------------------------------------------------------------
Begin DFA extraction with n_state:14
Done fitting takes time: 1.2193
==Minimized===

This DFA has 9 states
States: ['10', '3', '2', '13', '14', '7', '9', '5', '4']
Alphabet: set(['1', '0'])
Starting state: 10
Accepting states: ['10', '13', '14', '5', '4', '7', '9']
Transition function:
	10	13	14	2	3	4	5	7	9
1 	14	2	4	5	3	4	5	3	3
0 	10	2	13	2	3	7	9	7	3
Current state: 10
Currently accepting: True

Precision: 0.4496 Recall: 0.0404 Accuracy: 0.5134 F1: 0.0742


--------------------------------------------------------------------
Begin DFA extraction with n_state:15
Done fitting takes time: 1.8272
==Minimized===

This DFA has 6 states
States: ['15', '10', '13', '14', '2', '4']
Alphabet: set(['1', '0'])
Starting state: 10
Accepting states: ['10', '13', '14', '2', '4']
Transition function:
	10	13	14	15	2	4
1 	14	4	4	15	15	15
0 	10	2	13	15	2	15
Current state: 10
Currently accepting: True

Precision: 0.3649 Recall: 0.0047 Accuracy: 0.5161 F1: 0.0093


--------------------------------------------------------------------
Begin DFA extraction with n_state:16
Done fitting takes time: 0.7730
==Minimized===

This DFA has 7 states
States: ['15', '10', '7', '2', '4', '13', '14']
Alphabet: set(['1', '0'])
Starting state: 10
Accepting states: ['10', '13', '14', '2', '4', '7']
Transition function:
	10	13	14	15	2	4	7
1 	14	4	4	15	15	15	7
0 	10	2	13	15	2	7	15
Current state: 10
Currently accepting: True

Precision: 0.3881 Recall: 0.0091 Accuracy: 0.5152 F1: 0.0177


--------------------------------------------------------------------
Begin DFA extraction with n_state:17
Done fitting takes time: 2.3696
==Minimized===

This DFA has 8 states
States: ['13', '16', '7', '2', '14', '17', '11', '10']
Alphabet: set(['1', '0'])
Starting state: 10
Accepting states: ['13', '14', '17', '16', '7']
Transition function:
	10	11	13	14	16	17	2	7
1 	10	11	2	16	16	14	7	7
0 	17	11	2	13	11	13	2	16
Current state: 10
Currently accepting: False

Precision: 0.4590 Recall: 0.0762 Accuracy: 0.5112 F1: 0.1306


--------------------------------------------------------------------
Begin DFA extraction with n_state:18
Done fitting takes time: 2.4905
==Minimized===

This DFA has 6 states
States: ['13', '4', '10', '2', '14', '17']
Alphabet: set(['1', '0'])
Starting state: 10
Accepting states: ['13', '14', '17', '4']
Transition function:
	10	13	14	17	2	4
1 	10	2	4	14	2	4
0 	17	2	13	13	2	2
Current state: 10
Currently accepting: False

Precision: 0.3582 Recall: 0.0042 Accuracy: 0.5161 F1: 0.0083


--------------------------------------------------------------------
Begin DFA extraction with n_state:19
Done fitting takes time: 1.8138
==Minimized===

This DFA has 9 states
States: ['15', '16', '4', '10', '17', '2', '5', '13', '14']
Alphabet: set(['1', '0'])
Starting state: 10
Accepting states: ['10', '13', '14', '17', '16', '2', '5', '4']
Transition function:
	10	13	14	15	16	17	2	4	5
1 	10	4	4	15	15	14	5	5	5
0 	17	2	13	15	15	13	15	5	16
Current state: 10
Currently accepting: True

Precision: 0.4324 Recall: 0.0340 Accuracy: 0.5126 F1: 0.0630
[ 0.          0.          0.          0.          0.          0.0013913   0.
  0.0013913   0.          0.          0.          0.03216619  0.07419252
  0.00929112  0.01771117  0.13064275  0.00826873  0.06301503]


[[ 0.          0.          0.0013913   0.00691204  0.17581475  0.          0.
   0.          0.35877779  0.48168179  0.51229145  0.42317772  0.12916855
   0.48168179  0.12916855  0.51573034  0.51533842  0.51404311]
 [ 0.          0.          0.          0.          0.65071445  0.65071445
   0.49383562  0.65066667  0.65066667  0.          0.          0.          0.
   0.          0.          0.          0.59508067  0.49710589]
 [ 0.          1.          1.          1.          1.          1.          1.
   1.          1.          1.          1.          1.          1.          1.
   1.          1.          1.          1.        ]
 [ 0.          1.          1.          1.          1.          1.          1.
   1.          1.          1.          1.          1.          1.          1.
   1.          1.          1.          1.        ]
 [ 0.          0.48168179  1.          1.          1.          1.          1.
   1.          1.          1.          1.          1.          1.          1.
   1.          1.          1.          1.        ]
 [ 0.          1.          1.          1.          1.          1.          1.
   1.          1.          1.          1.          1.          1.          1.
   1.          1.          1.          1.        ]
 [ 0.65071445  0.          0.          1.          1.          1.          1.
   1.          1.          1.          1.          1.          1.          1.
   1.          1.          1.          1.        ]
 [ 0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.00243056  0.03994009  0.00243056  0.00243056
   0.00827016  0.05746001  0.12265861  0.00827016  0.00416017]
 [ 0.          0.          0.          0.          0.          0.0013913
   0.          0.0013913   0.          0.          0.          0.03216619
   0.07419252  0.00929112  0.01771117  0.13064275  0.00826873  0.06301503]]
