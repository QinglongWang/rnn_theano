G:g3, model:MI tanh, load all data and stored hidden activations


--------------------------------------------------------------------
Begin DFA extraction with n_state:2
Done fitting takes time: 0.4424
==Minimized===

This DFA has 1 states
States: ['2']
Alphabet: set(['1', '0'])
Starting state: 2
Accepting states: []
Transition function:
	2
1 	2
0 	2
Current state: 2
Currently accepting: False

Precision: 0.0000 Recall: 0.0000 Accuracy: 0.5422 F1: 0.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:3
Done fitting takes time: 0.5127
==Minimized===

This DFA has 1 states
States: ['2']
Alphabet: set(['1', '0'])
Starting state: 2
Accepting states: []
Transition function:
	2
1 	2
0 	2
Current state: 2
Currently accepting: False

Precision: 0.0000 Recall: 0.0000 Accuracy: 0.5422 F1: 0.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:4
Done fitting takes time: 0.4859
==Minimized===

This DFA has 2 states
States: ['3', '2']
Alphabet: set(['1', '0'])
Starting state: 2
Accepting states: ['3']
Transition function:
	2	3
1 	2	2
0 	3	2
Current state: 2
Currently accepting: False

Precision: 0.1926 Recall: 0.1079 Accuracy: 0.3846 F1: 0.1383


--------------------------------------------------------------------
Begin DFA extraction with n_state:5
Done fitting takes time: 0.2549
==Minimized===

This DFA has 4 states
States: ['2', '5', '1', '3']
Alphabet: set(['1', '0'])
Starting state: 2
Accepting states: ['2', '5']
Transition function:
	1	2	3	5
1 	1	5	1	2
0 	1	3	5	5
Current state: 2
Currently accepting: True

Precision: 0.7197 Recall: 0.6293 Accuracy: 0.7181 F1: 0.6715


--------------------------------------------------------------------
Begin DFA extraction with n_state:6
Done fitting takes time: 0.2527
==Minimized===

This DFA has 5 states
States: ['5', '1', '2', '3', '6']
Alphabet: set(['1', '0'])
Starting state: 2
Accepting states: ['1', '2', '5']
Transition function:
	1	2	3	5	6
1 	1	5	1	2	1
0 	6	3	5	5	6
Current state: 2
Currently accepting: True

Precision: 0.5511 Recall: 0.8543 Accuracy: 0.6147 F1: 0.6700


--------------------------------------------------------------------
Begin DFA extraction with n_state:7
Done fitting takes time: 0.4841
==Minimized===

This DFA has 5 states
States: ['5', '1', '2', '3', '6']
Alphabet: set(['1', '0'])
Starting state: 2
Accepting states: ['1', '2', '5']
Transition function:
	1	2	3	5	6
1 	1	5	1	2	1
0 	6	3	5	5	6
Current state: 2
Currently accepting: True

Precision: 0.5511 Recall: 0.8543 Accuracy: 0.6147 F1: 0.6700


--------------------------------------------------------------------
Begin DFA extraction with n_state:8
Done fitting takes time: 0.2745
==Minimized===

This DFA has 5 states
States: ['5', '1', '2', '3', '6']
Alphabet: set(['1', '0'])
Starting state: 2
Accepting states: ['1', '2', '5']
Transition function:
	1	2	3	5	6
1 	1	5	1	2	1
0 	6	3	5	5	6
Current state: 2
Currently accepting: True

Precision: 0.5511 Recall: 0.8543 Accuracy: 0.6147 F1: 0.6700


--------------------------------------------------------------------
Begin DFA extraction with n_state:9
Done fitting takes time: 0.4684
==Minimized===

This DFA has 5 states
States: ['5', '1', '2', '3', '6']
Alphabet: set(['1', '0'])
Starting state: 2
Accepting states: ['1', '2', '5']
Transition function:
	1	2	3	5	6
1 	1	5	6	2	1
0 	6	3	5	5	6
Current state: 2
Currently accepting: True

Precision: 0.5653 Recall: 0.8517 Accuracy: 0.6323 F1: 0.6795


--------------------------------------------------------------------
Begin DFA extraction with n_state:10
Done fitting takes time: 0.2634
==Minimized===

This DFA has 7 states
States: ['10', '3', '6', '1', '2', '5', '4']
Alphabet: set(['1', '0'])
Starting state: 2
Accepting states: ['10', '1', '2', '5', '4']
Transition function:
	1	10	2	3	4	5	6
1 	1	4	2	6	2	10	1
0 	6	3	3	5	5	5	6
Current state: 2
Currently accepting: True

Precision: 0.5732 Recall: 0.8139 Accuracy: 0.6373 F1: 0.6726


--------------------------------------------------------------------
Begin DFA extraction with n_state:11
Done fitting takes time: 0.8006
==Minimized===

This DFA has 6 states
States: ['10', '1', '3', '6', '2', '5']
Alphabet: set(['1', '0'])
Starting state: 2
Accepting states: ['10', '1', '2', '5']
Transition function:
	1	10	2	3	5	6
1 	1	2	2	6	10	1
0 	6	3	5	5	5	6
Current state: 2
Currently accepting: True

Precision: 0.5695 Recall: 1.0000 Accuracy: 0.6540 F1: 0.7257


--------------------------------------------------------------------
Begin DFA extraction with n_state:12
Done fitting takes time: 0.5413
==Minimized===

This DFA has 7 states
States: ['10', '11', '12', '1', '2', '5', '4']
Alphabet: set(['1', '0'])
Starting state: 2
Accepting states: ['10', '1', '2', '5', '4']
Transition function:
	1	10	11	12	2	4	5
1 	1	4	12	1	2	2	10
0 	12	11	5	12	11	5	5
Current state: 2
Currently accepting: True

Precision: 0.5732 Recall: 0.8139 Accuracy: 0.6373 F1: 0.6726


--------------------------------------------------------------------
Begin DFA extraction with n_state:13
Done fitting takes time: 0.2798
==Minimized===

This DFA has 7 states
States: ['10', '13', '1', '12', '3', '2', '5']
Alphabet: set(['1', '0'])
Starting state: 2
Accepting states: ['10', '13', '1', '2', '5']
Transition function:
	1	10	12	13	2	3	5
1 	1	2	1	10	2	12	10
0 	12	3	12	3	5	13	5
Current state: 2
Currently accepting: True

Precision: 0.5937 Recall: 1.0000 Accuracy: 0.6867 F1: 0.7451


--------------------------------------------------------------------
Begin DFA extraction with n_state:14
Done fitting takes time: 0.5732
==Minimized===

This DFA has 7 states
States: ['10', '13', '1', '11', '12', '14', '2']
Alphabet: set(['1', '0'])
Starting state: 2
Accepting states: ['10', '13', '14', '1', '2']
Transition function:
	1	10	11	12	13	14	2
1 	1	2	12	1	10	10	2
0 	12	11	13	12	11	14	14
Current state: 2
Currently accepting: True

Precision: 0.5937 Recall: 1.0000 Accuracy: 0.6867 F1: 0.7451


--------------------------------------------------------------------
Begin DFA extraction with n_state:15
Done fitting takes time: 0.3784
==Minimized===

This DFA has 7 states
States: ['10', '13', '1', '11', '12', '14', '2']
Alphabet: set(['1', '0'])
Starting state: 2
Accepting states: ['10', '13', '14', '1', '2']
Transition function:
	1	10	11	12	13	14	2
1 	1	2	12	1	10	10	2
0 	12	11	13	12	11	14	14
Current state: 2
Currently accepting: True

Precision: 0.5937 Recall: 1.0000 Accuracy: 0.6867 F1: 0.7451


--------------------------------------------------------------------
Begin DFA extraction with n_state:16
Done fitting takes time: 0.5475
==Minimized===

This DFA has 7 states
States: ['10', '13', '1', '12', '3', '14', '2']
Alphabet: set(['1', '0'])
Starting state: 2
Accepting states: ['10', '13', '14', '1', '2']
Transition function:
	1	10	12	13	14	2	3
1 	1	2	1	10	10	2	12
0 	12	3	12	3	14	14	13
Current state: 2
Currently accepting: True

Precision: 0.5937 Recall: 1.0000 Accuracy: 0.6867 F1: 0.7451


--------------------------------------------------------------------
Begin DFA extraction with n_state:17
Done fitting takes time: 1.0226
==Minimized===

This DFA has 7 states
States: ['10', '13', '1', '12', '3', '14', '2']
Alphabet: set(['1', '0'])
Starting state: 2
Accepting states: ['10', '13', '14', '1', '2']
Transition function:
	1	10	12	13	14	2	3
1 	1	2	1	10	10	2	12
0 	12	3	12	3	14	14	13
Current state: 2
Currently accepting: True

Precision: 0.5937 Recall: 1.0000 Accuracy: 0.6867 F1: 0.7451


--------------------------------------------------------------------
Begin DFA extraction with n_state:18
Done fitting takes time: 0.4659
==Minimized===

This DFA has 7 states
States: ['10', '13', '1', '11', '12', '14', '4']
Alphabet: set(['1', '0'])
Starting state: 14
Accepting states: ['10', '13', '14', '1', '4']
Transition function:
	1	10	11	12	13	14	4
1 	1	4	12	1	10	10	14
0 	12	11	13	12	11	14	14
Current state: 14
Currently accepting: True

Precision: 0.5933 Recall: 0.9107 Accuracy: 0.6734 F1: 0.7185


--------------------------------------------------------------------
Begin DFA extraction with n_state:19
Done fitting takes time: 0.2987
==Minimized===

This DFA has 7 states
States: ['10', '13', '1', '11', '12', '14', '4']
Alphabet: set(['1', '0'])
Starting state: 14
Accepting states: ['10', '13', '14', '1', '4']
Transition function:
	1	10	11	12	13	14	4
1 	1	4	12	1	10	10	14
0 	12	11	13	12	11	14	14
Current state: 14
Currently accepting: True

Precision: 0.5933 Recall: 0.9107 Accuracy: 0.6734 F1: 0.7185
[ 0.          0.          0.13833226  0.67150928  0.66996243  0.66996243
  0.66996243  0.67954134  0.67264013  0.72570906  0.67264013  0.74506857
  0.74506857  0.74506857  0.74506857  0.74506857  0.71851999  0.71851999]


[[ 0.          0.43092666  0.43137255  0.6280285   0.6280285   0.67150928
   0.67150928  0.85577649  0.85577649  0.85577649  0.85577649  0.85577649
   1.          1.          1.          1.          1.          1.        ]
 [ 0.          0.          0.          0.          0.          0.
   0.28425283  0.          0.44542254  0.44210526  0.48892535  0.38171091
   0.37903465  0.39738116  0.01393728  0.00201511  0.00201511  0.24236183]
 [ 0.6280285   0.6280285   0.94767025  0.45920746  1.          1.          1.
   1.          1.          1.          1.          1.          1.          1.
   1.          1.          1.          1.        ]
 [ 0.6280285   0.          0.94767025  0.94767025  1.          1.          1.
   1.          1.          1.          1.          1.          1.          1.
   1.          1.          1.          1.        ]
 [ 0.          0.6280285   0.94767025  0.94767025  0.45920746  0.45920746
   0.88685152  1.          1.          1.          1.          1.          1.
   1.          1.          1.          1.          1.        ]
 [ 0.01203008  0.43092666  0.43092666  0.43092666  0.94767025  1.          1.
   1.          1.          1.          1.          1.          1.          1.
   1.          1.          1.          1.        ]
 [ 0.          0.          0.13833226  0.67150928  0.66996243  0.66996243
   0.66996243  0.67954134  0.67264013  0.72570906  0.67264013  0.74506857
   0.74506857  0.74506857  0.74506857  0.74506857  0.71851999  0.71851999]
 [ 0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.        ]
 [ 0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.        ]]
