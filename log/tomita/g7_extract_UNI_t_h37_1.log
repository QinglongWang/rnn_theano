G:g7, model:UNI tanh, load all data and stored hidden activations


--------------------------------------------------------------------
Begin DFA extraction with n_state:2
Done fitting takes time: 0.0795
==Minimized===

This DFA has 1 states
States: ['1']
Alphabet: set(['1', '0'])
Starting state: 1
Accepting states: []
Transition function:
	1
1 	1
0 	1
Current state: 1
Currently accepting: False

Precision: 0.0000 Recall: 0.0000 Accuracy: 0.5731 F1: 0.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:3
Done fitting takes time: 0.0751
==Minimized===

This DFA has 1 states
States: ['1']
Alphabet: set(['1', '0'])
Starting state: 1
Accepting states: []
Transition function:
	1
1 	1
0 	1
Current state: 1
Currently accepting: False

Precision: 0.0000 Recall: 0.0000 Accuracy: 0.5731 F1: 0.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:4
Done fitting takes time: 0.1615
==Minimized===

This DFA has 3 states
States: ['3', '2', '4']
Alphabet: set(['1', '0'])
Starting state: 4
Accepting states: ['2', '4']
Transition function:
	2	3	4
1 	2	3	2
0 	3	3	4
Current state: 4
Currently accepting: True

Precision: 1.0000 Recall: 0.0974 Accuracy: 0.6147 F1: 0.1775


--------------------------------------------------------------------
Begin DFA extraction with n_state:5
Done fitting takes time: 0.0853
==Minimized===

This DFA has 5 states
States: ['2', '4', '1', '3', '5']
Alphabet: set(['1', '0'])
Starting state: 5
Accepting states: ['2', '4']
Transition function:
	1	2	3	4	5
1 	1	2	3	2	1
0 	4	3	3	4	1
Current state: 5
Currently accepting: False

Precision: 1.0000 Recall: 0.5317 Accuracy: 0.8001 F1: 0.6943


--------------------------------------------------------------------
Begin DFA extraction with n_state:6
Done fitting takes time: 0.2056
==Minimized===

This DFA has 6 states
States: ['2', '4', '1', '6', '3', '5']
Alphabet: set(['1', '0'])
Starting state: 5
Accepting states: ['1', '2', '4', '6']
Transition function:
	1	2	3	4	5	6
1 	6	2	3	2	6	6
0 	1	3	3	4	1	4
Current state: 5
Currently accepting: False

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:7
Done fitting takes time: 0.0874
==Minimized===

This DFA has 6 states
States: ['2', '4', '1', '6', '3', '5']
Alphabet: set(['1', '0'])
Starting state: 5
Accepting states: ['1', '2', '4', '6']
Transition function:
	1	2	3	4	5	6
1 	6	2	3	2	6	6
0 	1	3	3	4	1	4
Current state: 5
Currently accepting: False

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:8
Done fitting takes time: 0.2259
==Minimized===

This DFA has 6 states
States: ['2', '4', '1', '8', '3', '5']
Alphabet: set(['1', '0'])
Starting state: 5
Accepting states: ['1', '8', '2', '4']
Transition function:
	1	2	3	4	5	8
1 	8	2	3	2	8	8
0 	1	3	3	4	1	4
Current state: 5
Currently accepting: False

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:9
Done fitting takes time: 0.0880
==Minimized===

This DFA has 6 states
States: ['2', '4', '1', '8', '3', '5']
Alphabet: set(['1', '0'])
Starting state: 5
Accepting states: ['1', '8', '2', '4']
Transition function:
	1	2	3	4	5	8
1 	8	2	3	2	8	8
0 	1	3	3	4	1	4
Current state: 5
Currently accepting: False

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:10
Done fitting takes time: 0.0978
==Minimized===

This DFA has 6 states
States: ['2', '4', '10', '1', '3', '5']
Alphabet: set(['1', '0'])
Starting state: 5
Accepting states: ['10', '1', '2', '4']
Transition function:
	1	10	2	3	4	5
1 	10	10	2	3	2	10
0 	1	4	3	3	4	1
Current state: 5
Currently accepting: False

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:11
Done fitting takes time: 0.1064
==Minimized===

This DFA has 6 states
States: ['2', '4', '10', '1', '11', '5']
Alphabet: set(['1', '0'])
Starting state: 5
Accepting states: ['10', '1', '2', '4']
Transition function:
	1	10	11	2	4	5
1 	10	10	11	2	2	10
0 	1	4	11	11	4	1
Current state: 5
Currently accepting: False

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:12
Done fitting takes time: 0.2973
==Minimized===

This DFA has 6 states
States: ['2', '4', '10', '1', '11', '5']
Alphabet: set(['1', '0'])
Starting state: 5
Accepting states: ['10', '1', '2', '4']
Transition function:
	1	10	11	2	4	5
1 	10	10	11	2	2	10
0 	1	4	11	11	4	1
Current state: 5
Currently accepting: False

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:13
Done fitting takes time: 0.0930
==Minimized===

This DFA has 6 states
States: ['2', '4', '10', '13', '11', '5']
Alphabet: set(['1', '0'])
Starting state: 5
Accepting states: ['10', '13', '2', '4']
Transition function:
	10	11	13	2	4	5
1 	10	11	10	2	2	10
0 	4	11	13	11	4	13
Current state: 5
Currently accepting: False

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:14
Done fitting takes time: 0.1112
==Minimized===

This DFA has 6 states
States: ['2', '4', '10', '13', '11', '5']
Alphabet: set(['1', '0'])
Starting state: 5
Accepting states: ['10', '13', '2', '4']
Transition function:
	10	11	13	2	4	5
1 	10	11	10	2	2	10
0 	4	11	13	11	4	13
Current state: 5
Currently accepting: False

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:15
Done fitting takes time: 0.1677
==Minimized===

This DFA has 6 states
States: ['15', '4', '10', '13', '11', '5']
Alphabet: set(['1', '0'])
Starting state: 5
Accepting states: ['10', '13', '15', '4']
Transition function:
	10	11	13	15	4	5
1 	10	11	10	15	15	10
0 	4	11	13	11	4	13
Current state: 5
Currently accepting: False

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:16
Done fitting takes time: 0.0955
==Minimized===

This DFA has 6 states
States: ['15', '4', '10', '13', '11', '5']
Alphabet: set(['1', '0'])
Starting state: 5
Accepting states: ['10', '13', '15', '4']
Transition function:
	10	11	13	15	4	5
1 	10	11	10	15	15	10
0 	4	11	13	11	4	13
Current state: 5
Currently accepting: False

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:17
Done fitting takes time: 0.1035
==Minimized===

This DFA has 6 states
States: ['15', '4', '10', '13', '11', '5']
Alphabet: set(['1', '0'])
Starting state: 5
Accepting states: ['10', '13', '15', '4']
Transition function:
	10	11	13	15	4	5
1 	10	11	10	15	15	10
0 	4	11	13	11	4	13
Current state: 5
Currently accepting: False

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:18
Done fitting takes time: 0.0993
==Minimized===

This DFA has 6 states
States: ['15', '4', '10', '13', '11', '5']
Alphabet: set(['1', '0'])
Starting state: 5
Accepting states: ['10', '13', '15', '4']
Transition function:
	10	11	13	15	4	5
1 	10	11	10	15	15	10
0 	4	11	13	11	4	13
Current state: 5
Currently accepting: False

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:19
Done fitting takes time: 0.1353
==Minimized===

This DFA has 6 states
States: ['15', '4', '10', '13', '11', '5']
Alphabet: set(['1', '0'])
Starting state: 5
Accepting states: ['10', '13', '15', '4']
Transition function:
	10	11	13	15	4	5
1 	10	11	10	15	15	10
0 	4	11	13	11	4	13
Current state: 5
Currently accepting: False

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000
[ 0.          0.          0.17754011  0.69425287  1.          1.          1.
  1.          1.          1.          1.          1.          1.          1.
  1.          1.          1.          1.        ]


[[ 0.02549247  0.          0.59831461  0.02549247  0.17754011  0.17754011
   0.17754011  0.4518028   0.59831461  0.59831461  0.59831461  1.          1.
   1.          1.          0.84356436  0.84356436  0.92861035]
 [ 0.          0.          0.          0.40324215  0.14206788  0.13277311
   0.05034325  0.58648649  0.58709107  0.14328961  0.57609406  0.50266667
   0.43548387  0.47919656  0.40608229  0.68401084  0.10434783  0.6417704 ]
 [ 0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.        ]
 [ 0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.        ]
 [ 0.          0.59831461  0.02549247  0.02549247  0.02549247  0.84356436
   1.          1.          1.          1.          1.          1.          1.
   1.          1.          1.          1.          1.        ]
 [ 0.          0.          0.17754011  0.69425287  1.          1.          1.
   1.          1.          1.          1.          1.          1.          1.
   1.          1.          1.          1.        ]
 [ 0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.        ]
 [ 0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.        ]
 [ 0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.        ]]
