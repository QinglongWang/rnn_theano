G:g3, model:SRN sigmoid, load all data and stored hidden activations


--------------------------------------------------------------------
Begin DFA extraction with n_state:2
Done fitting takes time: 0.4362
==Minimized===

This DFA has 1 states
States: ['2']
Alphabet: set(['1', '0'])
Starting state: 2
Accepting states: []
Transition function:
	2
1 	2
0 	2
Current state: 2
Currently accepting: False

Precision: 0.0000 Recall: 0.0000 Accuracy: 0.5422 F1: 0.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:3
Done fitting takes time: 0.2319
==Minimized===

This DFA has 2 states
States: ['3', '2']
Alphabet: set(['1', '0'])
Starting state: 2
Accepting states: ['3']
Transition function:
	2	3
1 	3	2
0 	2	2
Current state: 2
Currently accepting: False

Precision: 0.4938 Recall: 0.3822 Accuracy: 0.5379 F1: 0.4309


--------------------------------------------------------------------
Begin DFA extraction with n_state:4
Done fitting takes time: 0.4023
==Minimized===

This DFA has 2 states
States: ['4', '2']
Alphabet: set(['1', '0'])
Starting state: 4
Accepting states: ['4']
Transition function:
	2	4
1 	4	2
0 	2	2
Current state: 4
Currently accepting: True

Precision: 0.4941 Recall: 0.3828 Accuracy: 0.5381 F1: 0.4314


--------------------------------------------------------------------
Begin DFA extraction with n_state:5
Done fitting takes time: 0.2372
==Minimized===

This DFA has 1 states
States: ['2']
Alphabet: set(['1', '0'])
Starting state: 2
Accepting states: ['2']
Transition function:
	2
1 	2
0 	2
Current state: 2
Currently accepting: True

Precision: 0.4578 Recall: 1.0000 Accuracy: 0.4578 F1: 0.6280


--------------------------------------------------------------------
Begin DFA extraction with n_state:6
Done fitting takes time: 0.5283
==Minimized===

This DFA has 1 states
States: ['2']
Alphabet: set(['1', '0'])
Starting state: 2
Accepting states: ['2']
Transition function:
	2
1 	2
0 	2
Current state: 2
Currently accepting: True

Precision: 0.4578 Recall: 1.0000 Accuracy: 0.4578 F1: 0.6280


--------------------------------------------------------------------
Begin DFA extraction with n_state:7
Done fitting takes time: 0.7037
==Minimized===

This DFA has 4 states
States: ['2', '4', '1', '6']
Alphabet: set(['1', '0'])
Starting state: 4
Accepting states: ['2', '4']
Transition function:
	1	2	4	6
1 	1	4	2	1
0 	1	2	6	2
Current state: 4
Currently accepting: True

Precision: 0.7197 Recall: 0.6293 Accuracy: 0.7181 F1: 0.6715


--------------------------------------------------------------------
Begin DFA extraction with n_state:8
Done fitting takes time: 0.6721
==Minimized===

This DFA has 4 states
States: ['2', '4', '1', '6']
Alphabet: set(['1', '0'])
Starting state: 4
Accepting states: ['2', '4']
Transition function:
	1	2	4	6
1 	1	4	2	1
0 	1	2	6	2
Current state: 4
Currently accepting: True

Precision: 0.7197 Recall: 0.6293 Accuracy: 0.7181 F1: 0.6715


--------------------------------------------------------------------
Begin DFA extraction with n_state:9
Done fitting takes time: 0.5497
==Minimized===

This DFA has 6 states
States: ['8', '4', '1', '6', '9', '2']
Alphabet: set(['1', '0'])
Starting state: 9
Accepting states: ['9', '8', '2', '4']
Transition function:
	1	2	4	6	8	9
1 	1	4	2	1	8	8
0 	1	2	6	9	6	2
Current state: 9
Currently accepting: True

Precision: 0.8543 Recall: 0.8573 Accuracy: 0.8677 F1: 0.8558


--------------------------------------------------------------------
Begin DFA extraction with n_state:10
Done fitting takes time: 0.6679
==Minimized===

This DFA has 6 states
States: ['8', '4', '10', '1', '9', '2']
Alphabet: set(['1', '0'])
Starting state: 9
Accepting states: ['9', '8', '2', '4']
Transition function:
	1	10	2	4	8	9
1 	1	1	4	2	8	8
0 	1	9	2	10	10	2
Current state: 9
Currently accepting: True

Precision: 0.8543 Recall: 0.8573 Accuracy: 0.8677 F1: 0.8558


--------------------------------------------------------------------
Begin DFA extraction with n_state:11
Done fitting takes time: 0.7417
==Minimized===

This DFA has 6 states
States: ['8', '4', '10', '1', '9', '2']
Alphabet: set(['1', '0'])
Starting state: 9
Accepting states: ['9', '8', '2', '4']
Transition function:
	1	10	2	4	8	9
1 	1	1	4	2	8	8
0 	1	9	2	10	10	2
Current state: 9
Currently accepting: True

Precision: 0.8543 Recall: 0.8573 Accuracy: 0.8677 F1: 0.8558


--------------------------------------------------------------------
Begin DFA extraction with n_state:12
Done fitting takes time: 0.2663
==Minimized===

This DFA has 6 states
States: ['4', '8', '10', '1', '12', '9']
Alphabet: set(['1', '0'])
Starting state: 9
Accepting states: ['12', '4', '9', '8']
Transition function:
	1	10	12	4	8	9
1 	1	1	4	12	8	8
0 	1	9	12	10	10	12
Current state: 9
Currently accepting: True

Precision: 0.8543 Recall: 0.8573 Accuracy: 0.8677 F1: 0.8558


--------------------------------------------------------------------
Begin DFA extraction with n_state:13
Done fitting takes time: 0.3138
==Minimized===

This DFA has 6 states
States: ['4', '8', '10', '13', '12', '9']
Alphabet: set(['1', '0'])
Starting state: 9
Accepting states: ['12', '4', '9', '8']
Transition function:
	10	12	13	4	8	9
1 	13	4	13	12	8	8
0 	9	12	13	10	10	12
Current state: 9
Currently accepting: True

Precision: 0.8543 Recall: 0.8573 Accuracy: 0.8677 F1: 0.8558


--------------------------------------------------------------------
Begin DFA extraction with n_state:14
Done fitting takes time: 0.3349
==Minimized===

This DFA has 6 states
States: ['12', '4', '9', '14', '11', '13']
Alphabet: set(['1', '0'])
Starting state: 14
Accepting states: ['12', '4', '9']
Transition function:
	11	12	13	14	4	9
1 	13	4	13	4	12	9
0 	9	12	13	12	11	11
Current state: 14
Currently accepting: False

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:15
Done fitting takes time: 0.3714
==Minimized===

This DFA has 6 states
States: ['12', '15', '4', '14', '11', '13']
Alphabet: set(['1', '0'])
Starting state: 14
Accepting states: ['12', '15', '4']
Transition function:
	11	12	13	14	15	4
1 	13	4	13	4	15	12
0 	15	12	13	12	11	11
Current state: 14
Currently accepting: False

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:16
Done fitting takes time: 0.3109
==Minimized===

This DFA has 6 states
States: ['12', '15', '4', '14', '11', '13']
Alphabet: set(['1', '0'])
Starting state: 14
Accepting states: ['12', '15', '4']
Transition function:
	11	12	13	14	15	4
1 	13	4	13	4	15	12
0 	15	12	13	12	11	11
Current state: 14
Currently accepting: False

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:17
Done fitting takes time: 0.4672
==Minimized===

This DFA has 6 states
States: ['12', '15', '17', '14', '11', '13']
Alphabet: set(['1', '0'])
Starting state: 14
Accepting states: ['12', '15', '17']
Transition function:
	11	12	13	14	15	17
1 	13	17	13	17	15	12
0 	15	12	13	12	11	11
Current state: 14
Currently accepting: False

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:18
Done fitting takes time: 0.3367
==Minimized===

This DFA has 6 states
States: ['12', '15', '17', '14', '11', '13']
Alphabet: set(['1', '0'])
Starting state: 14
Accepting states: ['12', '15', '17']
Transition function:
	11	12	13	14	15	17
1 	13	17	13	17	15	12
0 	15	12	13	12	11	11
Current state: 14
Currently accepting: False

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:19
Done fitting takes time: 0.2839
==Minimized===

This DFA has 6 states
States: ['12', '15', '17', '14', '11', '13']
Alphabet: set(['1', '0'])
Starting state: 14
Accepting states: ['12', '15', '17']
Transition function:
	11	12	13	14	15	17
1 	13	17	13	17	15	12
0 	15	12	13	12	11	11
Current state: 14
Currently accepting: False

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000
[ 0.          0.43092666  0.43137255  0.6280285   0.6280285   0.67150928
  0.67150928  0.85577649  0.85577649  0.85577649  0.85577649  0.85577649
  1.          1.          1.          1.          1.          1.        ]


[[ 0.          0.43092666  0.43137255  0.6280285   0.6280285   0.67150928
   0.67150928  0.85577649  0.85577649  0.85577649  0.85577649  0.85577649
   1.          1.          1.          1.          1.          1.        ]
 [ 0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.        ]
 [ 0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.        ]
 [ 0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.        ]
 [ 0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.        ]
 [ 0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.        ]
 [ 0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.        ]
 [ 0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.        ]
 [ 0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.        ]]
