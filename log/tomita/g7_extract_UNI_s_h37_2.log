G:g7, model:UNI sigmoid, load all data and stored hidden activations


--------------------------------------------------------------------
Begin DFA extraction with n_state:2
Done fitting takes time: 0.1201
==Minimized===

This DFA has 1 states
States: ['1']
Alphabet: set(['1', '0'])
Starting state: 1
Accepting states: []
Transition function:
	1
1 	1
0 	1
Current state: 1
Currently accepting: False

Precision: 0.0000 Recall: 0.0000 Accuracy: 0.5731 F1: 0.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:3
Done fitting takes time: 0.2669
==Minimized===

This DFA has 1 states
States: ['1']
Alphabet: set(['1', '0'])
Starting state: 1
Accepting states: ['1']
Transition function:
	1
1 	1
0 	1
Current state: 1
Currently accepting: True

Precision: 0.4269 Recall: 1.0000 Accuracy: 0.4269 F1: 0.5983


--------------------------------------------------------------------
Begin DFA extraction with n_state:4
Done fitting takes time: 0.3212
==Minimized===

This DFA has 2 states
States: ['3', '2']
Alphabet: set(['1', '0'])
Starting state: 3
Accepting states: ['3']
Transition function:
	2	3
1 	2	3
0 	2	2
Current state: 3
Currently accepting: True

Precision: 1.0000 Recall: 0.0129 Accuracy: 0.5787 F1: 0.0255


--------------------------------------------------------------------
Begin DFA extraction with n_state:5
Done fitting takes time: 0.2247
==Minimized===

This DFA has 1 states
States: ['1']
Alphabet: set(['1', '0'])
Starting state: 1
Accepting states: ['1']
Transition function:
	1
1 	1
0 	1
Current state: 1
Currently accepting: True

Precision: 0.4269 Recall: 1.0000 Accuracy: 0.4269 F1: 0.5983


--------------------------------------------------------------------
Begin DFA extraction with n_state:6
Done fitting takes time: 0.2368
==Minimized===

This DFA has 6 states
States: ['3', '6', '1', '4', '2', '5']
Alphabet: set(['1', '0'])
Starting state: 5
Accepting states: ['1', '3', '4', '6']
Transition function:
	1	2	3	4	5	6
1 	4	2	3	4	4	3
0 	1	2	2	6	1	6
Current state: 5
Currently accepting: False

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:7
Done fitting takes time: 0.1251
==Minimized===

This DFA has 6 states
States: ['3', '6', '1', '4', '2', '5']
Alphabet: set(['1', '0'])
Starting state: 5
Accepting states: ['1', '3', '4', '6']
Transition function:
	1	2	3	4	5	6
1 	4	2	3	4	4	3
0 	1	2	2	6	1	6
Current state: 5
Currently accepting: False

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:8
Done fitting takes time: 0.1316
==Minimized===

This DFA has 6 states
States: ['3', '6', '1', '4', '2', '5']
Alphabet: set(['1', '0'])
Starting state: 5
Accepting states: ['1', '3', '4', '6']
Transition function:
	1	2	3	4	5	6
1 	4	2	3	4	4	3
0 	1	2	2	6	1	6
Current state: 5
Currently accepting: False

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:9
Done fitting takes time: 0.3129
==Minimized===

This DFA has 6 states
States: ['3', '6', '1', '4', '2', '5']
Alphabet: set(['1', '0'])
Starting state: 5
Accepting states: ['1', '3', '4', '6']
Transition function:
	1	2	3	4	5	6
1 	4	2	3	4	4	3
0 	1	2	2	6	1	6
Current state: 5
Currently accepting: False

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:10
Done fitting takes time: 0.1220
==Minimized===

This DFA has 6 states
States: ['3', '6', '10', '4', '2', '5']
Alphabet: set(['1', '0'])
Starting state: 5
Accepting states: ['10', '3', '4', '6']
Transition function:
	10	2	3	4	5	6
1 	4	2	3	4	4	3
0 	10	2	2	6	10	6
Current state: 5
Currently accepting: False

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:11
Done fitting takes time: 0.1596
==Minimized===

This DFA has 6 states
States: ['3', '6', '11', '10', '2', '5']
Alphabet: set(['1', '0'])
Starting state: 5
Accepting states: ['11', '10', '3', '6']
Transition function:
	10	11	2	3	5	6
1 	11	11	2	3	11	3
0 	10	6	2	2	10	6
Current state: 5
Currently accepting: False

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:12
Done fitting takes time: 0.1461
==Minimized===

This DFA has 6 states
States: ['3', '6', '11', '10', '12', '5']
Alphabet: set(['1', '0'])
Starting state: 5
Accepting states: ['11', '10', '3', '6']
Transition function:
	10	11	12	3	5	6
1 	11	11	12	3	11	3
0 	10	6	12	12	10	6
Current state: 5
Currently accepting: False

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:13
Done fitting takes time: 0.1567
==Minimized===

This DFA has 6 states
States: ['13', '6', '11', '10', '12', '5']
Alphabet: set(['1', '0'])
Starting state: 5
Accepting states: ['11', '10', '13', '6']
Transition function:
	10	11	12	13	5	6
1 	11	11	12	13	11	13
0 	10	6	12	12	10	6
Current state: 5
Currently accepting: False

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:14
Done fitting takes time: 0.1278
==Minimized===

This DFA has 6 states
States: ['13', '6', '11', '10', '12', '5']
Alphabet: set(['1', '0'])
Starting state: 5
Accepting states: ['11', '10', '13', '6']
Transition function:
	10	11	12	13	5	6
1 	11	11	12	13	11	13
0 	10	6	12	12	10	6
Current state: 5
Currently accepting: False

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:15
Done fitting takes time: 0.2238
==Minimized===

This DFA has 6 states
States: ['13', '6', '11', '10', '12', '5']
Alphabet: set(['1', '0'])
Starting state: 5
Accepting states: ['11', '10', '13', '6']
Transition function:
	10	11	12	13	5	6
1 	11	11	12	13	11	13
0 	10	6	12	12	10	6
Current state: 5
Currently accepting: False

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:16
Done fitting takes time: 0.1534
==Minimized===

This DFA has 6 states
States: ['13', '6', '11', '10', '12', '5']
Alphabet: set(['1', '0'])
Starting state: 5
Accepting states: ['11', '10', '13', '6']
Transition function:
	10	11	12	13	5	6
1 	11	11	12	13	11	13
0 	10	6	12	12	10	6
Current state: 5
Currently accepting: False

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:17
Done fitting takes time: 0.1308
==Minimized===

This DFA has 6 states
States: ['13', '6', '11', '10', '12', '5']
Alphabet: set(['1', '0'])
Starting state: 5
Accepting states: ['11', '10', '13', '6']
Transition function:
	10	11	12	13	5	6
1 	11	11	12	13	11	13
0 	10	6	12	12	10	6
Current state: 5
Currently accepting: False

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:18
Done fitting takes time: 0.2621
==Minimized===

This DFA has 6 states
States: ['13', '6', '11', '10', '12', '5']
Alphabet: set(['1', '0'])
Starting state: 5
Accepting states: ['11', '10', '13', '6']
Transition function:
	10	11	12	13	5	6
1 	11	11	12	13	11	13
0 	10	6	12	12	10	6
Current state: 5
Currently accepting: False

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:19
Done fitting takes time: 0.1245
==Minimized===

This DFA has 6 states
States: ['13', '19', '11', '10', '12', '5']
Alphabet: set(['1', '0'])
Starting state: 5
Accepting states: ['11', '10', '13', '19']
Transition function:
	10	11	12	13	19	5
1 	11	11	12	13	13	11
0 	10	19	12	12	19	10
Current state: 5
Currently accepting: False

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000
[ 0.          0.59831461  0.02549247  0.59831461  1.          1.          1.
  1.          1.          1.          1.          1.          1.          1.
  1.          1.          1.          1.        ]


[[ 0.          0.59831461  0.59831461  0.59831461  0.59831461  0.62768616
   0.72225417  0.72225417  0.72225417  0.72225417  0.72225417  1.          1.
   1.          1.          1.          1.          1.        ]
 [ 0.          0.          0.          0.          0.          0.          0.
   0.          0.53694355  0.48538012  0.45709947  0.27353464  0.67688378
   0.67068758  0.42253521  0.57084746  0.72727273  0.80620155]
 [ 0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.        ]
 [ 0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.        ]
 [ 0.          0.59831461  0.02549247  0.59831461  1.          1.          1.
   1.          1.          1.          1.          1.          1.          1.
   1.          1.          1.          1.        ]
 [ 0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.        ]
 [ 0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.        ]
 [ 0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.        ]
 [ 0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.        ]]
