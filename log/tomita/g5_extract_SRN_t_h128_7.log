G:g5, model:SRN tanh, load all data and stored hidden activations


--------------------------------------------------------------------
Begin DFA extraction with n_state:2
Done fitting takes time: 0.5976
==Minimized===

This DFA has 1 states
States: ['1']
Alphabet: set(['1', '0'])
Starting state: 1
Accepting states: []
Transition function:
	1
1 	1
0 	1
Current state: 1
Currently accepting: False

Precision: 0.0000 Recall: 0.0000 Accuracy: 0.5097 F1: 0.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:3
Done fitting takes time: 1.2301
==Minimized===

This DFA has 1 states
States: ['1']
Alphabet: set(['1', '0'])
Starting state: 1
Accepting states: []
Transition function:
	1
1 	1
0 	1
Current state: 1
Currently accepting: False

Precision: 0.0000 Recall: 0.0000 Accuracy: 0.5097 F1: 0.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:4
Done fitting takes time: 1.1633
==Minimized===

This DFA has 1 states
States: ['1']
Alphabet: set(['1', '0'])
Starting state: 1
Accepting states: []
Transition function:
	1
1 	1
0 	1
Current state: 1
Currently accepting: False

Precision: 0.0000 Recall: 0.0000 Accuracy: 0.5097 F1: 0.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:5
Done fitting takes time: 1.0610
==Minimized===

This DFA has 1 states
States: ['1']
Alphabet: set(['1', '0'])
Starting state: 1
Accepting states: []
Transition function:
	1
1 	1
0 	1
Current state: 1
Currently accepting: False

Precision: 0.0000 Recall: 0.0000 Accuracy: 0.5097 F1: 0.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:6
Done fitting takes time: 1.4907
==Minimized===

This DFA has 1 states
States: ['2']
Alphabet: set(['1', '0'])
Starting state: 2
Accepting states: []
Transition function:
	2
1 	2
0 	2
Current state: 2
Currently accepting: False

Precision: 0.0000 Recall: 0.0000 Accuracy: 0.5097 F1: 0.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:7
Done fitting takes time: 1.6982
==Minimized===

This DFA has 6 states
States: ['4', '2', '1', '3', '7', '6']
Alphabet: set(['1', '0'])
Starting state: 7
Accepting states: ['2', '7', '6']
Transition function:
	1	2	3	4	6	7
1 	1	4	4	2	3	1
0 	1	4	6	7	3	3
Current state: 7
Currently accepting: True

Precision: 0.4811 Recall: 0.0735 Accuracy: 0.5068 F1: 0.1275


--------------------------------------------------------------------
Begin DFA extraction with n_state:8
Done fitting takes time: 1.6069
==Minimized===

This DFA has 1 states
States: ['1']
Alphabet: set(['1', '0'])
Starting state: 1
Accepting states: []
Transition function:
	1
1 	1
0 	1
Current state: 1
Currently accepting: False

Precision: 0.0000 Recall: 0.0000 Accuracy: 0.5097 F1: 0.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:9
Done fitting takes time: 1.7745
==Minimized===

This DFA has 2 states
States: ['7', '1']
Alphabet: set(['1', '0'])
Starting state: 7
Accepting states: ['7']
Transition function:
	1	7
1 	1	1
0 	1	1
Current state: 7
Currently accepting: True

Precision: 0.0000 Recall: 0.0000 Accuracy: 0.5097 F1: 0.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:10
Done fitting takes time: 1.6144
==Minimized===

This DFA has 8 states
States: ['1', '8', '7', '10', '4', '3', '6', '9']
Alphabet: set(['1', '0'])
Starting state: 7
Accepting states: ['8', '7']
Transition function:
	1	10	3	4	6	7	8	9
1 	8	1	4	10	9	6	1	3
0 	10	1	4	10	9	6	1	3
Current state: 7
Currently accepting: True

Precision: 0.0000 Recall: 0.0000 Accuracy: 0.4972 F1: 0.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:11
Done fitting takes time: 1.9989
==Minimized===

This DFA has 2 states
States: ['7', '11']
Alphabet: set(['1', '0'])
Starting state: 7
Accepting states: ['7']
Transition function:
	11	7
1 	11	11
0 	11	11
Current state: 7
Currently accepting: True

Precision: 0.0000 Recall: 0.0000 Accuracy: 0.5097 F1: 0.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:12
Done fitting takes time: 1.6991
==Minimized===

This DFA has 2 states
States: ['7', '11']
Alphabet: set(['1', '0'])
Starting state: 7
Accepting states: ['7']
Transition function:
	11	7
1 	11	11
0 	11	11
Current state: 7
Currently accepting: True

Precision: 0.0000 Recall: 0.0000 Accuracy: 0.5097 F1: 0.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:13
Done fitting takes time: 2.2262
==Minimized===

This DFA has 11 states
States: ['6', '5', '7', '8', '4', '13', '11', '3', '9', '10', '12']
Alphabet: set(['1', '0'])
Starting state: 7
Accepting states: ['5', '7']
Transition function:
	10	11	12	13	3	4	5	6	7	8	9
1 	10	13	9	4	11	8	6	5	12	6	3
0 	10	13	9	4	11	8	10	8	12	6	3
Current state: 7
Currently accepting: True

Precision: 0.0000 Recall: 0.0000 Accuracy: 0.5046 F1: 0.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:14
Done fitting takes time: 1.6915
==Minimized===

This DFA has 2 states
States: ['7', '11']
Alphabet: set(['1', '0'])
Starting state: 7
Accepting states: ['7']
Transition function:
	11	7
1 	11	11
0 	11	11
Current state: 7
Currently accepting: True

Precision: 0.0000 Recall: 0.0000 Accuracy: 0.5097 F1: 0.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:15
Done fitting takes time: 1.8823
==Minimized===

This DFA has 11 states
States: ['1', '10', '9', '13', '4', '2', '11', '3', '14', '12', '7']
Alphabet: set(['1', '0'])
Starting state: 7
Accepting states: ['1']
Transition function:
	1	10	11	12	13	14	2	3	4	7	9
1 	10	1	2	14	9	3	4	11	13	12	10
0 	10	1	2	14	9	3	4	11	13	12	10
Current state: 7
Currently accepting: False

Precision: 0.5042 Recall: 0.9592 Accuracy: 0.5174 F1: 0.6609


--------------------------------------------------------------------
Begin DFA extraction with n_state:16
Done fitting takes time: 2.0626
==Minimized===

This DFA has 16 states
States: ['8', '15', '10', '5', '16', '1', '6', '9', '13', '4', '2', '11', '3', '14', '12', '7']
Alphabet: set(['1', '0'])
Starting state: 7
Accepting states: ['1', '16', '15', '6']
Transition function:
	1	10	11	12	13	14	15	16	2	3	4	5	6	7	8	9
1 	5	1	2	14	9	3	8	10	4	11	13	6	5	12	1	10
0 	10	16	2	14	9	3	8	10	4	11	13	15	5	12	8	10
Current state: 7
Currently accepting: False

Precision: 0.5003 Recall: 0.8127 Accuracy: 0.5101 F1: 0.6193


--------------------------------------------------------------------
Begin DFA extraction with n_state:17
Done fitting takes time: 2.3022
==Minimized===

This DFA has 12 states
States: ['10', '13', '11', '3', '6', '16', '4', '12', '14', '8', '1', '7']
Alphabet: set(['1', '0'])
Starting state: 7
Accepting states: ['16', '1', '4', '7']
Transition function:
	1	10	11	12	13	14	16	3	4	6	7	8
1 	8	1	13	14	16	3	10	11	13	10	12	6
0 	8	16	13	14	4	3	10	11	13	10	12	6
Current state: 7
Currently accepting: True

Precision: 0.5034 Recall: 0.7011 Accuracy: 0.5144 F1: 0.5861


--------------------------------------------------------------------
Begin DFA extraction with n_state:18
Done fitting takes time: 2.0820
==Minimized===

This DFA has 16 states
States: ['10', '17', '1', '16', '13', '4', '2', '11', '3', '15', '9', '14', '12', '7', '18', '6']
Alphabet: set(['1', '0'])
Starting state: 7
Accepting states: ['1', '16']
Transition function:
	1	10	11	12	13	14	15	16	17	18	2	3	4	6	7	9
1 	18	1	2	14	9	3	10	10	1	6	4	11	13	18	12	17
0 	18	15	2	14	9	3	10	10	16	16	4	11	13	18	12	17
Current state: 7
Currently accepting: False

Precision: 0.5014 Recall: 0.5337 Accuracy: 0.5111 F1: 0.5170


--------------------------------------------------------------------
Begin DFA extraction with n_state:19
Done fitting takes time: 2.2243
==Minimized===

This DFA has 17 states
States: ['19', '7', '9', '10', '11', '3', '4', '8', '14', '1', '12', '18', '5', '13', '2', '17', '16']
Alphabet: set(['1', '0'])
Starting state: 7
Accepting states: ['1', '12', '17', '16']
Transition function:
	1	10	11	12	13	14	16	17	18	19	2	3	4	5	7	8	9
1 	18	9	13	14	4	3	2	9	18	1	8	11	10	14	12	10	19
0 	18	9	13	14	4	3	2	9	18	16	8	11	17	14	5	10	19
Current state: 7
Currently accepting: False

Precision: 0.5017 Recall: 0.2113 Accuracy: 0.5104 F1: 0.2973
[ 0.          0.          0.          0.          0.          0.12747344
  0.          0.          0.          0.          0.          0.          0.
  0.66093143  0.61933949  0.58605118  0.51703686  0.29734752]


[[ 0.          0.          0.67020677  0.67020677  0.          0.67020677
   0.40640499  0.          0.          0.45319802  0.511079    0.511079
   0.09035356  0.38574974  0.4656234   0.32776983  0.53321304  0.50472367]
 [ 0.          0.          0.          0.          0.          0.12747344
   0.          0.          0.          0.          0.          0.          0.
   0.66093143  0.61933949  0.58605118  0.51703686  0.29734752]
 [ 0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.        ]
 [ 0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.        ]
 [ 0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.        ]
 [ 0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.        ]
 [ 0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.        ]
 [ 0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.        ]
 [ 0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.        ]]
