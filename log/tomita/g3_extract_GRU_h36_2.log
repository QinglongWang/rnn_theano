G:g3, model:GRU tanh, load all data and stored hidden activations


--------------------------------------------------------------------
Begin DFA extraction with n_state:2
Done fitting takes time: 0.4591
==Minimized===

This DFA has 1 states
States: ['2']
Alphabet: set(['1', '0'])
Starting state: 2
Accepting states: []
Transition function:
	2
1 	2
0 	2
Current state: 2
Currently accepting: False

Precision: 0.0000 Recall: 0.0000 Accuracy: 0.5422 F1: 0.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:3
Done fitting takes time: 0.5540
==Minimized===

This DFA has 1 states
States: ['3']
Alphabet: set(['1', '0'])
Starting state: 3
Accepting states: []
Transition function:
	3
1 	3
0 	3
Current state: 3
Currently accepting: False

Precision: 0.0000 Recall: 0.0000 Accuracy: 0.5422 F1: 0.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:4
Done fitting takes time: 0.6372
==Minimized===

This DFA has 1 states
States: ['3']
Alphabet: set(['1', '0'])
Starting state: 3
Accepting states: []
Transition function:
	3
1 	3
0 	3
Current state: 3
Currently accepting: False

Precision: 0.0000 Recall: 0.0000 Accuracy: 0.5422 F1: 0.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:5
Done fitting takes time: 0.3704
==Minimized===

This DFA has 3 states
States: ['5', '3', '4']
Alphabet: set(['1', '0'])
Starting state: 3
Accepting states: ['3', '4']
Transition function:
	3	4	5
1 	3	5	4
0 	5	5	5
Current state: 3
Currently accepting: True

Precision: 0.4958 Recall: 0.3853 Accuracy: 0.5392 F1: 0.4336


--------------------------------------------------------------------
Begin DFA extraction with n_state:6
Done fitting takes time: 0.7243
==Minimized===

This DFA has 1 states
States: ['3']
Alphabet: set(['1', '0'])
Starting state: 3
Accepting states: []
Transition function:
	3
1 	3
0 	3
Current state: 3
Currently accepting: False

Precision: 0.0000 Recall: 0.0000 Accuracy: 0.5422 F1: 0.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:7
Done fitting takes time: 0.3098
==Minimized===

This DFA has 1 states
States: ['3']
Alphabet: set(['1', '0'])
Starting state: 3
Accepting states: []
Transition function:
	3
1 	3
0 	3
Current state: 3
Currently accepting: False

Precision: 0.0000 Recall: 0.0000 Accuracy: 0.5422 F1: 0.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:8
Done fitting takes time: 0.2643
==Minimized===

This DFA has 1 states
States: ['3']
Alphabet: set(['1', '0'])
Starting state: 3
Accepting states: []
Transition function:
	3
1 	3
0 	3
Current state: 3
Currently accepting: False

Precision: 0.0000 Recall: 0.0000 Accuracy: 0.5422 F1: 0.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:9
Done fitting takes time: 0.3037
==Minimized===

This DFA has 3 states
States: ['3', '1', '7']
Alphabet: set(['1', '0'])
Starting state: 3
Accepting states: ['3']
Transition function:
	1	3	7
1 	1	3	1
0 	1	7	3
Current state: 3
Currently accepting: True

Precision: 1.0000 Recall: 0.2980 Accuracy: 0.6787 F1: 0.4592


--------------------------------------------------------------------
Begin DFA extraction with n_state:10
Done fitting takes time: 0.8159
==Minimized===

This DFA has 3 states
States: ['3', '1', '7']
Alphabet: set(['1', '0'])
Starting state: 3
Accepting states: ['3']
Transition function:
	1	3	7
1 	1	3	1
0 	1	7	3
Current state: 3
Currently accepting: True

Precision: 1.0000 Recall: 0.2980 Accuracy: 0.6787 F1: 0.4592


--------------------------------------------------------------------
Begin DFA extraction with n_state:11
Done fitting takes time: 0.7553
==Minimized===

This DFA has 3 states
States: ['3', '1', '7']
Alphabet: set(['1', '0'])
Starting state: 3
Accepting states: ['3']
Transition function:
	1	3	7
1 	1	3	1
0 	1	7	3
Current state: 3
Currently accepting: True

Precision: 1.0000 Recall: 0.2980 Accuracy: 0.6787 F1: 0.4592


--------------------------------------------------------------------
Begin DFA extraction with n_state:12
Done fitting takes time: 0.2541
==Minimized===

This DFA has 3 states
States: ['3', '12', '7']
Alphabet: set(['1', '0'])
Starting state: 3
Accepting states: ['3']
Transition function:
	12	3	7
1 	12	3	12
0 	12	7	3
Current state: 3
Currently accepting: True

Precision: 1.0000 Recall: 0.2980 Accuracy: 0.6787 F1: 0.4592


--------------------------------------------------------------------
Begin DFA extraction with n_state:13
Done fitting takes time: 0.8086
==Minimized===

This DFA has 3 states
States: ['3', '12', '7']
Alphabet: set(['1', '0'])
Starting state: 3
Accepting states: ['3']
Transition function:
	12	3	7
1 	12	3	12
0 	12	7	3
Current state: 3
Currently accepting: True

Precision: 1.0000 Recall: 0.2980 Accuracy: 0.6787 F1: 0.4592


--------------------------------------------------------------------
Begin DFA extraction with n_state:14
Done fitting takes time: 0.2697
==Minimized===

This DFA has 6 states
States: ['11', '10', '3', '14', '12', '7']
Alphabet: set(['1', '0'])
Starting state: 14
Accepting states: ['11', '10', '3']
Transition function:
	10	11	12	14	3	7
1 	11	10	12	10	3	12
0 	7	11	12	11	7	3
Current state: 14
Currently accepting: False

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:15
Done fitting takes time: 0.2638
==Minimized===

This DFA has 6 states
States: ['11', '10', '3', '14', '12', '7']
Alphabet: set(['1', '0'])
Starting state: 14
Accepting states: ['11', '10', '3']
Transition function:
	10	11	12	14	3	7
1 	11	10	12	10	3	12
0 	7	11	12	11	7	3
Current state: 14
Currently accepting: False

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:16
Done fitting takes time: 0.6487
==Minimized===

This DFA has 6 states
States: ['11', '10', '3', '14', '12', '7']
Alphabet: set(['1', '0'])
Starting state: 14
Accepting states: ['11', '10', '3']
Transition function:
	10	11	12	14	3	7
1 	11	10	12	10	3	12
0 	7	11	12	11	7	3
Current state: 14
Currently accepting: False

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:17
Done fitting takes time: 0.6554
==Minimized===

This DFA has 6 states
States: ['11', '10', '3', '14', '12', '17']
Alphabet: set(['1', '0'])
Starting state: 14
Accepting states: ['11', '10', '3']
Transition function:
	10	11	12	14	17	3
1 	11	10	12	10	12	3
0 	17	11	12	11	3	17
Current state: 14
Currently accepting: False

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:18
Done fitting takes time: 0.7178
==Minimized===

This DFA has 6 states
States: ['11', '10', '3', '14', '12', '17']
Alphabet: set(['1', '0'])
Starting state: 14
Accepting states: ['11', '10', '3']
Transition function:
	10	11	12	14	17	3
1 	11	10	12	10	12	3
0 	17	11	12	11	3	17
Current state: 14
Currently accepting: False

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:19
Done fitting takes time: 0.9861
==Minimized===

This DFA has 6 states
States: ['11', '10', '3', '14', '12', '17']
Alphabet: set(['1', '0'])
Starting state: 14
Accepting states: ['11', '10', '3']
Transition function:
	10	11	12	14	17	3
1 	11	10	12	10	12	3
0 	17	11	12	11	3	17
Current state: 14
Currently accepting: False

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000
[ 0.          0.          0.          0.43359818  0.          0.          0.
  0.45920746  0.45920746  0.45920746  0.45920746  0.45920746  1.          1.
  1.          1.          1.          1.        ]


[[ 0.          0.43092666  0.43137255  0.6280285   0.6280285   0.67150928
   0.67150928  0.85577649  0.85577649  0.85577649  0.85577649  0.85577649
   1.          1.          1.          1.          1.          1.        ]
 [ 0.          0.          0.          0.          0.          0.
   0.28425283  0.          0.44542254  0.44210526  0.48892535  0.38171091
   0.37903465  0.39738116  0.01393728  0.00201511  0.00201511  0.24236183]
 [ 0.6280285   0.6280285   0.94767025  0.45920746  1.          1.          1.
   1.          1.          1.          1.          1.          1.          1.
   1.          1.          1.          1.        ]
 [ 0.6280285   0.          0.94767025  0.94767025  1.          1.          1.
   1.          1.          1.          1.          1.          1.          1.
   1.          1.          1.          1.        ]
 [ 0.          0.6280285   0.94767025  0.94767025  0.45920746  0.45920746
   0.88685152  1.          1.          1.          1.          1.          1.
   1.          1.          1.          1.          1.        ]
 [ 0.01203008  0.43092666  0.43092666  0.43092666  0.94767025  1.          1.
   1.          1.          1.          1.          1.          1.          1.
   1.          1.          1.          1.        ]
 [ 0.          0.          0.13833226  0.67150928  0.66996243  0.66996243
   0.66996243  0.67954134  0.67264013  0.72570906  0.67264013  0.74506857
   0.74506857  0.74506857  0.74506857  0.74506857  0.71851999  0.71851999]
 [ 0.          0.43092666  0.43359818  0.43359818  0.664764    0.45920746
   0.45920746  0.45920746  0.45920746  0.77614213  0.77614213  0.80163109
   0.88412985  0.8554337   1.          1.          1.          1.        ]
 [ 0.          0.          0.          0.43359818  0.          0.          0.
   0.45920746  0.45920746  0.45920746  0.45920746  0.45920746  1.          1.
   1.          1.          1.          1.        ]]
