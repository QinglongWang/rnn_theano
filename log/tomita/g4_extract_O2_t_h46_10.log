G:g4, model:O2 tanh, load all data and stored hidden activations


--------------------------------------------------------------------
Begin DFA extraction with n_state:2
Done fitting takes time: 0.5303
==Minimized===

This DFA has 1 states
States: ['2']
Alphabet: set(['1', '0'])
Starting state: 2
Accepting states: []
Transition function:
	2
1 	2
0 	2
Current state: 2
Currently accepting: False

Precision: 0.0000 Recall: 0.0000 Accuracy: 0.5094 F1: 0.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:3
Done fitting takes time: 0.9318
==Minimized===

This DFA has 1 states
States: ['1']
Alphabet: set(['1', '0'])
Starting state: 1
Accepting states: []
Transition function:
	1
1 	1
0 	1
Current state: 1
Currently accepting: False

Precision: 0.0000 Recall: 0.0000 Accuracy: 0.5094 F1: 0.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:4
Done fitting takes time: 0.7127
==Minimized===

This DFA has 1 states
States: ['1']
Alphabet: set(['1', '0'])
Starting state: 1
Accepting states: []
Transition function:
	1
1 	1
0 	1
Current state: 1
Currently accepting: False

Precision: 0.0000 Recall: 0.0000 Accuracy: 0.5094 F1: 0.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:5
Done fitting takes time: 1.2109
==Minimized===

This DFA has 1 states
States: ['1']
Alphabet: set(['1', '0'])
Starting state: 1
Accepting states: []
Transition function:
	1
1 	1
0 	1
Current state: 1
Currently accepting: False

Precision: 0.0000 Recall: 0.0000 Accuracy: 0.5094 F1: 0.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:6
Done fitting takes time: 0.5404
==Minimized===

This DFA has 5 states
States: ['2', '1', '6', '5', '4']
Alphabet: set(['1', '0'])
Starting state: 5
Accepting states: ['1', '2', '6']
Transition function:
	1	2	4	5	6
1 	1	1	4	1	1
0 	6	4	4	6	2
Current state: 5
Currently accepting: False

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:7
Done fitting takes time: 0.5541
==Minimized===

This DFA has 5 states
States: ['2', '1', '6', '5', '4']
Alphabet: set(['1', '0'])
Starting state: 5
Accepting states: ['1', '2', '6']
Transition function:
	1	2	4	5	6
1 	1	1	4	1	1
0 	6	4	4	6	2
Current state: 5
Currently accepting: False

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:8
Done fitting takes time: 0.5652
==Minimized===

This DFA has 5 states
States: ['3', '1', '6', '5', '4']
Alphabet: set(['1', '0'])
Starting state: 5
Accepting states: ['1', '3', '6']
Transition function:
	1	3	4	5	6
1 	1	1	4	1	1
0 	6	4	4	6	3
Current state: 5
Currently accepting: False

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:9
Done fitting takes time: 0.5537
==Minimized===

This DFA has 5 states
States: ['3', '1', '6', '5', '4']
Alphabet: set(['1', '0'])
Starting state: 5
Accepting states: ['1', '3', '6']
Transition function:
	1	3	4	5	6
1 	1	1	4	1	1
0 	6	4	4	6	3
Current state: 5
Currently accepting: False

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:10
Done fitting takes time: 0.5613
==Minimized===

This DFA has 5 states
States: ['3', '1', '6', '10', '5']
Alphabet: set(['1', '0'])
Starting state: 5
Accepting states: ['1', '3', '6']
Transition function:
	1	10	3	5	6
1 	1	10	1	1	1
0 	6	10	10	6	3
Current state: 5
Currently accepting: False

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:11
Done fitting takes time: 0.7121
==Minimized===

This DFA has 5 states
States: ['3', '1', '6', '11', '5']
Alphabet: set(['1', '0'])
Starting state: 5
Accepting states: ['1', '3', '6']
Transition function:
	1	11	3	5	6
1 	1	11	1	1	1
0 	6	11	11	6	3
Current state: 5
Currently accepting: False

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:12
Done fitting takes time: 0.5715
==Minimized===

This DFA has 5 states
States: ['3', '12', '1', '11', '5']
Alphabet: set(['1', '0'])
Starting state: 5
Accepting states: ['12', '1', '3']
Transition function:
	1	11	12	3	5
1 	1	11	1	1	1
0 	12	11	3	11	12
Current state: 5
Currently accepting: False

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:13
Done fitting takes time: 0.5694
==Minimized===

This DFA has 5 states
States: ['3', '13', '12', '11', '5']
Alphabet: set(['1', '0'])
Starting state: 5
Accepting states: ['13', '12', '3']
Transition function:
	11	12	13	3	5
1 	11	13	13	13	13
0 	11	3	12	11	12
Current state: 5
Currently accepting: False

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:14
Done fitting takes time: 0.5771
==Minimized===

This DFA has 5 states
States: ['3', '13', '12', '11', '5']
Alphabet: set(['1', '0'])
Starting state: 5
Accepting states: ['13', '12', '3']
Transition function:
	11	12	13	3	5
1 	11	13	13	13	13
0 	11	3	12	11	12
Current state: 5
Currently accepting: False

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:15
Done fitting takes time: 0.6005
==Minimized===

This DFA has 5 states
States: ['3', '13', '12', '11', '5']
Alphabet: set(['1', '0'])
Starting state: 5
Accepting states: ['13', '12', '3']
Transition function:
	11	12	13	3	5
1 	11	13	13	13	13
0 	11	3	12	11	12
Current state: 5
Currently accepting: False

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:16
Done fitting takes time: 0.7363
==Minimized===

This DFA has 5 states
States: ['3', '13', '12', '11', '5']
Alphabet: set(['1', '0'])
Starting state: 5
Accepting states: ['13', '12', '3']
Transition function:
	11	12	13	3	5
1 	11	13	13	13	13
0 	11	3	12	11	12
Current state: 5
Currently accepting: False

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:17
Done fitting takes time: 2.0774
==Minimized===

This DFA has 5 states
States: ['3', '13', '12', '11', '5']
Alphabet: set(['1', '0'])
Starting state: 5
Accepting states: ['13', '12', '3']
Transition function:
	11	12	13	3	5
1 	11	13	13	13	13
0 	11	3	12	11	12
Current state: 5
Currently accepting: False

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:18
Done fitting takes time: 1.4038
==Minimized===

This DFA has 5 states
States: ['3', '13', '12', '11', '5']
Alphabet: set(['1', '0'])
Starting state: 5
Accepting states: ['13', '12', '3']
Transition function:
	11	12	13	3	5
1 	11	13	13	13	13
0 	11	3	12	11	12
Current state: 5
Currently accepting: False

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:19
Done fitting takes time: 1.7647
==Minimized===

This DFA has 5 states
States: ['3', '13', '12', '11', '5']
Alphabet: set(['1', '0'])
Starting state: 5
Accepting states: ['13', '12', '3']
Transition function:
	11	12	13	3	5
1 	11	13	13	13	13
0 	11	3	12	11	12
Current state: 5
Currently accepting: False

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000
[ 0.  0.  0.  0.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.]


[[ 0.          0.65829436  1.          1.          0.70816044  1.          1.
   1.          1.          1.          1.          1.          1.          1.
   1.          1.          1.          1.        ]
 [ 0.          0.          0.          0.          0.49870776  0.
   0.19861722  0.31269841  0.          0.22854679  0.          0.50044383
   0.00272109  0.49501794  0.42507031  0.26136715  0.26136715  0.50770812]
 [ 0.          0.          0.65829436  0.65829436  0.90690499  0.94447509
   1.          1.          1.          1.          1.          1.          1.
   1.          1.          1.          1.          1.        ]
 [ 0.          0.          0.          0.          1.          1.          1.
   1.          1.          1.          1.          1.          1.          1.
   1.          1.          1.          1.        ]
 [ 0.65829436  0.65829436  0.90690499  0.94447509  0.94447509  0.94447509
   1.          1.          1.          1.          1.          1.          1.
   1.          1.          1.          1.          1.        ]
 [ 0.          0.          0.65829436  1.          1.          1.          1.
   1.          1.          1.          1.          1.          1.          1.
   1.          1.          1.          1.        ]
 [ 0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.        ]
 [ 0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.        ]
 [ 0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.        ]]
