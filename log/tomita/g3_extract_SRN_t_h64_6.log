G:g3, model:SRN tanh, load all data and stored hidden activations


--------------------------------------------------------------------
Begin DFA extraction with n_state:2
Done fitting takes time: 0.5072
==Minimized===

This DFA has 1 states
States: ['1']
Alphabet: set(['1', '0'])
Starting state: 1
Accepting states: []
Transition function:
	1
1 	1
0 	1
Current state: 1
Currently accepting: False

Precision: 0.0000 Recall: 0.0000 Accuracy: 0.5422 F1: 0.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:3
Done fitting takes time: 0.3166
==Minimized===

This DFA has 1 states
States: ['2']
Alphabet: set(['1', '0'])
Starting state: 2
Accepting states: []
Transition function:
	2
1 	2
0 	2
Current state: 2
Currently accepting: False

Precision: 0.0000 Recall: 0.0000 Accuracy: 0.5422 F1: 0.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:4
Done fitting takes time: 0.3265
==Minimized===

This DFA has 1 states
States: ['3']
Alphabet: set(['1', '0'])
Starting state: 3
Accepting states: []
Transition function:
	3
1 	3
0 	3
Current state: 3
Currently accepting: False

Precision: 0.0000 Recall: 0.0000 Accuracy: 0.5422 F1: 0.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:5
Done fitting takes time: 0.5164
==Minimized===

This DFA has 1 states
States: ['3']
Alphabet: set(['1', '0'])
Starting state: 3
Accepting states: []
Transition function:
	3
1 	3
0 	3
Current state: 3
Currently accepting: False

Precision: 0.0000 Recall: 0.0000 Accuracy: 0.5422 F1: 0.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:6
Done fitting takes time: 0.7117
==Minimized===

This DFA has 1 states
States: ['5']
Alphabet: set(['1', '0'])
Starting state: 5
Accepting states: []
Transition function:
	5
1 	5
0 	5
Current state: 5
Currently accepting: False

Precision: 0.0000 Recall: 0.0000 Accuracy: 0.5422 F1: 0.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:7
Done fitting takes time: 0.5570
==Minimized===

This DFA has 2 states
States: ['5', '3']
Alphabet: set(['1', '0'])
Starting state: 5
Accepting states: ['5']
Transition function:
	3	5
1 	3	3
0 	3	3
Current state: 5
Currently accepting: True

Precision: 0.0000 Recall: 0.0000 Accuracy: 0.5422 F1: 0.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:8
Done fitting takes time: 0.7162
==Minimized===

This DFA has 2 states
States: ['5', '3']
Alphabet: set(['1', '0'])
Starting state: 5
Accepting states: ['5']
Transition function:
	3	5
1 	3	3
0 	3	3
Current state: 5
Currently accepting: True

Precision: 0.0000 Recall: 0.0000 Accuracy: 0.5422 F1: 0.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:9
Done fitting takes time: 0.6325
==Minimized===

This DFA has 5 states
States: ['8', '6', '9', '3', '5']
Alphabet: set(['1', '0'])
Starting state: 5
Accepting states: ['8']
Transition function:
	3	5	6	8	9
1 	9	3	8	6	3
0 	9	3	8	6	6
Current state: 5
Currently accepting: False

Precision: 0.4684 Recall: 0.5053 Accuracy: 0.5111 F1: 0.4862


--------------------------------------------------------------------
Begin DFA extraction with n_state:10
Done fitting takes time: 0.6652
==Minimized===

This DFA has 5 states
States: ['7', '6', '9', '3', '5']
Alphabet: set(['1', '0'])
Starting state: 5
Accepting states: ['7']
Transition function:
	3	5	6	7	9
1 	9	3	7	6	6
0 	9	3	7	6	6
Current state: 5
Currently accepting: False

Precision: 0.4601 Recall: 0.5174 Accuracy: 0.5012 F1: 0.4871


--------------------------------------------------------------------
Begin DFA extraction with n_state:11
Done fitting takes time: 0.2272
==Minimized===

This DFA has 7 states
States: ['6', '5', '7', '2', '3', '11', '9']
Alphabet: set(['1', '0'])
Starting state: 5
Accepting states: ['5', '7']
Transition function:
	11	2	3	5	6	7	9
1 	9	6	2	11	5	6	3
0 	9	3	2	11	7	6	3
Current state: 5
Currently accepting: True

Precision: 0.3897 Recall: 0.1558 Accuracy: 0.5018 F1: 0.2226


--------------------------------------------------------------------
Begin DFA extraction with n_state:12
Done fitting takes time: 0.7594
==Minimized===

This DFA has 7 states
States: ['7', '6', '2', '3', '9', '11', '5']
Alphabet: set(['1', '0'])
Starting state: 5
Accepting states: ['7']
Transition function:
	11	2	3	5	6	7	9
1 	9	6	2	11	7	6	3
0 	9	3	2	11	7	6	3
Current state: 5
Currently accepting: False

Precision: 0.4567 Recall: 0.4675 Accuracy: 0.5016 F1: 0.4620


--------------------------------------------------------------------
Begin DFA extraction with n_state:13
Done fitting takes time: 0.8310
==Minimized===

This DFA has 7 states
States: ['7', '6', '2', '3', '9', '11', '5']
Alphabet: set(['1', '0'])
Starting state: 5
Accepting states: ['7']
Transition function:
	11	2	3	5	6	7	9
1 	9	6	2	11	7	6	3
0 	9	6	2	11	7	6	3
Current state: 5
Currently accepting: False

Precision: 0.4589 Recall: 0.5124 Accuracy: 0.5002 F1: 0.4842


--------------------------------------------------------------------
Begin DFA extraction with n_state:14
Done fitting takes time: 0.9067
==Minimized===

This DFA has 5 states
States: ['10', '3', '9', '11', '5']
Alphabet: set(['1', '0'])
Starting state: 5
Accepting states: ['10']
Transition function:
	10	11	3	5	9
1 	3	9	10	11	3
0 	3	9	10	11	3
Current state: 5
Currently accepting: False

Precision: 0.4601 Recall: 0.5174 Accuracy: 0.5012 F1: 0.4871


--------------------------------------------------------------------
Begin DFA extraction with n_state:15
Done fitting takes time: 0.7923
==Minimized===

This DFA has 1 states
States: ['11']
Alphabet: set(['1', '0'])
Starting state: 11
Accepting states: []
Transition function:
	11
1 	11
0 	11
Current state: 11
Currently accepting: False

Precision: 0.0000 Recall: 0.0000 Accuracy: 0.5422 F1: 0.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:16
Done fitting takes time: 0.7849
==Minimized===

This DFA has 1 states
States: ['11']
Alphabet: set(['1', '0'])
Starting state: 11
Accepting states: []
Transition function:
	11
1 	11
0 	11
Current state: 11
Currently accepting: False

Precision: 0.0000 Recall: 0.0000 Accuracy: 0.5422 F1: 0.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:17
Done fitting takes time: 0.9431
==Minimized===

This DFA has 8 states
States: ['3', '14', '16', '11', '2', '5', '12', '17']
Alphabet: set(['1', '0'])
Starting state: 5
Accepting states: ['12', '17', '3']
Transition function:
	11	12	14	16	17	2	3	5
1 	14	16	17	12	14	16	2	11
0 	14	16	3	12	14	3	2	11
Current state: 5
Currently accepting: False

Precision: 0.4442 Recall: 0.4695 Accuracy: 0.4882 F1: 0.4565


--------------------------------------------------------------------
Begin DFA extraction with n_state:18
Done fitting takes time: 0.9531
==Minimized===

This DFA has 8 states
States: ['3', '14', '18', '11', '2', '5', '12', '17']
Alphabet: set(['1', '0'])
Starting state: 5
Accepting states: ['12', '17', '3']
Transition function:
	11	12	14	17	18	2	3	5
1 	14	18	17	14	12	18	2	11
0 	14	18	3	14	12	3	2	11
Current state: 5
Currently accepting: False

Precision: 0.4442 Recall: 0.4695 Accuracy: 0.4882 F1: 0.4565


--------------------------------------------------------------------
Begin DFA extraction with n_state:19
Done fitting takes time: 0.5680
==Minimized===

This DFA has 8 states
States: ['11', '5', '14', '18', '12', '17', '3', '2']
Alphabet: set(['1', '0'])
Starting state: 5
Accepting states: ['12', '17', '3', '2']
Transition function:
	11	12	14	17	18	2	3	5
1 	14	18	17	14	12	17	12	11
0 	14	18	3	14	12	3	2	11
Current state: 5
Currently accepting: False

Precision: 0.4823 Recall: 0.6107 Accuracy: 0.5217 F1: 0.5389
[ 0.          0.          0.          0.          0.          0.          0.
  0.48617176  0.48706385  0.22262248  0.4619985   0.48415535  0.48706385
  0.          0.          0.45648443  0.45648443  0.53894081]


[[ 0.          0.          0.6280285   0.6280285   0.6280285   0.6280285
   0.6280285   0.6280285   0.6280285   0.6280285   0.90734386  0.90734386
   1.          1.          1.          1.          1.          1.        ]
 [ 0.          0.          0.          0.          0.          0.          0.
   0.48617176  0.48706385  0.22262248  0.4619985   0.48415535  0.48706385
   0.          0.          0.45648443  0.45648443  0.53894081]
 [ 0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.        ]
 [ 0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.        ]
 [ 0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.        ]
 [ 0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.        ]
 [ 0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.        ]
 [ 0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.        ]
 [ 0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.        ]]
