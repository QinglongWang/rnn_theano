G:g3, model:SRN tanh, load all data and stored hidden activations


--------------------------------------------------------------------
Begin DFA extraction with n_state:2
Done fitting takes time: 0.4734
==Minimized===

This DFA has 1 states
States: ['2']
Alphabet: set(['1', '0'])
Starting state: 2
Accepting states: []
Transition function:
	2
1 	2
0 	2
Current state: 2
Currently accepting: False

Precision: 0.0000 Recall: 0.0000 Accuracy: 0.5422 F1: 0.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:3
Done fitting takes time: 0.6345
==Minimized===

This DFA has 1 states
States: ['3']
Alphabet: set(['1', '0'])
Starting state: 3
Accepting states: []
Transition function:
	3
1 	3
0 	3
Current state: 3
Currently accepting: False

Precision: 0.0000 Recall: 0.0000 Accuracy: 0.5422 F1: 0.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:4
Done fitting takes time: 0.6275
==Minimized===

This DFA has 1 states
States: ['4']
Alphabet: set(['1', '0'])
Starting state: 4
Accepting states: []
Transition function:
	4
1 	4
0 	4
Current state: 4
Currently accepting: False

Precision: 0.0000 Recall: 0.0000 Accuracy: 0.5422 F1: 0.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:5
Done fitting takes time: 0.3741
==Minimized===

This DFA has 1 states
States: ['3']
Alphabet: set(['1', '0'])
Starting state: 3
Accepting states: []
Transition function:
	3
1 	3
0 	3
Current state: 3
Currently accepting: False

Precision: 0.0000 Recall: 0.0000 Accuracy: 0.5422 F1: 0.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:6
Done fitting takes time: 1.0166
==Minimized===

This DFA has 1 states
States: ['3']
Alphabet: set(['1', '0'])
Starting state: 3
Accepting states: []
Transition function:
	3
1 	3
0 	3
Current state: 3
Currently accepting: False

Precision: 0.0000 Recall: 0.0000 Accuracy: 0.5422 F1: 0.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:7
Done fitting takes time: 0.9608
==Minimized===

This DFA has 1 states
States: ['3']
Alphabet: set(['1', '0'])
Starting state: 3
Accepting states: []
Transition function:
	3
1 	3
0 	3
Current state: 3
Currently accepting: False

Precision: 0.0000 Recall: 0.0000 Accuracy: 0.5422 F1: 0.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:8
Done fitting takes time: 0.9666
==Minimized===

This DFA has 6 states
States: ['3', '5', '7', '6', '2', '8']
Alphabet: set(['1', '0'])
Starting state: 6
Accepting states: ['7', '6']
Transition function:
	2	3	5	6	7	8
1 	8	7	3	2	5	5
0 	8	8	3	2	5	5
Current state: 6
Currently accepting: True

Precision: 0.5159 Recall: 0.1962 Accuracy: 0.5478 F1: 0.2843


--------------------------------------------------------------------
Begin DFA extraction with n_state:9
Done fitting takes time: 1.0564
==Minimized===

This DFA has 1 states
States: ['2']
Alphabet: set(['1', '0'])
Starting state: 2
Accepting states: []
Transition function:
	2
1 	2
0 	2
Current state: 2
Currently accepting: False

Precision: 0.0000 Recall: 0.0000 Accuracy: 0.5422 F1: 0.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:10
Done fitting takes time: 0.7219
==Minimized===

This DFA has 8 states
States: ['3', '5', '9', '10', '2', '6', '8', '7']
Alphabet: set(['1', '0'])
Starting state: 6
Accepting states: ['8', '3', '7', '6']
Transition function:
	10	2	3	5	6	7	8	9
1 	10	9	7	6	2	5	5	5
0 	10	9	8	3	2	10	5	5
Current state: 6
Currently accepting: True

Precision: 0.5326 Recall: 0.3828 Accuracy: 0.5637 F1: 0.4454


--------------------------------------------------------------------
Begin DFA extraction with n_state:11
Done fitting takes time: 0.8252
==Minimized===

This DFA has 8 states
States: ['3', '5', '9', '7', '2', '8', '1', '6']
Alphabet: set(['1', '0'])
Starting state: 6
Accepting states: ['1', '3', '7', '6']
Transition function:
	1	2	3	5	6	7	8	9
1 	8	9	7	1	2	5	5	6
0 	8	9	8	3	2	5	5	5
Current state: 6
Currently accepting: True

Precision: 0.4623 Recall: 0.4236 Accuracy: 0.5106 F1: 0.4421


--------------------------------------------------------------------
Begin DFA extraction with n_state:12
Done fitting takes time: 1.0495
==Minimized===

This DFA has 9 states
States: ['3', '5', '9', '11', '2', '1', '6', '12', '7']
Alphabet: set(['1', '0'])
Starting state: 6
Accepting states: ['1', '3', '12', '7', '6']
Transition function:
	1	11	12	2	3	5	6	7	9
1 	9	11	5	9	7	1	2	5	5
0 	9	11	5	9	12	3	2	11	5
Current state: 6
Currently accepting: True

Precision: 0.5341 Recall: 0.4508 Accuracy: 0.5686 F1: 0.4889


--------------------------------------------------------------------
Begin DFA extraction with n_state:13
Done fitting takes time: 1.2056
==Minimized===

This DFA has 6 states
States: ['13', '4', '5', '6', '3', '2']
Alphabet: set(['1', '0'])
Starting state: 6
Accepting states: ['13', '5', '6']
Transition function:
	13	2	3	4	5	6
1 	6	5	5	3	4	2
0 	4	13	5	3	4	2
Current state: 6
Currently accepting: True

Precision: 0.4598 Recall: 0.3263 Accuracy: 0.5162 F1: 0.3817


--------------------------------------------------------------------
Begin DFA extraction with n_state:14
Done fitting takes time: 1.1637
==Minimized===

This DFA has 3 states
States: ['13', '14', '2']
Alphabet: set(['1', '0'])
Starting state: 14
Accepting states: ['13']
Transition function:
	13	14	2
1 	14	2	13
0 	14	2	13
Current state: 14
Currently accepting: False

Precision: 0.4591 Recall: 0.3227 Accuracy: 0.5159 F1: 0.3790


--------------------------------------------------------------------
Begin DFA extraction with n_state:15
Done fitting takes time: 1.1030
==Minimized===

This DFA has 3 states
States: ['2', '13', '14']
Alphabet: set(['1', '0'])
Starting state: 14
Accepting states: ['2']
Transition function:
	13	14	2
1 	14	2	13
0 	14	2	13
Current state: 14
Currently accepting: False

Precision: 0.4562 Recall: 0.3520 Accuracy: 0.5113 F1: 0.3974


--------------------------------------------------------------------
Begin DFA extraction with n_state:16
Done fitting takes time: 1.1057
==Minimized===

This DFA has 7 states
States: ['14', '4', '16', '13', '5', '12', '15']
Alphabet: set(['1', '0'])
Starting state: 14
Accepting states: ['12', '15', '14', '4']
Transition function:
	12	13	14	15	16	4	5
1 	5	16	15	13	4	5	5
0 	5	16	15	13	12	12	5
Current state: 14
Currently accepting: True

Precision: 0.5385 Recall: 0.0071 Accuracy: 0.5427 F1: 0.0139


--------------------------------------------------------------------
Begin DFA extraction with n_state:17
Done fitting takes time: 1.1649
==Minimized===

This DFA has 3 states
States: ['13', '15', '14']
Alphabet: set(['1', '0'])
Starting state: 14
Accepting states: ['15', '14']
Transition function:
	13	14	15
1 	13	15	13
0 	13	15	13
Current state: 14
Currently accepting: True

Precision: 1.0000 Recall: 0.0010 Accuracy: 0.5427 F1: 0.0020


--------------------------------------------------------------------
Begin DFA extraction with n_state:18
Done fitting takes time: 1.3549
==Minimized===

This DFA has 3 states
States: ['13', '15', '14']
Alphabet: set(['1', '0'])
Starting state: 14
Accepting states: ['15', '14']
Transition function:
	13	14	15
1 	13	15	13
0 	13	15	13
Current state: 14
Currently accepting: True

Precision: 1.0000 Recall: 0.0010 Accuracy: 0.5427 F1: 0.0020


--------------------------------------------------------------------
Begin DFA extraction with n_state:19
Done fitting takes time: 0.3508
==Minimized===

This DFA has 10 states
States: ['7', '3', '16', '13', '14', '17', '6', '12', '15', '4']
Alphabet: set(['1', '0'])
Starting state: 14
Accepting states: ['12', '15', '4', '7']
Transition function:
	12	13	14	15	16	17	3	4	6	7
1 	14	16	6	13	3	14	7	6	17	14
0 	14	16	15	13	3	14	12	6	17	4
Current state: 14
Currently accepting: False

Precision: 0.3796 Recall: 0.1780 Accuracy: 0.4905 F1: 0.2424
[ 0.          0.          0.          0.          0.          0.
  0.28425283  0.          0.44542254  0.44210526  0.48892535  0.38171091
  0.37903465  0.39738116  0.01393728  0.00201511  0.00201511  0.24236183]


[[ 0.          0.43092666  0.43137255  0.6280285   0.6280285   0.67150928
   0.67150928  0.85577649  0.85577649  0.85577649  0.85577649  0.85577649
   1.          1.          1.          1.          1.          1.        ]
 [ 0.          0.          0.          0.          0.          0.
   0.28425283  0.          0.44542254  0.44210526  0.48892535  0.38171091
   0.37903465  0.39738116  0.01393728  0.00201511  0.00201511  0.24236183]
 [ 0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.        ]
 [ 0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.        ]
 [ 0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.        ]
 [ 0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.        ]
 [ 0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.        ]
 [ 0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.        ]
 [ 0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.        ]]
