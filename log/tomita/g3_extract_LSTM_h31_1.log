G:g3, model:LSTM tanh, load all data and stored hidden activations


--------------------------------------------------------------------
Begin DFA extraction with n_state:2
Done fitting takes time: 0.3417
==Minimized===

This DFA has 1 states
States: ['2']
Alphabet: set(['1', '0'])
Starting state: 2
Accepting states: []
Transition function:
	2
1 	2
0 	2
Current state: 2
Currently accepting: False

Precision: 0.0000 Recall: 0.0000 Accuracy: 0.5422 F1: 0.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:3
Done fitting takes time: 0.2447
==Minimized===

This DFA has 1 states
States: ['3']
Alphabet: set(['1', '0'])
Starting state: 3
Accepting states: ['3']
Transition function:
	3
1 	3
0 	3
Current state: 3
Currently accepting: True

Precision: 0.4578 Recall: 1.0000 Accuracy: 0.4578 F1: 0.6280


--------------------------------------------------------------------
Begin DFA extraction with n_state:4
Done fitting takes time: 0.2465
==Minimized===

This DFA has 1 states
States: ['2']
Alphabet: set(['1', '0'])
Starting state: 2
Accepting states: []
Transition function:
	2
1 	2
0 	2
Current state: 2
Currently accepting: False

Precision: 0.0000 Recall: 0.0000 Accuracy: 0.5422 F1: 0.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:5
Done fitting takes time: 0.5389
==Minimized===

This DFA has 1 states
States: ['3']
Alphabet: set(['1', '0'])
Starting state: 3
Accepting states: []
Transition function:
	3
1 	3
0 	3
Current state: 3
Currently accepting: False

Precision: 0.0000 Recall: 0.0000 Accuracy: 0.5422 F1: 0.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:6
Done fitting takes time: 0.2446
==Minimized===

This DFA has 3 states
States: ['3', '2', '4']
Alphabet: set(['1', '0'])
Starting state: 3
Accepting states: ['3']
Transition function:
	2	3	4
1 	3	2	2
0 	4	3	2
Current state: 3
Currently accepting: True

Precision: 0.5474 Recall: 0.5300 Accuracy: 0.5843 F1: 0.5386


--------------------------------------------------------------------
Begin DFA extraction with n_state:7
Done fitting takes time: 0.6378
==Minimized===

This DFA has 4 states
States: ['3', '2', '1', '4']
Alphabet: set(['1', '0'])
Starting state: 3
Accepting states: ['3', '2']
Transition function:
	1	2	3	4
1 	1	3	2	1
0 	1	4	3	2
Current state: 3
Currently accepting: True

Precision: 0.9005 Recall: 1.0000 Accuracy: 0.9494 F1: 0.9477


--------------------------------------------------------------------
Begin DFA extraction with n_state:8
Done fitting takes time: 0.2526
==Minimized===

This DFA has 5 states
States: ['3', '8', '2', '1', '4']
Alphabet: set(['1', '0'])
Starting state: 3
Accepting states: ['8', '3', '2']
Transition function:
	1	2	3	4	8
1 	1	2	8	1	3
0 	1	4	3	2	4
Current state: 3
Currently accepting: True

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:9
Done fitting takes time: 0.2984
==Minimized===

This DFA has 5 states
States: ['3', '2', '8', '1', '4']
Alphabet: set(['1', '0'])
Starting state: 3
Accepting states: ['3', '2', '8']
Transition function:
	1	2	3	4	8
1 	1	2	8	1	3
0 	1	4	3	2	4
Current state: 3
Currently accepting: True

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:10
Done fitting takes time: 0.2659
==Minimized===

This DFA has 8 states
States: ['5', '6', '8', '3', '2', '10', '1', '4']
Alphabet: set(['1', '0'])
Starting state: 6
Accepting states: ['3', '2', '5', '6', '8']
Transition function:
	1	10	2	3	4	5	6	8
1 	1	8	2	8	1	10	5	6
0 	1	3	4	3	2	10	3	4
Current state: 6
Currently accepting: True

Precision: 0.8540 Recall: 0.9642 Accuracy: 0.9081 F1: 0.9057


--------------------------------------------------------------------
Begin DFA extraction with n_state:11
Done fitting takes time: 0.2451
==Minimized===

This DFA has 8 states
States: ['5', '6', '8', '3', '2', '10', '11', '4']
Alphabet: set(['1', '0'])
Starting state: 6
Accepting states: ['3', '2', '5', '6', '8']
Transition function:
	10	11	2	3	4	5	6	8
1 	8	11	2	8	11	10	5	6
0 	3	11	4	3	2	10	3	4
Current state: 6
Currently accepting: True

Precision: 0.8540 Recall: 0.9642 Accuracy: 0.9081 F1: 0.9057


--------------------------------------------------------------------
Begin DFA extraction with n_state:12
Done fitting takes time: 0.2467
==Minimized===

This DFA has 8 states
States: ['5', '6', '8', '3', '2', '10', '11', '4']
Alphabet: set(['1', '0'])
Starting state: 6
Accepting states: ['3', '2', '5', '6', '8']
Transition function:
	10	11	2	3	4	5	6	8
1 	8	11	2	8	11	10	5	6
0 	3	11	4	3	2	10	3	4
Current state: 6
Currently accepting: True

Precision: 0.8540 Recall: 0.9642 Accuracy: 0.9081 F1: 0.9057


--------------------------------------------------------------------
Begin DFA extraction with n_state:13
Done fitting takes time: 0.2661
==Minimized===

This DFA has 8 states
States: ['3', '9', '8', '10', '5', '13', '11', '4']
Alphabet: set(['1', '0'])
Starting state: 13
Accepting states: ['9', '8', '3']
Transition function:
	10	11	13	3	4	5	8	9
1 	8	11	5	8	11	10	3	9
0 	3	11	5	3	9	10	4	4
Current state: 13
Currently accepting: False

Precision: 0.8459 Recall: 0.8638 Accuracy: 0.8657 F1: 0.8548


--------------------------------------------------------------------
Begin DFA extraction with n_state:14
Done fitting takes time: 0.4396
==Minimized===

This DFA has 8 states
States: ['3', '9', '8', '10', '5', '13', '11', '14']
Alphabet: set(['1', '0'])
Starting state: 13
Accepting states: ['9', '8', '3']
Transition function:
	10	11	13	14	3	5	8	9
1 	8	11	5	11	8	10	3	9
0 	3	11	5	9	3	10	14	14
Current state: 13
Currently accepting: False

Precision: 0.8459 Recall: 0.8638 Accuracy: 0.8657 F1: 0.8548


--------------------------------------------------------------------
Begin DFA extraction with n_state:15
Done fitting takes time: 0.5367
==Minimized===

This DFA has 8 states
States: ['3', '9', '8', '10', '5', '13', '11', '14']
Alphabet: set(['1', '0'])
Starting state: 13
Accepting states: ['9', '8', '3']
Transition function:
	10	11	13	14	3	5	8	9
1 	8	11	5	11	8	10	3	9
0 	3	11	5	9	3	10	14	14
Current state: 13
Currently accepting: False

Precision: 0.8459 Recall: 0.8638 Accuracy: 0.8657 F1: 0.8548


--------------------------------------------------------------------
Begin DFA extraction with n_state:16
Done fitting takes time: 0.7062
==Minimized===

This DFA has 8 states
States: ['3', '9', '8', '10', '5', '13', '11', '14']
Alphabet: set(['1', '0'])
Starting state: 13
Accepting states: ['9', '8', '3']
Transition function:
	10	11	13	14	3	5	8	9
1 	8	11	5	11	8	10	3	9
0 	3	11	5	9	3	10	14	14
Current state: 13
Currently accepting: False

Precision: 0.8459 Recall: 0.8638 Accuracy: 0.8657 F1: 0.8548


--------------------------------------------------------------------
Begin DFA extraction with n_state:17
Done fitting takes time: 0.3222
==Minimized===

This DFA has 8 states
States: ['3', '9', '8', '10', '5', '13', '11', '14']
Alphabet: set(['1', '0'])
Starting state: 13
Accepting states: ['9', '8', '3']
Transition function:
	10	11	13	14	3	5	8	9
1 	8	11	5	11	8	10	3	9
0 	3	11	5	9	3	10	14	14
Current state: 13
Currently accepting: False

Precision: 0.8459 Recall: 0.8638 Accuracy: 0.8657 F1: 0.8548


--------------------------------------------------------------------
Begin DFA extraction with n_state:18
Done fitting takes time: 0.2807
==Minimized===

This DFA has 8 states
States: ['3', '9', '8', '10', '5', '13', '11', '14']
Alphabet: set(['1', '0'])
Starting state: 13
Accepting states: ['9', '8', '3']
Transition function:
	10	11	13	14	3	5	8	9
1 	8	11	5	11	8	10	3	9
0 	3	11	5	9	3	10	14	14
Current state: 13
Currently accepting: False

Precision: 0.8459 Recall: 0.8638 Accuracy: 0.8657 F1: 0.8548


--------------------------------------------------------------------
Begin DFA extraction with n_state:19
Done fitting takes time: 0.3911
==Minimized===

This DFA has 7 states
States: ['10', '2', '8', '5', '13', '11', '14']
Alphabet: set(['1', '0'])
Starting state: 13
Accepting states: ['10', '2', '8']
Transition function:
	10	11	13	14	2	5	8
1 	8	11	5	11	2	10	10
0 	10	11	5	2	14	10	14
Current state: 13
Currently accepting: False

Precision: 0.8457 Recall: 0.8654 Accuracy: 0.8661 F1: 0.8554
[ 0.          0.6280285   0.          0.          0.53856008  0.94767025
  1.          1.          0.90573188  0.90573188  0.90573188  0.85479042
  0.85479042  0.85479042  0.85479042  0.85479042  0.85479042  0.8554337 ]


[[ 0.          0.          0.6280285   0.6280285   0.94767025  0.94767025
   1.          0.73700591  0.73700591  0.73700591  0.73700591  1.
   0.73700591  0.73700591  0.96145455  0.96145455  0.96145455  0.97853442]
 [ 0.          0.          0.          0.          0.          0.01203008
   0.0803485   0.10132576  0.          0.          0.          0.
   0.18580122  0.42804218  0.          0.          0.43048052  0.00902256]
 [ 0.6280285   0.6280285   0.94767025  0.45920746  0.45920746  1.          1.
   0.45920746  0.45920746  0.45920746  0.45920746  0.85577649  1.          1.
   1.          1.          1.          1.        ]
 [ 0.          0.43092666  0.94767025  0.45920746  0.45920746  1.          1.
   1.          1.          1.          1.          1.          1.          1.
   1.          1.          1.          1.        ]
 [ 0.6280285   0.6280285   0.45920746  0.45920746  0.45920746  0.45920746
   0.45920746  1.          1.          1.          1.          1.          1.
   1.          1.          1.          1.          1.        ]
 [ 0.          0.          0.          0.94767025  1.          1.          1.
   1.          1.          1.          1.          1.          1.          1.
   1.          1.          1.          1.        ]
 [ 0.          0.          0.6280285   0.09341637  0.09341637  0.09341637
   0.6693462   0.48014184  0.09341637  0.85155684  0.85155684  0.85155684
   0.67180551  0.63221785  0.65069729  0.65069729  0.63463431  0.65069729]
 [ 0.          0.6280285   0.          0.          0.53856008  0.94767025
   1.          1.          0.90573188  0.90573188  0.90573188  0.85479042
   0.85479042  0.85479042  0.85479042  0.85479042  0.85479042  0.8554337 ]
 [ 0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.        ]]
