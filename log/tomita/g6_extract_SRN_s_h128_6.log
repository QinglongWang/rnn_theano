G:g6, model:SRN sigmoid, load all data and stored hidden activations


--------------------------------------------------------------------
Begin DFA extraction with n_state:2
Done fitting takes time: 1.7282
==Minimized===

This DFA has 1 states
States: ['1']
Alphabet: set(['1', '0'])
Starting state: 1
Accepting states: []
Transition function:
	1
1 	1
0 	1
Current state: 1
Currently accepting: False

Precision: 0.0000 Recall: 0.0000 Accuracy: 0.5177 F1: 0.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:3
Done fitting takes time: 1.6782
==Minimized===

This DFA has 2 states
States: ['1', '3']
Alphabet: set(['1', '0'])
Starting state: 1
Accepting states: ['1']
Transition function:
	1	3
1 	3	1
0 	3	3
Current state: 1
Currently accepting: True

Precision: 0.4837 Recall: 0.3332 Accuracy: 0.5069 F1: 0.3946


--------------------------------------------------------------------
Begin DFA extraction with n_state:4
Done fitting takes time: 1.8026
==Minimized===

This DFA has 1 states
States: ['1']
Alphabet: set(['1', '0'])
Starting state: 1
Accepting states: []
Transition function:
	1
1 	1
0 	1
Current state: 1
Currently accepting: False

Precision: 0.0000 Recall: 0.0000 Accuracy: 0.5177 F1: 0.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:5
Done fitting takes time: 0.8863
==Minimized===

This DFA has 4 states
States: ['3', '4', '1', '2']
Alphabet: set(['1', '0'])
Starting state: 1
Accepting states: ['1', '2']
Transition function:
	1	2	3	4
1 	4	3	3	1
0 	4	3	3	2
Current state: 1
Currently accepting: True

Precision: 0.4643 Recall: 0.0113 Accuracy: 0.5169 F1: 0.0221


--------------------------------------------------------------------
Begin DFA extraction with n_state:6
Done fitting takes time: 1.6651
==Minimized===

This DFA has 4 states
States: ['3', '4', '1', '2']
Alphabet: set(['1', '0'])
Starting state: 1
Accepting states: ['1', '2']
Transition function:
	1	2	3	4
1 	4	3	3	1
0 	4	4	3	2
Current state: 1
Currently accepting: True

Precision: 0.4631 Recall: 0.0734 Accuracy: 0.5121 F1: 0.1267


--------------------------------------------------------------------
Begin DFA extraction with n_state:7
Done fitting takes time: 2.1179
==Minimized===

This DFA has 1 states
States: ['1']
Alphabet: set(['1', '0'])
Starting state: 1
Accepting states: []
Transition function:
	1
1 	1
0 	1
Current state: 1
Currently accepting: False

Precision: 0.0000 Recall: 0.0000 Accuracy: 0.5177 F1: 0.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:8
Done fitting takes time: 2.2170
==Minimized===

This DFA has 1 states
States: ['1']
Alphabet: set(['1', '0'])
Starting state: 1
Accepting states: []
Transition function:
	1
1 	1
0 	1
Current state: 1
Currently accepting: False

Precision: 0.0000 Recall: 0.0000 Accuracy: 0.5177 F1: 0.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:9
Done fitting takes time: 1.6865
==Minimized===

This DFA has 5 states
States: ['6', '9', '2', '1', '7']
Alphabet: set(['1', '0'])
Starting state: 1
Accepting states: ['1', '2', '7']
Transition function:
	1	2	6	7	9
1 	9	6	6	9	7
0 	9	6	6	6	2
Current state: 1
Currently accepting: True

Precision: 0.4000 Recall: 0.0014 Accuracy: 0.5174 F1: 0.0028


--------------------------------------------------------------------
Begin DFA extraction with n_state:10
Done fitting takes time: 1.7806
==Minimized===

This DFA has 2 states
States: ['1', '9']
Alphabet: set(['1', '0'])
Starting state: 1
Accepting states: ['1']
Transition function:
	1	9
1 	9	1
0 	9	1
Current state: 1
Currently accepting: True

Precision: 0.4822 Recall: 0.4812 Accuracy: 0.5006 F1: 0.4817


--------------------------------------------------------------------
Begin DFA extraction with n_state:11
Done fitting takes time: 2.7110
==Minimized===

This DFA has 2 states
States: ['10', '9']
Alphabet: set(['1', '0'])
Starting state: 10
Accepting states: ['10']
Transition function:
	10	9
1 	9	10
0 	9	10
Current state: 10
Currently accepting: True

Precision: 0.4822 Recall: 0.4812 Accuracy: 0.5006 F1: 0.4817


--------------------------------------------------------------------
Begin DFA extraction with n_state:12
Done fitting takes time: 2.1598
==Minimized===

This DFA has 2 states
States: ['10', '9']
Alphabet: set(['1', '0'])
Starting state: 10
Accepting states: ['10']
Transition function:
	10	9
1 	9	10
0 	9	10
Current state: 10
Currently accepting: True

Precision: 0.4822 Recall: 0.4812 Accuracy: 0.5006 F1: 0.4817


--------------------------------------------------------------------
Begin DFA extraction with n_state:13
Done fitting takes time: 2.5412
==Minimized===

This DFA has 11 states
States: ['8', '4', '6', '11', '9', '10', '2', '12', '1', '13', '3']
Alphabet: set(['1', '0'])
Starting state: 1
Accepting states: ['10', '12', '1', '4', '6', '8']
Transition function:
	1	10	11	12	13	2	3	4	6	8	9
1 	9	13	12	9	2	11	3	4	8	4	1
0 	9	13	6	3	2	11	3	3	3	6	10
Current state: 1
Currently accepting: True

Precision: 0.4608 Recall: 0.1197 Accuracy: 0.5079 F1: 0.1901


--------------------------------------------------------------------
Begin DFA extraction with n_state:14
Done fitting takes time: 1.9747
==Minimized===

This DFA has 1 states
States: ['10']
Alphabet: set(['1', '0'])
Starting state: 10
Accepting states: ['10']
Transition function:
	10
1 	10
0 	10
Current state: 10
Currently accepting: True

Precision: 0.4823 Recall: 1.0000 Accuracy: 0.4823 F1: 0.6507


--------------------------------------------------------------------
Begin DFA extraction with n_state:15
Done fitting takes time: 0.9522
==Minimized===

This DFA has 1 states
States: ['10']
Alphabet: set(['1', '0'])
Starting state: 10
Accepting states: ['10']
Transition function:
	10
1 	10
0 	10
Current state: 10
Currently accepting: True

Precision: 0.4823 Recall: 1.0000 Accuracy: 0.4823 F1: 0.6507


--------------------------------------------------------------------
Begin DFA extraction with n_state:16
Done fitting takes time: 3.4202
==Minimized===

This DFA has 11 states
States: ['10', '13', '8', '15', '11', '9', '12', '3', '1', '2', '6']
Alphabet: set(['1', '0'])
Starting state: 1
Accepting states: ['10', '13', '12', '1', '3', '2', '6', '8']
Transition function:
	1	10	11	12	13	15	2	3	6	8	9
1 	9	13	12	15	3	15	11	15	11	12	1
0 	9	15	6	15	2	15	11	13	8	8	10
Current state: 1
Currently accepting: True

Precision: 0.4676 Recall: 0.0552 Accuracy: 0.5140 F1: 0.0988


--------------------------------------------------------------------
Begin DFA extraction with n_state:17
Done fitting takes time: 2.5443
==Minimized===

This DFA has 1 states
States: ['10']
Alphabet: set(['1', '0'])
Starting state: 10
Accepting states: ['10']
Transition function:
	10
1 	10
0 	10
Current state: 10
Currently accepting: True

Precision: 0.4823 Recall: 1.0000 Accuracy: 0.4823 F1: 0.6507


--------------------------------------------------------------------
Begin DFA extraction with n_state:18
Done fitting takes time: 2.9054
==Minimized===

This DFA has 4 states
States: ['11', '9', '10', '1']
Alphabet: set(['1', '0'])
Starting state: 1
Accepting states: ['10', '1']
Transition function:
	1	10	11	9
1 	9	11	11	1
0 	9	11	11	10
Current state: 1
Currently accepting: True

Precision: 0.4643 Recall: 0.0113 Accuracy: 0.5169 F1: 0.0221


--------------------------------------------------------------------
Begin DFA extraction with n_state:19
Done fitting takes time: 2.6310
==Minimized===

This DFA has 8 states
States: ['13', '16', '19', '9', '1', '7', '10', '12']
Alphabet: set(['1', '0'])
Starting state: 1
Accepting states: ['10', '13', '12', '16', '1', '7']
Transition function:
	1	10	12	13	16	19	7	9
1 	13	9	19	1	16	12	13	7
0 	9	9	19	10	16	16	19	10
Current state: 1
Currently accepting: True

Precision: 0.4843 Recall: 0.8484 Accuracy: 0.4912 F1: 0.6166
[ 0.          0.39459292  0.          0.02211637  0.12667369  0.          0.
  0.00277874  0.48168179  0.48168179  0.48168179  0.19006778  0.65071445
  0.65071445  0.09881546  0.65071445  0.02211637  0.61659278]


[[ 0.          0.39459292  0.          0.02211637  0.12667369  0.          0.
   0.00277874  0.48168179  0.48168179  0.48168179  0.19006778  0.65071445
   0.65071445  0.09881546  0.65071445  0.02211637  0.61659278]
 [ 0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.        ]
 [ 0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.        ]
 [ 0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.        ]
 [ 0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.        ]
 [ 0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.        ]
 [ 0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.        ]
 [ 0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.        ]
 [ 0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.        ]]
