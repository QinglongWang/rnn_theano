G:g4, model:MI tanh, load all data and stored hidden activations


--------------------------------------------------------------------
Begin DFA extraction with n_state:2
Done fitting takes time: 0.9383
==Minimized===

This DFA has 1 states
States: ['1']
Alphabet: set(['1', '0'])
Starting state: 1
Accepting states: []
Transition function:
	1
1 	1
0 	1
Current state: 1
Currently accepting: False

Precision: 0.0000 Recall: 0.0000 Accuracy: 0.5094 F1: 0.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:3
Done fitting takes time: 0.5068
==Minimized===

This DFA has 1 states
States: ['1']
Alphabet: set(['1', '0'])
Starting state: 1
Accepting states: []
Transition function:
	1
1 	1
0 	1
Current state: 1
Currently accepting: False

Precision: 0.0000 Recall: 0.0000 Accuracy: 0.5094 F1: 0.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:4
Done fitting takes time: 1.1628
==Minimized===

This DFA has 1 states
States: ['1']
Alphabet: set(['1', '0'])
Starting state: 1
Accepting states: []
Transition function:
	1
1 	1
0 	1
Current state: 1
Currently accepting: False

Precision: 0.0000 Recall: 0.0000 Accuracy: 0.5094 F1: 0.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:5
Done fitting takes time: 0.7878
==Minimized===

This DFA has 1 states
States: ['1']
Alphabet: set(['1', '0'])
Starting state: 1
Accepting states: []
Transition function:
	1
1 	1
0 	1
Current state: 1
Currently accepting: False

Precision: 0.0000 Recall: 0.0000 Accuracy: 0.5094 F1: 0.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:6
Done fitting takes time: 0.5622
==Minimized===

This DFA has 2 states
States: ['1', '6']
Alphabet: set(['1', '0'])
Starting state: 1
Accepting states: ['1']
Transition function:
	1	6
1 	6	6
0 	6	6
Current state: 1
Currently accepting: True

Precision: 0.0000 Recall: 0.0000 Accuracy: 0.5094 F1: 0.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:7
Done fitting takes time: 0.5727
==Minimized===

This DFA has 2 states
States: ['1', '6']
Alphabet: set(['1', '0'])
Starting state: 1
Accepting states: ['1']
Transition function:
	1	6
1 	6	6
0 	6	6
Current state: 1
Currently accepting: True

Precision: 0.0000 Recall: 0.0000 Accuracy: 0.5094 F1: 0.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:8
Done fitting takes time: 0.6340
==Minimized===

This DFA has 4 states
States: ['4', '2', '1', '8']
Alphabet: set(['1', '0'])
Starting state: 1
Accepting states: ['1', '8', '2']
Transition function:
	1	2	4	8
1 	1	1	4	1
0 	8	4	4	2
Current state: 1
Currently accepting: True

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:9
Done fitting takes time: 0.6730
==Minimized===

This DFA has 4 states
States: ['4', '2', '1', '8']
Alphabet: set(['1', '0'])
Starting state: 1
Accepting states: ['1', '8', '2']
Transition function:
	1	2	4	8
1 	1	1	4	1
0 	8	4	4	2
Current state: 1
Currently accepting: True

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:10
Done fitting takes time: 1.4925
==Minimized===

This DFA has 4 states
States: ['10', '2', '1', '8']
Alphabet: set(['1', '0'])
Starting state: 1
Accepting states: ['1', '8', '2']
Transition function:
	1	10	2	8
1 	1	10	1	1
0 	8	10	10	2
Current state: 1
Currently accepting: True

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:11
Done fitting takes time: 1.0451
==Minimized===

This DFA has 4 states
States: ['4', '2', '11', '1']
Alphabet: set(['1', '0'])
Starting state: 1
Accepting states: ['11', '1', '2']
Transition function:
	1	11	2	4
1 	1	1	1	4
0 	11	2	4	4
Current state: 1
Currently accepting: True

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:12
Done fitting takes time: 1.6636
==Minimized===

This DFA has 4 states
States: ['10', '2', '11', '1']
Alphabet: set(['1', '0'])
Starting state: 1
Accepting states: ['11', '1', '2']
Transition function:
	1	10	11	2
1 	1	10	1	1
0 	11	10	2	10
Current state: 1
Currently accepting: True

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:13
Done fitting takes time: 0.6944
==Minimized===

This DFA has 6 states
States: ['9', '2', '11', '1', '10', '13']
Alphabet: set(['1', '0'])
Starting state: 9
Accepting states: ['11', '1', '2', '9']
Transition function:
	1	10	11	13	2	9
1 	1	10	1	1	9	13
0 	11	10	2	11	10	13
Current state: 9
Currently accepting: True

Precision: 0.9166 Recall: 0.9194 Accuracy: 0.9194 F1: 0.9180


--------------------------------------------------------------------
Begin DFA extraction with n_state:14
Done fitting takes time: 0.6105
==Minimized===

This DFA has 6 states
States: ['2', '11', '1', '13', '10', '14']
Alphabet: set(['1', '0'])
Starting state: 14
Accepting states: ['11', '1', '2']
Transition function:
	1	10	11	13	14	2
1 	1	10	1	1	13	1
0 	11	10	2	11	13	10
Current state: 14
Currently accepting: False

Precision: 0.9499 Recall: 0.9996 Accuracy: 0.9739 F1: 0.9741


--------------------------------------------------------------------
Begin DFA extraction with n_state:15
Done fitting takes time: 0.6093
==Minimized===

This DFA has 6 states
States: ['2', '11', '1', '13', '10', '14']
Alphabet: set(['1', '0'])
Starting state: 14
Accepting states: ['11', '1', '2']
Transition function:
	1	10	11	13	14	2
1 	1	10	1	1	13	1
0 	11	10	2	11	13	10
Current state: 14
Currently accepting: False

Precision: 0.9499 Recall: 0.9996 Accuracy: 0.9739 F1: 0.9741


--------------------------------------------------------------------
Begin DFA extraction with n_state:16
Done fitting takes time: 0.7317
==Minimized===

This DFA has 6 states
States: ['2', '11', '1', '13', '10', '14']
Alphabet: set(['1', '0'])
Starting state: 14
Accepting states: ['11', '1', '2']
Transition function:
	1	10	11	13	14	2
1 	1	10	1	1	13	1
0 	11	10	2	11	13	10
Current state: 14
Currently accepting: False

Precision: 0.9499 Recall: 0.9996 Accuracy: 0.9739 F1: 0.9741


--------------------------------------------------------------------
Begin DFA extraction with n_state:17
Done fitting takes time: 1.6922
==Minimized===

This DFA has 6 states
States: ['2', '11', '1', '13', '10', '14']
Alphabet: set(['1', '0'])
Starting state: 14
Accepting states: ['11', '1', '2']
Transition function:
	1	10	11	13	14	2
1 	1	10	1	1	13	1
0 	11	10	2	11	13	10
Current state: 14
Currently accepting: False

Precision: 0.9499 Recall: 0.9996 Accuracy: 0.9739 F1: 0.9741


--------------------------------------------------------------------
Begin DFA extraction with n_state:18
Done fitting takes time: 2.0444
==Minimized===

This DFA has 6 states
States: ['2', '11', '1', '13', '10', '14']
Alphabet: set(['1', '0'])
Starting state: 14
Accepting states: ['11', '1', '2']
Transition function:
	1	10	11	13	14	2
1 	1	10	1	1	13	1
0 	11	10	2	11	13	10
Current state: 14
Currently accepting: False

Precision: 0.9499 Recall: 0.9996 Accuracy: 0.9739 F1: 0.9741


--------------------------------------------------------------------
Begin DFA extraction with n_state:19
Done fitting takes time: 1.5461
==Minimized===

This DFA has 6 states
States: ['2', '11', '19', '13', '10', '14']
Alphabet: set(['1', '0'])
Starting state: 14
Accepting states: ['11', '19', '2']
Transition function:
	10	11	13	14	19	2
1 	10	19	19	13	19	19
0 	10	2	11	13	11	10
Current state: 14
Currently accepting: False

Precision: 0.9499 Recall: 0.9996 Accuracy: 0.9739 F1: 0.9741
[ 0.          0.          0.          0.          0.          0.          1.
  1.          1.          1.          1.          0.91797862  0.97410604
  0.97410604  0.97410604  0.97410604  0.97410604  0.97410604]


[[ 0.          0.          0.          0.60553864  0.82217742  0.91797862
   0.91797862  0.91797862  0.91797862  1.          1.          1.          1.
   1.          1.          1.          1.          1.        ]
 [ 0.          0.65829436  0.35072427  0.51631776  0.35072427  0.57622654
   0.57622654  0.57622654  0.57622654  0.57622654  0.57622654  0.57622654
   0.57596969  0.57596969  0.57596969  0.57596969  0.57596969  0.5752635 ]
 [ 0.65829436  0.65829436  0.90690499  0.94447509  1.          1.          1.
   1.          1.          1.          1.          1.          1.          1.
   1.          1.          1.          1.        ]
 [ 0.          0.20416011  0.90690499  1.          1.          1.          1.
   1.          1.          1.          1.          1.          1.          1.
   1.          1.          1.          1.        ]
 [ 0.          0.65829436  0.65829436  0.65829436  0.94447509  1.          1.
   1.          1.          1.          1.          1.          1.          1.
   1.          1.          1.          1.        ]
 [ 0.          0.          0.65829436  0.90690499  0.90690499  1.          1.
   1.          1.          1.          1.          1.          1.          1.
   1.          1.          1.          1.        ]
 [ 0.          0.          0.          0.          0.          0.          1.
   1.          1.          1.          1.          0.91797862  0.97410604
   0.97410604  0.97410604  0.97410604  0.97410604  0.97410604]
 [ 0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.        ]
 [ 0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.        ]]
