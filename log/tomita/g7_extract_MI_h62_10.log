G:g7, model:MI tanh, load all data and stored hidden activations


--------------------------------------------------------------------
Begin DFA extraction with n_state:2
Done fitting takes time: 0.0864
==Minimized===

This DFA has 1 states
States: ['1']
Alphabet: set(['1', '0'])
Starting state: 1
Accepting states: []
Transition function:
	1
1 	1
0 	1
Current state: 1
Currently accepting: False

Precision: 0.0000 Recall: 0.0000 Accuracy: 0.5731 F1: 0.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:3
Done fitting takes time: 0.1772
==Minimized===

This DFA has 1 states
States: ['3']
Alphabet: set(['1', '0'])
Starting state: 3
Accepting states: []
Transition function:
	3
1 	3
0 	3
Current state: 3
Currently accepting: False

Precision: 0.0000 Recall: 0.0000 Accuracy: 0.5731 F1: 0.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:4
Done fitting takes time: 0.2439
==Minimized===

This DFA has 3 states
States: ['2', '3', '4']
Alphabet: set(['1', '0'])
Starting state: 3
Accepting states: ['3', '4']
Transition function:
	2	3	4
1 	2	4	4
0 	2	3	2
Current state: 3
Currently accepting: True

Precision: 1.0000 Recall: 0.0974 Accuracy: 0.6147 F1: 0.1775


--------------------------------------------------------------------
Begin DFA extraction with n_state:5
Done fitting takes time: 0.2603
==Minimized===

This DFA has 1 states
States: ['1']
Alphabet: set(['1', '0'])
Starting state: 1
Accepting states: []
Transition function:
	1
1 	1
0 	1
Current state: 1
Currently accepting: False

Precision: 0.0000 Recall: 0.0000 Accuracy: 0.5731 F1: 0.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:6
Done fitting takes time: 0.2726
==Minimized===

This DFA has 5 states
States: ['4', '5', '6', '1', '3']
Alphabet: set(['1', '0'])
Starting state: 3
Accepting states: ['5', '4', '6']
Transition function:
	1	3	4	5	6
1 	5	1	4	5	4
0 	1	1	3	6	6
Current state: 3
Currently accepting: False

Precision: 0.5649 Recall: 0.9754 Accuracy: 0.6688 F1: 0.7155


--------------------------------------------------------------------
Begin DFA extraction with n_state:7
Done fitting takes time: 0.3216
==Minimized===

This DFA has 5 states
States: ['4', '5', '6', '1', '3']
Alphabet: set(['1', '0'])
Starting state: 3
Accepting states: ['5', '4', '6']
Transition function:
	1	3	4	5	6
1 	5	1	4	5	4
0 	1	1	3	6	6
Current state: 3
Currently accepting: False

Precision: 0.5649 Recall: 0.9754 Accuracy: 0.6688 F1: 0.7155


--------------------------------------------------------------------
Begin DFA extraction with n_state:8
Done fitting takes time: 0.0958
==Minimized===

This DFA has 4 states
States: ['3', '4', '5', '8']
Alphabet: set(['1', '0'])
Starting state: 8
Accepting states: ['5', '4', '8']
Transition function:
	3	4	5	8
1 	3	4	4	8
0 	3	3	5	5
Current state: 8
Currently accepting: True

Precision: 1.0000 Recall: 0.3603 Accuracy: 0.7270 F1: 0.5298


--------------------------------------------------------------------
Begin DFA extraction with n_state:9
Done fitting takes time: 0.0975
==Minimized===

This DFA has 4 states
States: ['3', '4', '5', '8']
Alphabet: set(['1', '0'])
Starting state: 8
Accepting states: ['5', '4', '8']
Transition function:
	3	4	5	8
1 	3	4	4	8
0 	3	3	5	5
Current state: 8
Currently accepting: True

Precision: 1.0000 Recall: 0.3603 Accuracy: 0.7270 F1: 0.5298


--------------------------------------------------------------------
Begin DFA extraction with n_state:10
Done fitting takes time: 0.2759
==Minimized===

This DFA has 6 states
States: ['4', '10', '5', '1', '3', '8']
Alphabet: set(['1', '0'])
Starting state: 8
Accepting states: ['10', '5', '4']
Transition function:
	1	10	3	4	5	8
1 	10	10	3	4	4	1
0 	1	5	3	3	5	1
Current state: 8
Currently accepting: False

Precision: 0.8747 Recall: 0.9754 Accuracy: 0.9299 F1: 0.9223


--------------------------------------------------------------------
Begin DFA extraction with n_state:11
Done fitting takes time: 0.2651
==Minimized===

This DFA has 6 states
States: ['4', '10', '5', '1', '11', '8']
Alphabet: set(['1', '0'])
Starting state: 8
Accepting states: ['10', '5', '4']
Transition function:
	1	10	11	4	5	8
1 	10	10	11	4	4	1
0 	1	5	11	11	5	1
Current state: 8
Currently accepting: False

Precision: 0.8747 Recall: 0.9754 Accuracy: 0.9299 F1: 0.9223


--------------------------------------------------------------------
Begin DFA extraction with n_state:12
Done fitting takes time: 0.0965
==Minimized===

This DFA has 6 states
States: ['11', '12', '5', '10', '1', '8']
Alphabet: set(['1', '0'])
Starting state: 8
Accepting states: ['10', '12', '1', '5', '8']
Transition function:
	1	10	11	12	5	8
1 	10	8	11	12	12	8
0 	1	5	11	11	5	1
Current state: 8
Currently accepting: True

Precision: 0.6377 Recall: 1.0000 Accuracy: 0.7575 F1: 0.7788


--------------------------------------------------------------------
Begin DFA extraction with n_state:13
Done fitting takes time: 0.1161
==Minimized===

This DFA has 6 states
States: ['12', '10', '5', '1', '11', '13']
Alphabet: set(['1', '0'])
Starting state: 13
Accepting states: ['10', '12', '5']
Transition function:
	1	10	11	12	13	5
1 	10	10	11	12	1	12
0 	1	5	11	11	1	5
Current state: 13
Currently accepting: False

Precision: 0.8747 Recall: 0.9754 Accuracy: 0.9299 F1: 0.9223


--------------------------------------------------------------------
Begin DFA extraction with n_state:14
Done fitting takes time: 0.0994
==Minimized===

This DFA has 7 states
States: ['12', '5', '10', '14', '1', '11', '13']
Alphabet: set(['1', '0'])
Starting state: 13
Accepting states: ['10', '12', '14', '5']
Transition function:
	1	10	11	12	13	14	5
1 	10	10	11	12	1	10	12
0 	14	5	11	11	1	14	5
Current state: 13
Currently accepting: False

Precision: 0.8772 Recall: 0.9977 Accuracy: 0.9394 F1: 0.9336


--------------------------------------------------------------------
Begin DFA extraction with n_state:15
Done fitting takes time: 0.3386
==Minimized===

This DFA has 7 states
States: ['12', '5', '10', '14', '1', '11', '13']
Alphabet: set(['1', '0'])
Starting state: 13
Accepting states: ['10', '12', '14', '5']
Transition function:
	1	10	11	12	13	14	5
1 	10	10	11	12	1	10	12
0 	14	5	11	11	1	14	5
Current state: 13
Currently accepting: False

Precision: 0.8772 Recall: 0.9977 Accuracy: 0.9394 F1: 0.9336


--------------------------------------------------------------------
Begin DFA extraction with n_state:16
Done fitting takes time: 0.1051
==Minimized===

This DFA has 7 states
States: ['12', '5', '10', '14', '1', '11', '13']
Alphabet: set(['1', '0'])
Starting state: 13
Accepting states: ['10', '12', '14', '5']
Transition function:
	1	10	11	12	13	14	5
1 	10	10	11	12	1	10	12
0 	14	5	11	11	1	14	5
Current state: 13
Currently accepting: False

Precision: 0.8772 Recall: 0.9977 Accuracy: 0.9394 F1: 0.9336


--------------------------------------------------------------------
Begin DFA extraction with n_state:17
Done fitting takes time: 0.3719
==Minimized===

This DFA has 7 states
States: ['12', '5', '10', '14', '1', '11', '13']
Alphabet: set(['1', '0'])
Starting state: 13
Accepting states: ['10', '12', '14', '5']
Transition function:
	1	10	11	12	13	14	5
1 	10	10	11	12	1	10	12
0 	14	5	11	11	1	14	5
Current state: 13
Currently accepting: False

Precision: 0.8772 Recall: 0.9977 Accuracy: 0.9394 F1: 0.9336


--------------------------------------------------------------------
Begin DFA extraction with n_state:18
Done fitting takes time: 0.3574
==Minimized===

This DFA has 7 states
States: ['12', '5', '10', '14', '1', '11', '13']
Alphabet: set(['1', '0'])
Starting state: 13
Accepting states: ['10', '12', '14', '5']
Transition function:
	1	10	11	12	13	14	5
1 	10	10	11	12	1	10	12
0 	14	5	11	11	1	14	5
Current state: 13
Currently accepting: False

Precision: 0.8772 Recall: 0.9977 Accuracy: 0.9394 F1: 0.9336


--------------------------------------------------------------------
Begin DFA extraction with n_state:19
Done fitting takes time: 0.3486
==Minimized===

This DFA has 7 states
States: ['12', '5', '10', '14', '1', '11', '13']
Alphabet: set(['1', '0'])
Starting state: 13
Accepting states: ['10', '12', '14', '5']
Transition function:
	1	10	11	12	13	14	5
1 	10	10	11	12	1	10	12
0 	14	5	11	11	1	14	5
Current state: 13
Currently accepting: False

Precision: 0.8772 Recall: 0.9977 Accuracy: 0.9394 F1: 0.9336
[ 0.          0.          0.17754011  0.          0.71545415  0.71545415
  0.52976704  0.52976704  0.92230855  0.92230855  0.77879342  0.92230855
  0.93355299  0.93355299  0.93355299  0.93355299  0.93355299  0.93355299]


[[ 0.          0.59831461  0.02549247  0.02549247  0.02549247  0.59831461
   0.59831461  1.          1.          1.          1.          1.          1.
   1.          1.          1.          1.          1.        ]
 [ 0.          0.          0.59380863  0.58145815  0.          0.58145815
   0.55852356  0.29248477  0.26805556  0.50317662  0.48174247  0.35454545
   0.34875445  0.19193858  0.2176628   0.28647687  0.0412844   0.11526147]
 [ 0.          0.          0.59831461  0.52976704  0.52976704  1.          1.
   1.          1.          1.          1.          1.          1.          1.
   1.          1.          1.          1.        ]
 [ 0.          0.02549247  0.          0.17754011  0.02549247  0.02549247
   0.02549247  1.          1.          1.          1.          1.          1.
   1.          1.          1.          1.          1.        ]
 [ 0.          0.02549247  0.59831461  0.52976704  0.52976704  0.52976704
   1.          1.          1.          1.          1.          1.          1.
   1.          1.          1.          1.          1.        ]
 [ 0.          0.          0.17754011  0.17754011  1.          1.          1.
   1.          1.          1.          1.          1.          1.          1.
   1.          1.          1.          1.        ]
 [ 0.          0.          0.17754011  0.          0.71545415  0.71545415
   0.52976704  0.52976704  0.92230855  0.92230855  0.77879342  0.92230855
   0.93355299  0.93355299  0.93355299  0.93355299  0.93355299  0.93355299]
 [ 0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.        ]
 [ 0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.        ]]
