G:g5, model:MI tanh, load all data and stored hidden activations


--------------------------------------------------------------------
Begin DFA extraction with n_state:2
Done fitting takes time: 0.7179
==Minimized===

This DFA has 1 states
States: ['1']
Alphabet: set(['1', '0'])
Starting state: 1
Accepting states: []
Transition function:
	1
1 	1
0 	1
Current state: 1
Currently accepting: False

Precision: 0.0000 Recall: 0.0000 Accuracy: 0.5097 F1: 0.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:3
Done fitting takes time: 0.5885
==Minimized===

This DFA has 1 states
States: ['1']
Alphabet: set(['1', '0'])
Starting state: 1
Accepting states: ['1']
Transition function:
	1
1 	1
0 	1
Current state: 1
Currently accepting: True

Precision: 0.4903 Recall: 1.0000 Accuracy: 0.4903 F1: 0.6580


--------------------------------------------------------------------
Begin DFA extraction with n_state:4
Done fitting takes time: 0.5973
==Minimized===

This DFA has 4 states
States: ['1', '3', '2', '4']
Alphabet: set(['1', '0'])
Starting state: 1
Accepting states: ['3', '2', '4']
Transition function:
	1	2	3	4
1 	1	1	4	1
0 	2	3	2	1
Current state: 1
Currently accepting: False

Precision: 0.4980 Recall: 0.5412 Accuracy: 0.5075 F1: 0.5187


--------------------------------------------------------------------
Begin DFA extraction with n_state:5
Done fitting takes time: 1.2530
==Minimized===

This DFA has 1 states
States: ['1']
Alphabet: set(['1', '0'])
Starting state: 1
Accepting states: ['1']
Transition function:
	1
1 	1
0 	1
Current state: 1
Currently accepting: True

Precision: 0.4903 Recall: 1.0000 Accuracy: 0.4903 F1: 0.6580


--------------------------------------------------------------------
Begin DFA extraction with n_state:6
Done fitting takes time: 1.5173
==Minimized===

This DFA has 1 states
States: ['1']
Alphabet: set(['1', '0'])
Starting state: 1
Accepting states: ['1']
Transition function:
	1
1 	1
0 	1
Current state: 1
Currently accepting: True

Precision: 0.4903 Recall: 1.0000 Accuracy: 0.4903 F1: 0.6580


--------------------------------------------------------------------
Begin DFA extraction with n_state:7
Done fitting takes time: 1.6408
==Minimized===

This DFA has 1 states
States: ['1']
Alphabet: set(['1', '0'])
Starting state: 1
Accepting states: ['1']
Transition function:
	1
1 	1
0 	1
Current state: 1
Currently accepting: True

Precision: 0.4903 Recall: 1.0000 Accuracy: 0.4903 F1: 0.6580


--------------------------------------------------------------------
Begin DFA extraction with n_state:8
Done fitting takes time: 0.6351
==Minimized===

This DFA has 1 states
States: ['1']
Alphabet: set(['1', '0'])
Starting state: 1
Accepting states: ['1']
Transition function:
	1
1 	1
0 	1
Current state: 1
Currently accepting: True

Precision: 0.4903 Recall: 1.0000 Accuracy: 0.4903 F1: 0.6580


--------------------------------------------------------------------
Begin DFA extraction with n_state:9
Done fitting takes time: 1.5342
==Minimized===

This DFA has 4 states
States: ['9', '7', '1', '4']
Alphabet: set(['1', '0'])
Starting state: 7
Accepting states: ['1', '4', '7']
Transition function:
	1	4	7	9
1 	1	7	4	1
0 	1	1	9	1
Current state: 7
Currently accepting: True

Precision: 0.4905 Recall: 1.0000 Accuracy: 0.4907 F1: 0.6582


--------------------------------------------------------------------
Begin DFA extraction with n_state:10
Done fitting takes time: 0.6377
==Minimized===

This DFA has 8 states
States: ['8', '9', '10', '7', '2', '5', '1', '4']
Alphabet: set(['1', '0'])
Starting state: 7
Accepting states: ['10', '1', '2', '5', '4', '7', '9']
Transition function:
	1	10	2	4	5	7	8	9
1 	4	1	8	7	8	4	8	5
0 	2	1	8	9	9	10	2	2
Current state: 7
Currently accepting: True

Precision: 0.4988 Recall: 0.3455 Accuracy: 0.5088 F1: 0.4082


--------------------------------------------------------------------
Begin DFA extraction with n_state:11
Done fitting takes time: 1.5557
==Minimized===

This DFA has 3 states
States: ['10', '11', '7']
Alphabet: set(['1', '0'])
Starting state: 7
Accepting states: ['11', '7']
Transition function:
	10	11	7
1 	11	11	11
0 	11	11	10
Current state: 7
Currently accepting: True

Precision: 0.4904 Recall: 1.0000 Accuracy: 0.4905 F1: 0.6581


--------------------------------------------------------------------
Begin DFA extraction with n_state:12
Done fitting takes time: 1.5931
==Minimized===

This DFA has 1 states
States: ['11']
Alphabet: set(['1', '0'])
Starting state: 11
Accepting states: ['11']
Transition function:
	11
1 	11
0 	11
Current state: 11
Currently accepting: True

Precision: 0.4903 Recall: 1.0000 Accuracy: 0.4903 F1: 0.6580


--------------------------------------------------------------------
Begin DFA extraction with n_state:13
Done fitting takes time: 2.0502
==Minimized===

This DFA has 3 states
States: ['10', '11', '12']
Alphabet: set(['1', '0'])
Starting state: 12
Accepting states: ['11', '12']
Transition function:
	10	11	12
1 	11	11	11
0 	12	11	10
Current state: 12
Currently accepting: True

Precision: 0.4905 Recall: 1.0000 Accuracy: 0.4906 F1: 0.6581


--------------------------------------------------------------------
Begin DFA extraction with n_state:14
Done fitting takes time: 1.7549
==Minimized===

This DFA has 5 states
States: ['12', '11', '1', '10', '4']
Alphabet: set(['1', '0'])
Starting state: 12
Accepting states: ['11', '12', '1']
Transition function:
	1	10	11	12	4
1 	11	1	11	4	11
0 	12	12	11	10	12
Current state: 12
Currently accepting: True

Precision: 0.4916 Recall: 0.9748 Accuracy: 0.4933 F1: 0.6536


--------------------------------------------------------------------
Begin DFA extraction with n_state:15
Done fitting takes time: 1.9221
==Minimized===

This DFA has 3 states
States: ['10', '11', '12']
Alphabet: set(['1', '0'])
Starting state: 12
Accepting states: ['11', '12']
Transition function:
	10	11	12
1 	11	11	10
0 	12	11	10
Current state: 12
Currently accepting: True

Precision: 0.4914 Recall: 1.0000 Accuracy: 0.4926 F1: 0.6590


--------------------------------------------------------------------
Begin DFA extraction with n_state:16
Done fitting takes time: 0.6555
==Minimized===

This DFA has 4 states
States: ['4', '12', '10', '15']
Alphabet: set(['1', '0'])
Starting state: 12
Accepting states: ['10', '12', '15']
Transition function:
	10	12	15	4
1 	15	4	15	10
0 	12	10	15	12
Current state: 12
Currently accepting: True

Precision: 0.4905 Recall: 0.9858 Accuracy: 0.4909 F1: 0.6551


--------------------------------------------------------------------
Begin DFA extraction with n_state:17
Done fitting takes time: 2.3650
==Minimized===

This DFA has 3 states
States: ['10', '11', '12']
Alphabet: set(['1', '0'])
Starting state: 12
Accepting states: ['11', '12']
Transition function:
	10	11	12
1 	11	11	10
0 	12	11	10
Current state: 12
Currently accepting: True

Precision: 0.4914 Recall: 1.0000 Accuracy: 0.4926 F1: 0.6590


--------------------------------------------------------------------
Begin DFA extraction with n_state:18
Done fitting takes time: 1.9074
==Minimized===

This DFA has 5 states
States: ['11', '12', '10', '18', '4']
Alphabet: set(['1', '0'])
Starting state: 12
Accepting states: ['11', '12']
Transition function:
	10	11	12	18	4
1 	18	11	4	11	11
0 	12	11	10	11	12
Current state: 12
Currently accepting: True

Precision: 0.4910 Recall: 0.9935 Accuracy: 0.4919 F1: 0.6572


--------------------------------------------------------------------
Begin DFA extraction with n_state:19
Done fitting takes time: 1.9704
==Minimized===

This DFA has 5 states
States: ['13', '12', '10', '18', '4']
Alphabet: set(['1', '0'])
Starting state: 12
Accepting states: ['13', '12']
Transition function:
	10	12	13	18	4
1 	18	4	13	13	13
0 	12	10	13	13	18
Current state: 12
Currently accepting: True

Precision: 0.4913 Recall: 1.0000 Accuracy: 0.4922 F1: 0.6589
[ 0.          0.65802986  0.5186975   0.65802986  0.65802986  0.65802986
  0.65802986  0.65818584  0.40822695  0.65808185  0.65802986  0.65813384
  0.65357373  0.65901899  0.65507339  0.65901899  0.65724269  0.65886261]


[[ 0.          0.          0.67020677  0.67020677  0.57339638  0.57339638
   0.67020677  0.67020677  0.67020677  0.67020677  0.67020677  0.67020677
   0.6037518   0.08847243  0.13633547  0.59810372  0.58304064  0.67020677]
 [ 0.          0.          0.          0.          0.          0.
   0.51432648  0.2456514   0.00286944  0.2456514   0.2456514   0.
   0.48905734  0.          0.57294755  0.          0.3783225   0.        ]
 [ 0.          0.50826596  1.          1.          1.          1.          1.
   1.          1.          1.          1.          1.          1.          1.
   1.          1.          1.          1.        ]
 [ 0.9860322   0.79005288  1.          1.          1.          1.          1.
   1.          1.          1.          1.          1.          1.          1.
   1.          1.          1.          1.        ]
 [ 0.          0.          0.67020677  0.66565447  0.65802986  0.65802986
   0.65802986  0.65802986  0.65802986  0.65802986  0.65802986  0.66289989
   0.66353354  0.64644613  0.66126856  0.65291302  0.65486145  0.65486145]
 [ 0.          0.78620492  0.78620492  1.          1.          0.          0.
   0.          0.          1.          1.          1.          1.          1.
   1.          1.          1.          1.        ]
 [ 0.          0.65802986  0.5186975   0.65802986  0.65802986  0.65802986
   0.65802986  0.65818584  0.40822695  0.65808185  0.65802986  0.65813384
   0.65357373  0.65901899  0.65507339  0.65901899  0.65724269  0.65886261]
 [ 0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.        ]
 [ 0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.        ]]
