G:g5, model:SRN tanh, load all data and stored hidden activations


--------------------------------------------------------------------
Begin DFA extraction with n_state:2
Done fitting takes time: 2.1419
==Minimized===

This DFA has 1 states
States: ['1']
Alphabet: set(['1', '0'])
Starting state: 1
Accepting states: []
Transition function:
	1
1 	1
0 	1
Current state: 1
Currently accepting: False

Precision: 0.0000 Recall: 0.0000 Accuracy: 0.5097 F1: 0.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:3
Done fitting takes time: 4.4865
==Minimized===

This DFA has 1 states
States: ['1']
Alphabet: set(['1', '0'])
Starting state: 1
Accepting states: []
Transition function:
	1
1 	1
0 	1
Current state: 1
Currently accepting: False

Precision: 0.0000 Recall: 0.0000 Accuracy: 0.5097 F1: 0.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:4
Done fitting takes time: 3.8947
==Minimized===

This DFA has 1 states
States: ['1']
Alphabet: set(['1', '0'])
Starting state: 1
Accepting states: []
Transition function:
	1
1 	1
0 	1
Current state: 1
Currently accepting: False

Precision: 0.0000 Recall: 0.0000 Accuracy: 0.5097 F1: 0.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:5
Done fitting takes time: 3.6614
==Minimized===

This DFA has 1 states
States: ['1']
Alphabet: set(['1', '0'])
Starting state: 1
Accepting states: []
Transition function:
	1
1 	1
0 	1
Current state: 1
Currently accepting: False

Precision: 0.0000 Recall: 0.0000 Accuracy: 0.5097 F1: 0.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:6
Done fitting takes time: 4.4353
==Minimized===

This DFA has 3 states
States: ['1', '2', '4']
Alphabet: set(['1', '0'])
Starting state: 1
Accepting states: ['1']
Transition function:
	1	2	4
1 	2	1	2
0 	2	4	2
Current state: 1
Currently accepting: True

Precision: 0.4971 Recall: 0.4944 Accuracy: 0.5068 F1: 0.4957


--------------------------------------------------------------------
Begin DFA extraction with n_state:7
Done fitting takes time: 5.3785
==Minimized===

This DFA has 2 states
States: ['1', '3']
Alphabet: set(['1', '0'])
Starting state: 1
Accepting states: ['1']
Transition function:
	1	3
1 	3	3
0 	3	3
Current state: 1
Currently accepting: True

Precision: 0.0000 Recall: 0.0000 Accuracy: 0.5097 F1: 0.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:8
Done fitting takes time: 3.6666
==Minimized===

This DFA has 5 states
States: ['8', '1', '4', '2', '7']
Alphabet: set(['1', '0'])
Starting state: 1
Accepting states: ['1', '4']
Transition function:
	1	2	4	7	8
1 	8	7	2	8	1
0 	8	7	2	8	4
Current state: 1
Currently accepting: True

Precision: 0.5013 Recall: 0.6696 Accuracy: 0.5114 F1: 0.5734


--------------------------------------------------------------------
Begin DFA extraction with n_state:9
Done fitting takes time: 3.1190
==Minimized===

This DFA has 1 states
States: ['1']
Alphabet: set(['1', '0'])
Starting state: 1
Accepting states: []
Transition function:
	1
1 	1
0 	1
Current state: 1
Currently accepting: False

Precision: 0.0000 Recall: 0.0000 Accuracy: 0.5097 F1: 0.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:10
Done fitting takes time: 3.5845
==Minimized===

This DFA has 1 states
States: ['10']
Alphabet: set(['1', '0'])
Starting state: 10
Accepting states: []
Transition function:
	10
1 	10
0 	10
Current state: 10
Currently accepting: False

Precision: 0.0000 Recall: 0.0000 Accuracy: 0.5097 F1: 0.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:11
Done fitting takes time: 2.2470
==Minimized===

This DFA has 10 states
States: ['8', '1', '10', '7', '2', '4', '3', '5', '11', '6']
Alphabet: set(['1', '0'])
Starting state: 11
Accepting states: ['1', '10']
Transition function:
	1	10	11	2	3	4	5	6	7	8
1 	8	2	6	7	4	2	3	5	8	1
0 	8	2	6	7	4	2	3	5	8	10
Current state: 11
Currently accepting: False

Precision: 0.5007 Recall: 0.6579 Accuracy: 0.5106 F1: 0.5686


--------------------------------------------------------------------
Begin DFA extraction with n_state:12
Done fitting takes time: 3.0146
==Minimized===

This DFA has 10 states
States: ['12', '1', '10', '7', '2', '4', '3', '5', '11', '6']
Alphabet: set(['1', '0'])
Starting state: 11
Accepting states: ['1', '10']
Transition function:
	1	10	11	12	2	3	4	5	6	7
1 	12	2	6	1	7	4	2	3	5	12
0 	12	12	6	10	7	4	2	3	5	12
Current state: 11
Currently accepting: False

Precision: 0.5037 Recall: 0.7933 Accuracy: 0.5154 F1: 0.6162


--------------------------------------------------------------------
Begin DFA extraction with n_state:13
Done fitting takes time: 2.6127
==Minimized===

This DFA has 10 states
States: ['12', '1', '10', '7', '2', '4', '3', '5', '11', '13']
Alphabet: set(['1', '0'])
Starting state: 11
Accepting states: ['1', '10']
Transition function:
	1	10	11	12	13	2	3	4	5	7
1 	12	2	13	1	5	7	4	2	3	12
0 	12	2	13	10	5	7	4	2	3	12
Current state: 11
Currently accepting: False

Precision: 0.5007 Recall: 0.6579 Accuracy: 0.5106 F1: 0.5686


--------------------------------------------------------------------
Begin DFA extraction with n_state:14
Done fitting takes time: 3.0765
==Minimized===

This DFA has 10 states
States: ['12', '1', '9', '7', '2', '14', '3', '5', '11', '13']
Alphabet: set(['1', '0'])
Starting state: 11
Accepting states: ['1', '9']
Transition function:
	1	11	12	13	14	2	3	5	7	9
1 	12	13	1	5	2	7	14	3	12	2
0 	12	13	9	5	2	7	14	3	12	2
Current state: 11
Currently accepting: False

Precision: 0.5007 Recall: 0.6579 Accuracy: 0.5106 F1: 0.5686


--------------------------------------------------------------------
Begin DFA extraction with n_state:15
Done fitting takes time: 3.6962
==Minimized===

This DFA has 10 states
States: ['12', '1', '10', '15', '2', '14', '3', '5', '11', '13']
Alphabet: set(['1', '0'])
Starting state: 11
Accepting states: ['1', '10']
Transition function:
	1	10	11	12	13	14	15	2	3	5
1 	12	2	13	1	5	2	12	15	14	3
0 	12	2	13	10	5	2	12	15	14	3
Current state: 11
Currently accepting: False

Precision: 0.5007 Recall: 0.6579 Accuracy: 0.5106 F1: 0.5686


--------------------------------------------------------------------
Begin DFA extraction with n_state:16
Done fitting takes time: 3.3459
==Minimized===

This DFA has 14 states
States: ['9', '13', '12', '14', '3', '5', '11', '6', '1', '10', '16', '7', '2', '8']
Alphabet: set(['1', '0'])
Starting state: 11
Accepting states: ['1', '9', '10']
Transition function:
	1	10	11	12	13	14	16	2	3	5	6	7	8	9
1 	13	12	6	1	1	8	13	16	14	3	5	13	7	2
0 	12	12	6	9	10	8	12	16	14	3	5	13	7	2
Current state: 11
Currently accepting: False

Precision: 0.5040 Recall: 0.7882 Accuracy: 0.5158 F1: 0.6149


--------------------------------------------------------------------
Begin DFA extraction with n_state:17
Done fitting takes time: 4.4068
==Minimized===

This DFA has 10 states
States: ['12', '1', '10', '15', '2', '14', '17', '5', '11', '13']
Alphabet: set(['1', '0'])
Starting state: 11
Accepting states: ['1', '10']
Transition function:
	1	10	11	12	13	14	15	17	2	5
1 	12	17	13	1	5	2	12	14	15	17
0 	12	17	13	10	5	2	12	14	15	17
Current state: 11
Currently accepting: False

Precision: 0.4987 Recall: 0.4929 Accuracy: 0.5084 F1: 0.4958


--------------------------------------------------------------------
Begin DFA extraction with n_state:18
Done fitting takes time: 5.5653
==Minimized===

This DFA has 13 states
States: ['1', '10', '12', '2', '14', '3', '5', '11', '13', '4', '7', '17', '8']
Alphabet: set(['1', '0'])
Starting state: 11
Accepting states: ['1', '10']
Transition function:
	1	10	11	12	13	14	17	2	3	4	5	7	8
1 	12	2	13	1	5	8	4	1	14	2	3	2	7
0 	12	17	13	10	5	8	4	1	14	2	3	12	7
Current state: 11
Currently accepting: False

Precision: 0.5019 Recall: 0.8483 Accuracy: 0.5128 F1: 0.6307


--------------------------------------------------------------------
Begin DFA extraction with n_state:19
Done fitting takes time: 7.9300
==Minimized===

This DFA has 13 states
States: ['9', '12', '18', '16', '2', '11', '1', '14', '5', '13', '3', '15', '7']
Alphabet: set(['1', '0'])
Starting state: 11
Accepting states: ['15', '1', '7', '9']
Transition function:
	1	11	12	13	14	15	16	18	2	3	5	7	9
1 	12	13	1	5	2	18	18	15	16	14	2	18	2
0 	12	13	9	5	2	18	18	7	16	14	3	12	2
Current state: 11
Currently accepting: False

Precision: 0.5023 Recall: 0.8641 Accuracy: 0.5135 F1: 0.6353
[ 0.          0.          0.          0.          0.4957265   0.
  0.57339638  0.          0.          0.56864169  0.61618799  0.56864169
  0.56864169  0.56864169  0.61485158  0.49577397  0.63066762  0.6353045 ]


[[ 0.          0.          0.          0.67020677  0.          0.67020677
   0.          0.36706168  0.518008    0.58418494  0.43979335  0.33978901
   0.47366388  0.17750544  0.38701995  0.24872727  0.58959881  0.49670812]
 [ 0.          0.          0.          0.          0.4957265   0.
   0.57339638  0.          0.          0.56864169  0.61618799  0.56864169
   0.56864169  0.56864169  0.61485158  0.49577397  0.63066762  0.6353045 ]
 [ 0.          0.50826596  1.          1.          1.          1.          1.
   1.          1.          1.          1.          1.          1.          1.
   1.          1.          1.          1.        ]
 [ 0.          0.79005288  1.          1.          1.          1.          1.
   1.          1.          1.          1.          1.          1.          1.
   1.          1.          1.          1.        ]
 [ 0.          0.5512308   0.          0.49454033  0.          0.54914328
   0.04497476  0.62556631  0.          0.          0.65802986  0.          0.
   0.          0.          0.          0.          0.        ]
 [ 0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.        ]
 [ 0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.        ]]
