G:g6, model:SRN sigmoid, load all data and stored hidden activations


--------------------------------------------------------------------
Begin DFA extraction with n_state:2
Done fitting takes time: 1.5592
==Minimized===

This DFA has 1 states
States: ['1']
Alphabet: set(['1', '0'])
Starting state: 1
Accepting states: []
Transition function:
	1
1 	1
0 	1
Current state: 1
Currently accepting: False

Precision: 0.0000 Recall: 0.0000 Accuracy: 0.5177 F1: 0.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:3
Done fitting takes time: 1.9620
==Minimized===

This DFA has 1 states
States: ['1']
Alphabet: set(['1', '0'])
Starting state: 1
Accepting states: []
Transition function:
	1
1 	1
0 	1
Current state: 1
Currently accepting: False

Precision: 0.0000 Recall: 0.0000 Accuracy: 0.5177 F1: 0.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:4
Done fitting takes time: 0.9182
==Minimized===

This DFA has 4 states
States: ['2', '4', '1', '3']
Alphabet: set(['1', '0'])
Starting state: 4
Accepting states: ['1', '3']
Transition function:
	1	2	3	4
1 	2	2	4	1
0 	2	2	4	3
Current state: 4
Currently accepting: False

Precision: 0.4330 Recall: 0.0073 Accuracy: 0.5166 F1: 0.0144


--------------------------------------------------------------------
Begin DFA extraction with n_state:5
Done fitting takes time: 1.5019
==Minimized===

This DFA has 3 states
States: ['1', '3', '4']
Alphabet: set(['1', '0'])
Starting state: 4
Accepting states: ['3', '4']
Transition function:
	1	3	4
1 	1	4	1
0 	1	3	3
Current state: 4
Currently accepting: True

Precision: 0.4591 Recall: 0.0333 Accuracy: 0.5149 F1: 0.0621


--------------------------------------------------------------------
Begin DFA extraction with n_state:6
Done fitting takes time: 1.9557
==Minimized===

This DFA has 3 states
States: ['2', '3', '4']
Alphabet: set(['1', '0'])
Starting state: 4
Accepting states: ['3', '4']
Transition function:
	2	3	4
1 	2	4	2
0 	2	3	3
Current state: 4
Currently accepting: True

Precision: 0.4591 Recall: 0.0333 Accuracy: 0.5149 F1: 0.0621


--------------------------------------------------------------------
Begin DFA extraction with n_state:7
Done fitting takes time: 1.1529
==Minimized===

This DFA has 3 states
States: ['2', '4', '7']
Alphabet: set(['1', '0'])
Starting state: 4
Accepting states: ['4', '7']
Transition function:
	2	4	7
1 	2	2	4
0 	2	7	7
Current state: 4
Currently accepting: True

Precision: 0.4591 Recall: 0.0333 Accuracy: 0.5149 F1: 0.0621


--------------------------------------------------------------------
Begin DFA extraction with n_state:8
Done fitting takes time: 1.1054
==Minimized===

This DFA has 2 states
States: ['4', '2']
Alphabet: set(['1', '0'])
Starting state: 4
Accepting states: ['4']
Transition function:
	2	4
1 	2	2
0 	2	2
Current state: 4
Currently accepting: True

Precision: 0.0000 Recall: 0.0000 Accuracy: 0.5177 F1: 0.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:9
Done fitting takes time: 2.3504
==Minimized===

This DFA has 4 states
States: ['5', '9', '2', '4']
Alphabet: set(['1', '0'])
Starting state: 4
Accepting states: ['9', '2', '4']
Transition function:
	2	4	5	9
1 	5	5	2	4
0 	9	5	9	9
Current state: 4
Currently accepting: True

Precision: 0.4792 Recall: 0.7264 Accuracy: 0.4873 F1: 0.5774


--------------------------------------------------------------------
Begin DFA extraction with n_state:10
Done fitting takes time: 2.9527
==Minimized===

This DFA has 8 states
States: ['2', '5', '6', '10', '4', '8', '1', '9']
Alphabet: set(['1', '0'])
Starting state: 10
Accepting states: ['10', '1', '2', '4', '9', '8']
Transition function:
	1	10	2	4	5	6	8	9
1 	1	5	5	6	2	1	10	8
0 	4	5	9	6	9	8	4	9
Current state: 10
Currently accepting: True

Precision: 0.4821 Recall: 0.7429 Accuracy: 0.4912 F1: 0.5848


--------------------------------------------------------------------
Begin DFA extraction with n_state:11
Done fitting takes time: 2.1531
==Minimized===

This DFA has 3 states
States: ['5', '10', '9']
Alphabet: set(['1', '0'])
Starting state: 10
Accepting states: ['10', '9']
Transition function:
	10	5	9
1 	5	10	10
0 	5	9	9
Current state: 10
Currently accepting: True

Precision: 0.4779 Recall: 0.6603 Accuracy: 0.4882 F1: 0.5545


--------------------------------------------------------------------
Begin DFA extraction with n_state:12
Done fitting takes time: 3.1526
==Minimized===

This DFA has 7 states
States: ['9', '5', '3', '2', '7', '11', '4']
Alphabet: set(['1', '0'])
Starting state: 2
Accepting states: ['9', '3', '2']
Transition function:
	11	2	3	4	5	7	9
1 	11	5	7	11	2	4	2
0 	11	5	7	7	9	3	3
Current state: 2
Currently accepting: True

Precision: 0.4809 Recall: 0.2083 Accuracy: 0.5097 F1: 0.2906


--------------------------------------------------------------------
Begin DFA extraction with n_state:13
Done fitting takes time: 2.8063
==Minimized===

This DFA has 5 states
States: ['9', '12', '5', '10', '2']
Alphabet: set(['1', '0'])
Starting state: 10
Accepting states: ['10', '2', '9']
Transition function:
	10	12	2	5	9
1 	5	12	12	2	5
0 	5	12	5	9	9
Current state: 10
Currently accepting: True

Precision: 0.4919 Recall: 0.1422 Accuracy: 0.5155 F1: 0.2206


--------------------------------------------------------------------
Begin DFA extraction with n_state:14
Done fitting takes time: 2.4040
==Minimized===

This DFA has 6 states
States: ['10', '9', '14', '5', '12', '2']
Alphabet: set(['1', '0'])
Starting state: 10
Accepting states: ['10', '12', '2', '9']
Transition function:
	10	12	14	2	5	9
1 	5	12	14	12	2	5
0 	5	14	14	5	9	9
Current state: 10
Currently accepting: True

Precision: 0.4819 Recall: 0.1921 Accuracy: 0.5108 F1: 0.2746


--------------------------------------------------------------------
Begin DFA extraction with n_state:15
Done fitting takes time: 3.5398
==Minimized===

This DFA has 8 states
States: ['13', '3', '11', '5', '10', '2', '4', '9']
Alphabet: set(['1', '0'])
Starting state: 10
Accepting states: ['10', '13', '3', '2', '4', '9']
Transition function:
	10	11	13	2	3	4	5	9
1 	5	11	3	11	11	11	2	5
0 	5	11	13	5	4	13	9	13
Current state: 10
Currently accepting: True

Precision: 0.5175 Recall: 0.0671 Accuracy: 0.5199 F1: 0.1188


--------------------------------------------------------------------
Begin DFA extraction with n_state:16
Done fitting takes time: 2.9405
==Minimized===

This DFA has 2 states
States: ['10', '16']
Alphabet: set(['1', '0'])
Starting state: 10
Accepting states: ['10']
Transition function:
	10	16
1 	16	16
0 	16	16
Current state: 10
Currently accepting: True

Precision: 0.0000 Recall: 0.0000 Accuracy: 0.5177 F1: 0.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:17
Done fitting takes time: 7.1578
==Minimized===

This DFA has 2 states
States: ['10', '16']
Alphabet: set(['1', '0'])
Starting state: 10
Accepting states: ['10']
Transition function:
	10	16
1 	16	16
0 	16	16
Current state: 10
Currently accepting: True

Precision: 0.0000 Recall: 0.0000 Accuracy: 0.5177 F1: 0.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:18
Done fitting takes time: 2.8471
==Minimized===

This DFA has 14 states
States: ['13', '6', '7', '14', '12', '8', '17', '9', '16', '1', '11', '5', '10', '18']
Alphabet: set(['1', '0'])
Starting state: 10
Accepting states: ['10', '13', '18', '6', '8']
Transition function:
	1	10	11	12	13	14	16	17	18	5	6	7	8	9
1 	17	5	1	12	6	7	9	11	11	16	18	6	14	12
0 	17	5	1	12	13	7	9	8	11	16	13	13	14	13
Current state: 10
Currently accepting: True

Precision: 0.4758 Recall: 0.2309 Accuracy: 0.5064 F1: 0.3109


--------------------------------------------------------------------
Begin DFA extraction with n_state:19
Done fitting takes time: 3.4596
==Minimized===

This DFA has 6 states
States: ['13', '3', '15', '5', '10', '16']
Alphabet: set(['1', '0'])
Starting state: 10
Accepting states: ['10', '13', '16', '3']
Transition function:
	10	13	15	16	3	5
1 	5	3	16	15	15	10
0 	5	13	13	15	13	16
Current state: 10
Currently accepting: True

Precision: 0.4811 Recall: 0.7661 Accuracy: 0.4887 F1: 0.5910
[ 0.          0.          0.01439589  0.06207345  0.06207345  0.06207345
  0.          0.57744528  0.58477366  0.55447428  0.29064818  0.22062999
  0.27464174  0.1187905   0.          0.          0.31092338  0.59101909]


[[ 0.          0.          0.01439589  0.06207345  0.06207345  0.06207345
   0.          0.57744528  0.58477366  0.55447428  0.29064818  0.22062999
   0.27464174  0.1187905   0.          0.          0.31092338  0.59101909]
 [ 0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.        ]
 [ 0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.        ]
 [ 0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.        ]
 [ 0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.        ]
 [ 0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.        ]
 [ 0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.        ]
 [ 0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.        ]
 [ 0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.        ]]
