G:g4, model:MI tanh, load all data and stored hidden activations


--------------------------------------------------------------------
Begin DFA extraction with n_state:2
Done fitting takes time: 0.5601
==Minimized===

This DFA has 1 states
States: ['1']
Alphabet: set(['1', '0'])
Starting state: 1
Accepting states: ['1']
Transition function:
	1
1 	1
0 	1
Current state: 1
Currently accepting: True

Precision: 0.4906 Recall: 1.0000 Accuracy: 0.4906 F1: 0.6583


--------------------------------------------------------------------
Begin DFA extraction with n_state:3
Done fitting takes time: 1.3280
==Minimized===

This DFA has 2 states
States: ['1', '3']
Alphabet: set(['1', '0'])
Starting state: 3
Accepting states: ['1']
Transition function:
	1	3
1 	3	1
0 	3	3
Current state: 3
Currently accepting: False

Precision: 0.5183 Recall: 0.3590 Accuracy: 0.5218 F1: 0.4242


--------------------------------------------------------------------
Begin DFA extraction with n_state:4
Done fitting takes time: 1.5604
==Minimized===

This DFA has 4 states
States: ['1', '4', '3', '2']
Alphabet: set(['1', '0'])
Starting state: 3
Accepting states: ['1', '4']
Transition function:
	1	2	3	4
1 	3	2	3	1
0 	3	2	4	2
Current state: 3
Currently accepting: False

Precision: 1.0000 Recall: 0.1528 Accuracy: 0.5843 F1: 0.2651


--------------------------------------------------------------------
Begin DFA extraction with n_state:5
Done fitting takes time: 1.0888
==Minimized===

This DFA has 4 states
States: ['5', '2', '1', '4']
Alphabet: set(['1', '0'])
Starting state: 1
Accepting states: ['1', '2', '4']
Transition function:
	1	2	4	5
1 	1	1	1	5
0 	4	5	2	5
Current state: 1
Currently accepting: True

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:6
Done fitting takes time: 0.5796
==Minimized===

This DFA has 4 states
States: ['5', '2', '1', '6']
Alphabet: set(['1', '0'])
Starting state: 1
Accepting states: ['1', '2', '6']
Transition function:
	1	2	5	6
1 	1	1	5	1
0 	6	5	5	2
Current state: 1
Currently accepting: True

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:7
Done fitting takes time: 0.8371
==Minimized===

This DFA has 4 states
States: ['5', '2', '1', '6']
Alphabet: set(['1', '0'])
Starting state: 1
Accepting states: ['1', '2', '6']
Transition function:
	1	2	5	6
1 	1	1	5	1
0 	6	5	5	2
Current state: 1
Currently accepting: True

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:8
Done fitting takes time: 0.5577
==Minimized===

This DFA has 4 states
States: ['5', '2', '1', '6']
Alphabet: set(['1', '0'])
Starting state: 1
Accepting states: ['1', '2', '6']
Transition function:
	1	2	5	6
1 	1	1	5	1
0 	6	5	5	2
Current state: 1
Currently accepting: True

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:9
Done fitting takes time: 1.0744
==Minimized===

This DFA has 4 states
States: ['5', '2', '1', '6']
Alphabet: set(['1', '0'])
Starting state: 1
Accepting states: ['1', '2', '6']
Transition function:
	1	2	5	6
1 	1	1	5	1
0 	6	5	5	2
Current state: 1
Currently accepting: True

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:10
Done fitting takes time: 0.5925
==Minimized===

This DFA has 4 states
States: ['5', '2', '10', '1']
Alphabet: set(['1', '0'])
Starting state: 1
Accepting states: ['10', '1', '2']
Transition function:
	1	10	2	5
1 	1	1	1	5
0 	10	2	5	5
Current state: 1
Currently accepting: True

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:11
Done fitting takes time: 1.2271
==Minimized===

This DFA has 6 states
States: ['2', '10', '1', '4', '11', '5']
Alphabet: set(['1', '0'])
Starting state: 11
Accepting states: ['10', '1', '2']
Transition function:
	1	10	11	2	4	5
1 	1	1	4	1	1	5
0 	10	2	4	5	10	5
Current state: 11
Currently accepting: False

Precision: 0.9499 Recall: 0.9996 Accuracy: 0.9739 F1: 0.9741


--------------------------------------------------------------------
Begin DFA extraction with n_state:12
Done fitting takes time: 0.9688
==Minimized===

This DFA has 6 states
States: ['2', '10', '1', '4', '11', '5']
Alphabet: set(['1', '0'])
Starting state: 11
Accepting states: ['10', '1', '2']
Transition function:
	1	10	11	2	4	5
1 	1	1	4	1	1	5
0 	10	2	4	5	10	5
Current state: 11
Currently accepting: False

Precision: 0.9499 Recall: 0.9996 Accuracy: 0.9739 F1: 0.9741


--------------------------------------------------------------------
Begin DFA extraction with n_state:13
Done fitting takes time: 0.5846
==Minimized===

This DFA has 6 states
States: ['2', '10', '13', '4', '11', '5']
Alphabet: set(['1', '0'])
Starting state: 11
Accepting states: ['10', '13', '2']
Transition function:
	10	11	13	2	4	5
1 	13	4	13	13	13	5
0 	2	4	10	5	10	5
Current state: 11
Currently accepting: False

Precision: 0.9499 Recall: 0.9996 Accuracy: 0.9739 F1: 0.9741


--------------------------------------------------------------------
Begin DFA extraction with n_state:14
Done fitting takes time: 1.0095
==Minimized===

This DFA has 6 states
States: ['2', '11', '10', '4', '14', '5']
Alphabet: set(['1', '0'])
Starting state: 14
Accepting states: ['11', '10', '2']
Transition function:
	10	11	14	2	4	5
1 	11	11	4	11	11	5
0 	2	10	4	5	10	5
Current state: 14
Currently accepting: False

Precision: 0.9499 Recall: 0.9996 Accuracy: 0.9739 F1: 0.9741


--------------------------------------------------------------------
Begin DFA extraction with n_state:15
Done fitting takes time: 1.3923
==Minimized===

This DFA has 6 states
States: ['2', '11', '10', '4', '14', '5']
Alphabet: set(['1', '0'])
Starting state: 14
Accepting states: ['11', '10', '2']
Transition function:
	10	11	14	2	4	5
1 	11	11	4	11	11	5
0 	2	10	4	5	10	5
Current state: 14
Currently accepting: False

Precision: 0.9499 Recall: 0.9996 Accuracy: 0.9739 F1: 0.9741


--------------------------------------------------------------------
Begin DFA extraction with n_state:16
Done fitting takes time: 1.7127
==Minimized===

This DFA has 6 states
States: ['2', '11', '10', '4', '14', '5']
Alphabet: set(['1', '0'])
Starting state: 14
Accepting states: ['11', '10', '2']
Transition function:
	10	11	14	2	4	5
1 	11	11	4	11	11	5
0 	2	10	4	5	10	5
Current state: 14
Currently accepting: False

Precision: 0.9499 Recall: 0.9996 Accuracy: 0.9739 F1: 0.9741


--------------------------------------------------------------------
Begin DFA extraction with n_state:17
Done fitting takes time: 0.6186
==Minimized===

This DFA has 6 states
States: ['2', '11', '10', '4', '14', '5']
Alphabet: set(['1', '0'])
Starting state: 14
Accepting states: ['11', '10', '2']
Transition function:
	10	11	14	2	4	5
1 	11	11	4	11	11	5
0 	2	10	4	5	10	5
Current state: 14
Currently accepting: False

Precision: 0.9499 Recall: 0.9996 Accuracy: 0.9739 F1: 0.9741


--------------------------------------------------------------------
Begin DFA extraction with n_state:18
Done fitting takes time: 0.6454
==Minimized===

This DFA has 6 states
States: ['2', '11', '10', '4', '14', '5']
Alphabet: set(['1', '0'])
Starting state: 14
Accepting states: ['11', '10', '2']
Transition function:
	10	11	14	2	4	5
1 	11	11	4	11	11	5
0 	2	10	4	5	10	5
Current state: 14
Currently accepting: False

Precision: 0.9499 Recall: 0.9996 Accuracy: 0.9739 F1: 0.9741


--------------------------------------------------------------------
Begin DFA extraction with n_state:19
Done fitting takes time: 0.6142
==Minimized===

This DFA has 6 states
States: ['2', '11', '10', '4', '14', '5']
Alphabet: set(['1', '0'])
Starting state: 14
Accepting states: ['11', '10', '2']
Transition function:
	10	11	14	2	4	5
1 	11	11	4	11	11	5
0 	2	10	4	5	10	5
Current state: 14
Currently accepting: False

Precision: 0.9499 Recall: 0.9996 Accuracy: 0.9739 F1: 0.9741
[ 0.65829436  0.42415181  0.26511314  1.          1.          1.          1.
  1.          1.          0.97410604  0.97410604  0.97410604  0.97410604
  0.97410604  0.97410604  0.97410604  0.97410604  0.97410604]


[[ 0.          0.65829436  0.65829436  1.          1.          1.          1.
   1.          1.          1.          1.          1.          1.          1.
   1.          1.          1.          1.        ]
 [ 0.          0.          0.          0.          0.          0.39324383
   0.31739905  0.29637306  0.23603793  0.91968052  0.83817966  0.78806806
   0.81913388  0.82883241  0.58037814  0.8057766   0.67079536  0.69599632]
 [ 0.65829436  0.65829436  0.65829436  0.94447509  0.94447509  0.94447509
   0.94447509  1.          1.          1.          1.          1.          1.
   1.          1.          1.          1.          1.        ]
 [ 0.          0.          1.          1.          1.          1.          1.
   1.          1.          1.          1.          1.          1.          1.
   1.          1.          1.          1.        ]
 [ 0.          0.65829436  0.65829436  0.65829436  0.65829436  0.94447509
   0.94447509  1.          1.          1.          1.          1.          1.
   1.          1.          1.          1.          1.        ]
 [ 0.          0.65829436  0.65829436  1.          0.94447509  0.94447509
   0.94447509  0.94447509  0.94447509  1.          1.          1.          1.
   1.          1.          1.          1.          1.        ]
 [ 0.65829436  0.42415181  0.26511314  1.          1.          1.          1.
   1.          1.          0.97410604  0.97410604  0.97410604  0.97410604
   0.97410604  0.97410604  0.97410604  0.97410604  0.97410604]
 [ 0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.        ]
 [ 0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.        ]]
