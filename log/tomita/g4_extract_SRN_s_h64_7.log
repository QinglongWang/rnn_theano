G:g4, model:SRN sigmoid, load all data and stored hidden activations


--------------------------------------------------------------------
Begin DFA extraction with n_state:2
Done fitting takes time: 1.3936
==Minimized===

This DFA has 1 states
States: ['2']
Alphabet: set(['1', '0'])
Starting state: 2
Accepting states: []
Transition function:
	2
1 	2
0 	2
Current state: 2
Currently accepting: False

Precision: 0.0000 Recall: 0.0000 Accuracy: 0.5094 F1: 0.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:3
Done fitting takes time: 0.5133
==Minimized===

This DFA has 2 states
States: ['1', '2']
Alphabet: set(['1', '0'])
Starting state: 1
Accepting states: ['1']
Transition function:
	1	2
1 	2	2
0 	2	2
Current state: 1
Currently accepting: True

Precision: 0.0000 Recall: 0.0000 Accuracy: 0.5094 F1: 0.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:4
Done fitting takes time: 0.6929
==Minimized===

This DFA has 3 states
States: ['2', '1', '3']
Alphabet: set(['1', '0'])
Starting state: 3
Accepting states: ['1', '3']
Transition function:
	1	2	3
1 	2	2	1
0 	2	2	2
Current state: 3
Currently accepting: True

Precision: 1.0000 Recall: 0.0002 Accuracy: 0.5095 F1: 0.0004


--------------------------------------------------------------------
Begin DFA extraction with n_state:5
Done fitting takes time: 1.1785
==Minimized===

This DFA has 3 states
States: ['2', '1', '3']
Alphabet: set(['1', '0'])
Starting state: 3
Accepting states: ['1', '3']
Transition function:
	1	2	3
1 	2	2	1
0 	2	2	2
Current state: 3
Currently accepting: True

Precision: 1.0000 Recall: 0.0002 Accuracy: 0.5095 F1: 0.0004


--------------------------------------------------------------------
Begin DFA extraction with n_state:6
Done fitting takes time: 1.4786
==Minimized===

This DFA has 2 states
States: ['1', '3']
Alphabet: set(['1', '0'])
Starting state: 3
Accepting states: ['1']
Transition function:
	1	3
1 	1	1
0 	1	1
Current state: 3
Currently accepting: False

Precision: 0.4906 Recall: 1.0000 Accuracy: 0.4906 F1: 0.6583


--------------------------------------------------------------------
Begin DFA extraction with n_state:7
Done fitting takes time: 1.0442
==Minimized===

This DFA has 5 states
States: ['6', '1', '7', '3', '5']
Alphabet: set(['1', '0'])
Starting state: 3
Accepting states: ['1', '7', '6']
Transition function:
	1	3	5	6	7
1 	1	1	5	1	1
0 	7	7	5	5	6
Current state: 3
Currently accepting: False

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:8
Done fitting takes time: 0.5917
==Minimized===

This DFA has 5 states
States: ['6', '1', '7', '3', '5']
Alphabet: set(['1', '0'])
Starting state: 3
Accepting states: ['1', '7', '6']
Transition function:
	1	3	5	6	7
1 	1	1	5	1	1
0 	7	7	5	5	6
Current state: 3
Currently accepting: False

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:9
Done fitting takes time: 1.3880
==Minimized===

This DFA has 5 states
States: ['6', '1', '7', '3', '5']
Alphabet: set(['1', '0'])
Starting state: 3
Accepting states: ['1', '7', '6']
Transition function:
	1	3	5	6	7
1 	1	1	5	1	1
0 	7	7	5	5	6
Current state: 3
Currently accepting: False

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:10
Done fitting takes time: 1.4590
==Minimized===

This DFA has 5 states
States: ['6', '10', '7', '3', '5']
Alphabet: set(['1', '0'])
Starting state: 3
Accepting states: ['10', '7', '6']
Transition function:
	10	3	5	6	7
1 	10	10	5	10	10
0 	7	7	5	5	6
Current state: 3
Currently accepting: False

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:11
Done fitting takes time: 2.1401
==Minimized===

This DFA has 5 states
States: ['6', '11', '10', '3', '5']
Alphabet: set(['1', '0'])
Starting state: 3
Accepting states: ['11', '10', '6']
Transition function:
	10	11	3	5	6
1 	10	10	10	5	10
0 	11	6	11	5	5
Current state: 3
Currently accepting: False

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:12
Done fitting takes time: 0.6023
==Minimized===

This DFA has 5 states
States: ['6', '11', '10', '3', '5']
Alphabet: set(['1', '0'])
Starting state: 3
Accepting states: ['11', '10', '6']
Transition function:
	10	11	3	5	6
1 	10	10	10	5	10
0 	11	6	11	5	5
Current state: 3
Currently accepting: False

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:13
Done fitting takes time: 0.8549
==Minimized===

This DFA has 5 states
States: ['6', '11', '10', '13', '3']
Alphabet: set(['1', '0'])
Starting state: 3
Accepting states: ['11', '10', '6']
Transition function:
	10	11	13	3	6
1 	10	10	13	10	10
0 	11	6	13	11	13
Current state: 3
Currently accepting: False

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:14
Done fitting takes time: 0.6265
==Minimized===

This DFA has 5 states
States: ['6', '11', '10', '13', '3']
Alphabet: set(['1', '0'])
Starting state: 3
Accepting states: ['11', '10', '6']
Transition function:
	10	11	13	3	6
1 	10	10	13	10	10
0 	11	6	13	11	13
Current state: 3
Currently accepting: False

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:15
Done fitting takes time: 1.4200
==Minimized===

This DFA has 5 states
States: ['6', '11', '10', '13', '3']
Alphabet: set(['1', '0'])
Starting state: 3
Accepting states: ['11', '10', '6']
Transition function:
	10	11	13	3	6
1 	10	10	13	10	10
0 	11	6	13	11	13
Current state: 3
Currently accepting: False

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:16
Done fitting takes time: 1.3973
==Minimized===

This DFA has 5 states
States: ['6', '11', '10', '13', '3']
Alphabet: set(['1', '0'])
Starting state: 3
Accepting states: ['11', '10', '6']
Transition function:
	10	11	13	3	6
1 	10	10	13	10	10
0 	11	6	13	11	13
Current state: 3
Currently accepting: False

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:17
Done fitting takes time: 0.6765
==Minimized===

This DFA has 5 states
States: ['6', '11', '10', '13', '3']
Alphabet: set(['1', '0'])
Starting state: 3
Accepting states: ['11', '10', '6']
Transition function:
	10	11	13	3	6
1 	10	10	13	10	10
0 	11	6	13	11	13
Current state: 3
Currently accepting: False

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:18
Done fitting takes time: 0.6326
==Minimized===

This DFA has 5 states
States: ['6', '11', '10', '13', '3']
Alphabet: set(['1', '0'])
Starting state: 3
Accepting states: ['11', '10', '6']
Transition function:
	10	11	13	3	6
1 	10	10	13	10	10
0 	11	6	13	11	13
Current state: 3
Currently accepting: False

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:19
Done fitting takes time: 0.6970
==Minimized===

This DFA has 5 states
States: ['6', '11', '10', '13', '3']
Alphabet: set(['1', '0'])
Starting state: 3
Accepting states: ['11', '10', '6']
Transition function:
	10	11	13	3	6
1 	10	10	13	10	10
0 	11	6	13	11	13
Current state: 3
Currently accepting: False

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000
[  0.00000000e+00   0.00000000e+00   3.89256520e-04   3.89256520e-04
   6.58294355e-01   1.00000000e+00   1.00000000e+00   1.00000000e+00
   1.00000000e+00   1.00000000e+00   1.00000000e+00   1.00000000e+00
   1.00000000e+00   1.00000000e+00   1.00000000e+00   1.00000000e+00
   1.00000000e+00   1.00000000e+00]


[[  0.00000000e+00   0.00000000e+00   3.89256520e-04   3.89256520e-04
    6.58294355e-01   1.00000000e+00   1.00000000e+00   1.00000000e+00
    1.00000000e+00   1.00000000e+00   1.00000000e+00   1.00000000e+00
    1.00000000e+00   1.00000000e+00   1.00000000e+00   1.00000000e+00
    1.00000000e+00   1.00000000e+00]
 [  0.00000000e+00   0.00000000e+00   0.00000000e+00   0.00000000e+00
    0.00000000e+00   0.00000000e+00   0.00000000e+00   0.00000000e+00
    0.00000000e+00   0.00000000e+00   0.00000000e+00   0.00000000e+00
    0.00000000e+00   0.00000000e+00   0.00000000e+00   0.00000000e+00
    0.00000000e+00   0.00000000e+00]
 [  0.00000000e+00   0.00000000e+00   0.00000000e+00   0.00000000e+00
    0.00000000e+00   0.00000000e+00   0.00000000e+00   0.00000000e+00
    0.00000000e+00   0.00000000e+00   0.00000000e+00   0.00000000e+00
    0.00000000e+00   0.00000000e+00   0.00000000e+00   0.00000000e+00
    0.00000000e+00   0.00000000e+00]
 [  0.00000000e+00   0.00000000e+00   0.00000000e+00   0.00000000e+00
    0.00000000e+00   0.00000000e+00   0.00000000e+00   0.00000000e+00
    0.00000000e+00   0.00000000e+00   0.00000000e+00   0.00000000e+00
    0.00000000e+00   0.00000000e+00   0.00000000e+00   0.00000000e+00
    0.00000000e+00   0.00000000e+00]
 [  0.00000000e+00   0.00000000e+00   0.00000000e+00   0.00000000e+00
    0.00000000e+00   0.00000000e+00   0.00000000e+00   0.00000000e+00
    0.00000000e+00   0.00000000e+00   0.00000000e+00   0.00000000e+00
    0.00000000e+00   0.00000000e+00   0.00000000e+00   0.00000000e+00
    0.00000000e+00   0.00000000e+00]
 [  0.00000000e+00   0.00000000e+00   0.00000000e+00   0.00000000e+00
    0.00000000e+00   0.00000000e+00   0.00000000e+00   0.00000000e+00
    0.00000000e+00   0.00000000e+00   0.00000000e+00   0.00000000e+00
    0.00000000e+00   0.00000000e+00   0.00000000e+00   0.00000000e+00
    0.00000000e+00   0.00000000e+00]
 [  0.00000000e+00   0.00000000e+00   0.00000000e+00   0.00000000e+00
    0.00000000e+00   0.00000000e+00   0.00000000e+00   0.00000000e+00
    0.00000000e+00   0.00000000e+00   0.00000000e+00   0.00000000e+00
    0.00000000e+00   0.00000000e+00   0.00000000e+00   0.00000000e+00
    0.00000000e+00   0.00000000e+00]
 [  0.00000000e+00   0.00000000e+00   0.00000000e+00   0.00000000e+00
    0.00000000e+00   0.00000000e+00   0.00000000e+00   0.00000000e+00
    0.00000000e+00   0.00000000e+00   0.00000000e+00   0.00000000e+00
    0.00000000e+00   0.00000000e+00   0.00000000e+00   0.00000000e+00
    0.00000000e+00   0.00000000e+00]
 [  0.00000000e+00   0.00000000e+00   0.00000000e+00   0.00000000e+00
    0.00000000e+00   0.00000000e+00   0.00000000e+00   0.00000000e+00
    0.00000000e+00   0.00000000e+00   0.00000000e+00   0.00000000e+00
    0.00000000e+00   0.00000000e+00   0.00000000e+00   0.00000000e+00
    0.00000000e+00   0.00000000e+00]]
