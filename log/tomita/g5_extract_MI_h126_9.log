G:g5, model:MI tanh, load all data and stored hidden activations


--------------------------------------------------------------------
Begin DFA extraction with n_state:2
Done fitting takes time: 0.9519
==Minimized===

This DFA has 1 states
States: ['1']
Alphabet: set(['1', '0'])
Starting state: 1
Accepting states: []
Transition function:
	1
1 	1
0 	1
Current state: 1
Currently accepting: False

Precision: 0.0000 Recall: 0.0000 Accuracy: 0.5097 F1: 0.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:3
Done fitting takes time: 1.1665
==Minimized===

This DFA has 1 states
States: ['3']
Alphabet: set(['1', '0'])
Starting state: 3
Accepting states: []
Transition function:
	3
1 	3
0 	3
Current state: 3
Currently accepting: False

Precision: 0.0000 Recall: 0.0000 Accuracy: 0.5097 F1: 0.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:4
Done fitting takes time: 0.9225
==Minimized===

This DFA has 4 states
States: ['1', '4', '3', '2']
Alphabet: set(['1', '0'])
Starting state: 3
Accepting states: ['3', '2']
Transition function:
	1	2	3	4
1 	2	1	4	1
0 	4	1	4	1
Current state: 3
Currently accepting: True

Precision: 0.0000 Recall: 0.0000 Accuracy: 0.4953 F1: 0.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:5
Done fitting takes time: 1.2173
==Minimized===

This DFA has 1 states
States: ['3']
Alphabet: set(['1', '0'])
Starting state: 3
Accepting states: []
Transition function:
	3
1 	3
0 	3
Current state: 3
Currently accepting: False

Precision: 0.0000 Recall: 0.0000 Accuracy: 0.5097 F1: 0.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:6
Done fitting takes time: 0.6101
==Minimized===

This DFA has 2 states
States: ['5', '3']
Alphabet: set(['1', '0'])
Starting state: 3
Accepting states: ['5']
Transition function:
	3	5
1 	5	3
0 	5	3
Current state: 3
Currently accepting: False

Precision: 0.0000 Recall: 0.0000 Accuracy: 0.4826 F1: 0.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:7
Done fitting takes time: 1.3217
==Minimized===

This DFA has 1 states
States: ['3']
Alphabet: set(['1', '0'])
Starting state: 3
Accepting states: []
Transition function:
	3
1 	3
0 	3
Current state: 3
Currently accepting: False

Precision: 0.0000 Recall: 0.0000 Accuracy: 0.5097 F1: 0.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:8
Done fitting takes time: 1.8316
==Minimized===

This DFA has 6 states
States: ['4', '6', '1', '3', '8', '2']
Alphabet: set(['1', '0'])
Starting state: 3
Accepting states: ['8', '2', '4', '6']
Transition function:
	1	2	3	4	6	8
1 	6	1	8	2	1	3
0 	2	1	2	4	4	3
Current state: 3
Currently accepting: False

Precision: 0.4817 Recall: 0.4619 Accuracy: 0.4925 F1: 0.4716


--------------------------------------------------------------------
Begin DFA extraction with n_state:9
Done fitting takes time: 1.8941
==Minimized===

This DFA has 8 states
States: ['8', '2', '9', '1', '5', '6', '3', '7']
Alphabet: set(['1', '0'])
Starting state: 9
Accepting states: ['2', '5', '6', '9', '8']
Transition function:
	1	2	3	5	6	7	8	9
1 	6	6	9	2	2	3	1	9
0 	8	8	5	3	1	3	1	7
Current state: 9
Currently accepting: True

Precision: 0.4844 Recall: 0.5700 Accuracy: 0.4916 F1: 0.5237


--------------------------------------------------------------------
Begin DFA extraction with n_state:10
Done fitting takes time: 1.8207
==Minimized===

This DFA has 9 states
States: ['2', '1', '4', '7', '9', '10', '3', '5', '6']
Alphabet: set(['1', '0'])
Starting state: 9
Accepting states: ['1', '2', '5', '4', '6', '9']
Transition function:
	1	10	2	3	4	5	6	7	9
1 	2	6	10	9	2	1	1	3	9
0 	6	6	10	5	4	10	4	3	7
Current state: 9
Currently accepting: True

Precision: 0.4885 Recall: 0.7630 Accuracy: 0.4921 F1: 0.5957


--------------------------------------------------------------------
Begin DFA extraction with n_state:11
Done fitting takes time: 1.8735
==Minimized===

This DFA has 9 states
States: ['4', '10', '5', '11', '1', '3', '7', '2', '9']
Alphabet: set(['1', '0'])
Starting state: 9
Accepting states: ['10', '1', '2', '5', '4', '9']
Transition function:
	1	10	11	2	3	4	5	7	9
1 	5	5	3	1	5	7	1	2	9
0 	4	2	3	7	5	7	10	2	11
Current state: 9
Currently accepting: True

Precision: 0.4846 Recall: 0.6855 Accuracy: 0.4883 F1: 0.5678


--------------------------------------------------------------------
Begin DFA extraction with n_state:12
Done fitting takes time: 0.8187
==Minimized===

This DFA has 6 states
States: ['9', '10', '3', '5', '11', '12']
Alphabet: set(['1', '0'])
Starting state: 9
Accepting states: ['11', '12', '9']
Transition function:
	10	11	12	3	5	9
1 	12	3	10	5	3	9
0 	12	3	10	5	10	11
Current state: 9
Currently accepting: True

Precision: 0.4811 Recall: 0.3181 Accuracy: 0.4974 F1: 0.3830


--------------------------------------------------------------------
Begin DFA extraction with n_state:13
Done fitting takes time: 1.9849
==Minimized===

This DFA has 9 states
States: ['10', '4', '11', '13', '9', '1', '3', '12', '5']
Alphabet: set(['1', '0'])
Starting state: 9
Accepting states: ['10', '12', '5', '4']
Transition function:
	1	10	11	12	13	3	4	5	9
1 	12	12	3	1	13	12	1	3	13
0 	4	4	3	10	13	5	1	10	11
Current state: 9
Currently accepting: False

Precision: 0.4611 Recall: 0.1282 Accuracy: 0.4991 F1: 0.2006


--------------------------------------------------------------------
Begin DFA extraction with n_state:14
Done fitting takes time: 1.8687
==Minimized===

This DFA has 12 states
States: ['6', '11', '10', '1', '9', '5', '14', '3', '4', '12', '2', '8']
Alphabet: set(['1', '0'])
Starting state: 9
Accepting states: ['12', '14', '3', '2', '5', '4', '6', '8']
Transition function:
	1	10	11	12	14	2	3	4	5	6	8	9
1 	12	6	3	10	12	1	12	2	3	1	1	11
0 	8	8	14	10	5	10	8	4	14	4	1	11
Current state: 9
Currently accepting: False

Precision: 0.4718 Recall: 0.2391 Accuracy: 0.4956 F1: 0.3174


--------------------------------------------------------------------
Begin DFA extraction with n_state:15
Done fitting takes time: 1.7390
==Minimized===

This DFA has 6 states
States: ['10', '5', '3', '9', '11', '13']
Alphabet: set(['1', '0'])
Starting state: 9
Accepting states: ['10']
Transition function:
	10	11	13	3	5	9
1 	10	3	3	5	10	13
0 	10	3	10	5	10	11
Current state: 9
Currently accepting: False

Precision: 0.4907 Recall: 0.9995 Accuracy: 0.4912 F1: 0.6583


--------------------------------------------------------------------
Begin DFA extraction with n_state:16
Done fitting takes time: 1.6249
==Minimized===

This DFA has 4 states
States: ['10', '3', '11', '9']
Alphabet: set(['1', '0'])
Starting state: 9
Accepting states: ['10', '3']
Transition function:
	10	11	3	9
1 	10	3	10	10
0 	10	10	11	11
Current state: 9
Currently accepting: False

Precision: 0.4905 Recall: 1.0000 Accuracy: 0.4906 F1: 0.6581


--------------------------------------------------------------------
Begin DFA extraction with n_state:17
Done fitting takes time: 1.9786
==Minimized===

This DFA has 7 states
States: ['14', '10', '7', '11', '9', '13', '3']
Alphabet: set(['1', '0'])
Starting state: 9
Accepting states: ['10', '13', '14', '3', '7']
Transition function:
	10	11	13	14	3	7	9
1 	10	3	13	11	7	10	13
0 	10	14	14	11	11	14	11
Current state: 9
Currently accepting: False

Precision: 0.4967 Recall: 0.9277 Accuracy: 0.5035 F1: 0.6470


--------------------------------------------------------------------
Begin DFA extraction with n_state:18
Done fitting takes time: 2.1381
==Minimized===

This DFA has 7 states
States: ['18', '4', '10', '3', '11', '13', '9']
Alphabet: set(['1', '0'])
Starting state: 9
Accepting states: ['10', '18', '3', '4']
Transition function:
	10	11	13	18	3	4	9
1 	10	3	18	11	10	18	13
0 	10	18	18	11	4	10	11
Current state: 9
Currently accepting: False

Precision: 0.4925 Recall: 1.0000 Accuracy: 0.4947 F1: 0.6600


--------------------------------------------------------------------
Begin DFA extraction with n_state:19
Done fitting takes time: 1.9991
==Minimized===

This DFA has 7 states
States: ['19', '10', '13', '11', '9', '18', '3']
Alphabet: set(['1', '0'])
Starting state: 9
Accepting states: ['10', '13', '19', '18', '3']
Transition function:
	10	11	13	18	19	3	9
1 	10	3	13	19	3	10	13
0 	10	18	18	11	18	11	11
Current state: 9
Currently accepting: False

Precision: 0.4922 Recall: 0.9738 Accuracy: 0.4945 F1: 0.6539
[ 0.          0.          0.          0.          0.          0.
  0.47162642  0.52371498  0.59568885  0.56782021  0.38300332  0.20063874
  0.31739962  0.6582859   0.65813384  0.64696526  0.6599588   0.65387716]


[[ 0.          0.          0.          0.          0.          0.          0.
   0.          0.31709742  0.          0.          0.          0.          0.
   0.23880597  0.16176769  0.41240876  0.15698023]
 [ 0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.42464031  0.42464031  0.42464031  0.          0.
   0.42263312  0.          0.          0.        ]
 [ 0.986733    0.50826596  0.50826596  1.          1.          1.          1.
   1.          1.          1.          1.          1.          1.          1.
   1.          1.          1.          1.        ]
 [ 0.          0.78620492  1.          1.          1.          1.          1.
   1.          1.          1.          1.          1.          1.          1.
   1.          1.          1.          1.        ]
 [ 0.          0.          0.67020677  0.67020677  0.50826596  0.60450468
   0.62569135  0.62569135  0.39531603  0.63478336  0.63478336  0.52193476
   0.67020677  0.51128502  0.49596583  0.49596583  0.49596583  0.69860279]
 [ 0.9860322   0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.          0.          1.          1.
   1.          1.          1.          1.        ]
 [ 0.          0.          0.          0.          0.          0.
   0.47162642  0.52371498  0.59568885  0.56782021  0.38300332  0.20063874
   0.31739962  0.6582859   0.65813384  0.64696526  0.6599588   0.65387716]
 [ 0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.        ]
 [ 0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.        ]]
