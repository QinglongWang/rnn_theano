G:g3, model:UNI sigmoid, load all data and stored hidden activations


--------------------------------------------------------------------
Begin DFA extraction with n_state:2
Done fitting takes time: 0.3554
==Minimized===

This DFA has 1 states
States: ['2']
Alphabet: set(['1', '0'])
Starting state: 2
Accepting states: []
Transition function:
	2
1 	2
0 	2
Current state: 2
Currently accepting: False

Precision: 0.0000 Recall: 0.0000 Accuracy: 0.5422 F1: 0.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:3
Done fitting takes time: 0.3667
==Minimized===

This DFA has 2 states
States: ['3', '1']
Alphabet: set(['1', '0'])
Starting state: 3
Accepting states: ['3']
Transition function:
	1	3
1 	1	3
0 	1	1
Current state: 3
Currently accepting: True

Precision: 1.0000 Recall: 0.0055 Accuracy: 0.5448 F1: 0.0110


--------------------------------------------------------------------
Begin DFA extraction with n_state:4
Done fitting takes time: 0.6258
==Minimized===

This DFA has 3 states
States: ['3', '1', '4']
Alphabet: set(['1', '0'])
Starting state: 3
Accepting states: ['3']
Transition function:
	1	3	4
1 	1	3	1
0 	1	4	3
Current state: 3
Currently accepting: True

Precision: 1.0000 Recall: 0.2980 Accuracy: 0.6787 F1: 0.4592


--------------------------------------------------------------------
Begin DFA extraction with n_state:5
Done fitting takes time: 0.6103
==Minimized===

This DFA has 3 states
States: ['2', '1', '4']
Alphabet: set(['1', '0'])
Starting state: 2
Accepting states: ['2']
Transition function:
	1	2	4
1 	1	2	1
0 	1	4	2
Current state: 2
Currently accepting: True

Precision: 1.0000 Recall: 0.2980 Accuracy: 0.6787 F1: 0.4592


--------------------------------------------------------------------
Begin DFA extraction with n_state:6
Done fitting takes time: 0.5959
==Minimized===

This DFA has 3 states
States: ['2', '1', '6']
Alphabet: set(['1', '0'])
Starting state: 2
Accepting states: ['2']
Transition function:
	1	2	6
1 	1	2	1
0 	1	6	2
Current state: 2
Currently accepting: True

Precision: 1.0000 Recall: 0.2980 Accuracy: 0.6787 F1: 0.4592


--------------------------------------------------------------------
Begin DFA extraction with n_state:7
Done fitting takes time: 0.2080
==Minimized===

This DFA has 3 states
States: ['2', '1', '7']
Alphabet: set(['1', '0'])
Starting state: 2
Accepting states: ['2']
Transition function:
	1	2	7
1 	1	2	1
0 	1	7	2
Current state: 2
Currently accepting: True

Precision: 1.0000 Recall: 0.2980 Accuracy: 0.6787 F1: 0.4592


--------------------------------------------------------------------
Begin DFA extraction with n_state:8
Done fitting takes time: 0.2122
==Minimized===

This DFA has 3 states
States: ['2', '1', '7']
Alphabet: set(['1', '0'])
Starting state: 2
Accepting states: ['2']
Transition function:
	1	2	7
1 	1	2	1
0 	1	7	2
Current state: 2
Currently accepting: True

Precision: 1.0000 Recall: 0.2980 Accuracy: 0.6787 F1: 0.4592


--------------------------------------------------------------------
Begin DFA extraction with n_state:9
Done fitting takes time: 0.2137
==Minimized===

This DFA has 6 states
States: ['8', '3', '2', '9', '1', '7']
Alphabet: set(['1', '0'])
Starting state: 9
Accepting states: ['8', '3', '2']
Transition function:
	1	2	3	7	8	9
1 	1	2	8	1	3	3
0 	1	7	7	2	8	8
Current state: 9
Currently accepting: False

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:10
Done fitting takes time: 0.5590
==Minimized===

This DFA has 6 states
States: ['10', '3', '2', '9', '1', '7']
Alphabet: set(['1', '0'])
Starting state: 9
Accepting states: ['10', '3', '2']
Transition function:
	1	10	2	3	7	9
1 	1	3	2	10	1	3
0 	1	10	7	7	2	10
Current state: 9
Currently accepting: False

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:11
Done fitting takes time: 0.2371
==Minimized===

This DFA has 6 states
States: ['10', '3', '2', '9', '1', '7']
Alphabet: set(['1', '0'])
Starting state: 9
Accepting states: ['10', '3', '2']
Transition function:
	1	10	2	3	7	9
1 	1	3	2	10	1	3
0 	1	10	7	7	2	10
Current state: 9
Currently accepting: False

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:12
Done fitting takes time: 0.2220
==Minimized===

This DFA has 6 states
States: ['10', '3', '2', '9', '1', '7']
Alphabet: set(['1', '0'])
Starting state: 9
Accepting states: ['10', '3', '2']
Transition function:
	1	10	2	3	7	9
1 	1	3	2	10	1	3
0 	1	10	7	7	2	10
Current state: 9
Currently accepting: False

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:13
Done fitting takes time: 0.2266
==Minimized===

This DFA has 6 states
States: ['10', '3', '2', '9', '13', '7']
Alphabet: set(['1', '0'])
Starting state: 9
Accepting states: ['10', '3', '2']
Transition function:
	10	13	2	3	7	9
1 	3	13	2	10	13	3
0 	10	13	7	7	2	10
Current state: 9
Currently accepting: False

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:14
Done fitting takes time: 1.0767
==Minimized===

This DFA has 6 states
States: ['10', '3', '2', '9', '13', '7']
Alphabet: set(['1', '0'])
Starting state: 9
Accepting states: ['10', '3', '2']
Transition function:
	10	13	2	3	7	9
1 	3	13	2	10	13	3
0 	10	13	7	7	2	10
Current state: 9
Currently accepting: False

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:15
Done fitting takes time: 0.2400
==Minimized===

This DFA has 6 states
States: ['10', '15', '2', '9', '13', '7']
Alphabet: set(['1', '0'])
Starting state: 9
Accepting states: ['10', '15', '2']
Transition function:
	10	13	15	2	7	9
1 	15	13	10	2	13	15
0 	10	13	7	7	2	10
Current state: 9
Currently accepting: False

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:16
Done fitting takes time: 0.2265
==Minimized===

This DFA has 6 states
States: ['10', '15', '2', '9', '13', '7']
Alphabet: set(['1', '0'])
Starting state: 9
Accepting states: ['10', '15', '2']
Transition function:
	10	13	15	2	7	9
1 	15	13	10	2	13	15
0 	10	13	7	7	2	10
Current state: 9
Currently accepting: False

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:17
Done fitting takes time: 0.2348
==Minimized===

This DFA has 6 states
States: ['11', '15', '2', '9', '13', '7']
Alphabet: set(['1', '0'])
Starting state: 9
Accepting states: ['11', '15', '2']
Transition function:
	11	13	15	2	7	9
1 	15	13	11	2	13	15
0 	11	13	7	7	2	11
Current state: 9
Currently accepting: False

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:18
Done fitting takes time: 0.4229
==Minimized===

This DFA has 6 states
States: ['11', '15', '18', '9', '13', '7']
Alphabet: set(['1', '0'])
Starting state: 9
Accepting states: ['11', '15', '18']
Transition function:
	11	13	15	18	7	9
1 	15	13	11	18	13	15
0 	11	13	7	7	18	11
Current state: 9
Currently accepting: False

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:19
Done fitting takes time: 0.2327
==Minimized===

This DFA has 6 states
States: ['11', '15', '18', '9', '13', '7']
Alphabet: set(['1', '0'])
Starting state: 9
Accepting states: ['11', '15', '18']
Transition function:
	11	13	15	18	7	9
1 	15	13	11	18	13	15
0 	11	13	7	7	18	11
Current state: 9
Currently accepting: False

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000
[ 0.          0.0110331   0.45920746  0.45920746  0.45920746  0.45920746
  0.45920746  1.          1.          1.          1.          1.          1.
  1.          1.          1.          1.          1.        ]


[[ 0.          0.6280285   0.6280285   0.6280285   0.51224105  0.51224105
   0.62759385  0.78759482  0.78759482  0.85577649  0.85577649  0.85437312
   0.80698152  0.88863993  0.83428261  1.          0.94114855  0.97205882]
 [ 0.          0.          0.          0.          0.          0.37228608
   0.          0.21918847  0.          0.32        0.01203008  0.46678107
   0.38727836  0.32577904  0.38313526  0.38846826  0.41204888  0.3550152 ]
 [ 0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.        ]
 [ 0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.        ]
 [ 0.          0.0110331   0.45920746  0.45920746  0.45920746  0.45920746
   0.45920746  1.          1.          1.          1.          1.          1.
   1.          1.          1.          1.          1.        ]
 [ 0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.        ]
 [ 0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.        ]
 [ 0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.        ]
 [ 0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.        ]]
