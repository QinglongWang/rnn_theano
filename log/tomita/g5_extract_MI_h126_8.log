G:g5, model:MI tanh, load all data and stored hidden activations


--------------------------------------------------------------------
Begin DFA extraction with n_state:2
Done fitting takes time: 0.6152
==Minimized===

This DFA has 1 states
States: ['1']
Alphabet: set(['1', '0'])
Starting state: 1
Accepting states: []
Transition function:
	1
1 	1
0 	1
Current state: 1
Currently accepting: False

Precision: 0.0000 Recall: 0.0000 Accuracy: 0.5097 F1: 0.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:3
Done fitting takes time: 1.3084
==Minimized===

This DFA has 2 states
States: ['2', '1']
Alphabet: set(['1', '0'])
Starting state: 2
Accepting states: ['2']
Transition function:
	1	2
1 	1	1
0 	1	1
Current state: 2
Currently accepting: True

Precision: 0.0000 Recall: 0.0000 Accuracy: 0.5097 F1: 0.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:4
Done fitting takes time: 0.6224
==Minimized===

This DFA has 1 states
States: ['2']
Alphabet: set(['1', '0'])
Starting state: 2
Accepting states: []
Transition function:
	2
1 	2
0 	2
Current state: 2
Currently accepting: False

Precision: 0.0000 Recall: 0.0000 Accuracy: 0.5097 F1: 0.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:5
Done fitting takes time: 1.1784
==Minimized===

This DFA has 1 states
States: ['2']
Alphabet: set(['1', '0'])
Starting state: 2
Accepting states: []
Transition function:
	2
1 	2
0 	2
Current state: 2
Currently accepting: False

Precision: 0.0000 Recall: 0.0000 Accuracy: 0.5097 F1: 0.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:6
Done fitting takes time: 1.4971
==Minimized===

This DFA has 1 states
States: ['2']
Alphabet: set(['1', '0'])
Starting state: 2
Accepting states: ['2']
Transition function:
	2
1 	2
0 	2
Current state: 2
Currently accepting: True

Precision: 0.4903 Recall: 1.0000 Accuracy: 0.4903 F1: 0.6580


--------------------------------------------------------------------
Begin DFA extraction with n_state:7
Done fitting takes time: 0.6656
==Minimized===

This DFA has 4 states
States: ['4', '7', '1', '3']
Alphabet: set(['1', '0'])
Starting state: 4
Accepting states: ['1', '3', '7']
Transition function:
	1	3	4	7
1 	3	1	3	4
0 	7	4	7	4
Current state: 4
Currently accepting: False

Precision: 0.4366 Recall: 0.2396 Accuracy: 0.4755 F1: 0.3094


--------------------------------------------------------------------
Begin DFA extraction with n_state:8
Done fitting takes time: 1.9380
==Minimized===

This DFA has 1 states
States: ['2']
Alphabet: set(['1', '0'])
Starting state: 2
Accepting states: ['2']
Transition function:
	2
1 	2
0 	2
Current state: 2
Currently accepting: True

Precision: 0.4903 Recall: 1.0000 Accuracy: 0.4903 F1: 0.6580


--------------------------------------------------------------------
Begin DFA extraction with n_state:9
Done fitting takes time: 1.4059
==Minimized===

This DFA has 1 states
States: ['1']
Alphabet: set(['1', '0'])
Starting state: 1
Accepting states: ['1']
Transition function:
	1
1 	1
0 	1
Current state: 1
Currently accepting: True

Precision: 0.4903 Recall: 1.0000 Accuracy: 0.4903 F1: 0.6580


--------------------------------------------------------------------
Begin DFA extraction with n_state:10
Done fitting takes time: 1.6259
==Minimized===

This DFA has 6 states
States: ['1', '3', '5', '10', '7', '8']
Alphabet: set(['1', '0'])
Starting state: 10
Accepting states: ['1', '3', '5']
Transition function:
	1	10	3	5	7	8
1 	7	3	5	3	1	5
0 	7	8	1	7	1	1
Current state: 10
Currently accepting: False

Precision: 0.5037 Recall: 1.0000 Accuracy: 0.5168 F1: 0.6699


--------------------------------------------------------------------
Begin DFA extraction with n_state:11
Done fitting takes time: 1.6726
==Minimized===

This DFA has 7 states
States: ['1', '8', '7', '10', '4', '2', '6']
Alphabet: set(['1', '0'])
Starting state: 10
Accepting states: ['1', '2', '6', '8']
Transition function:
	1	10	2	4	6	7	8
1 	2	2	4	2	7	1	1
0 	7	8	4	7	7	6	4
Current state: 10
Currently accepting: False

Precision: 0.4978 Recall: 0.6667 Accuracy: 0.5068 F1: 0.5701


--------------------------------------------------------------------
Begin DFA extraction with n_state:12
Done fitting takes time: 2.0497
==Minimized===

This DFA has 10 states
States: ['8', '10', '1', '7', '6', '12', '3', '2', '4', '9']
Alphabet: set(['1', '0'])
Starting state: 10
Accepting states: ['12', '3', '2', '4', '7', '6', '9']
Transition function:
	1	10	12	2	3	4	6	7	8	9
1 	2	2	2	12	12	2	1	1	9	3
0 	7	8	7	4	12	6	12	1	4	6
Current state: 10
Currently accepting: False

Precision: 0.4775 Recall: 0.5597 Accuracy: 0.4838 F1: 0.5153


--------------------------------------------------------------------
Begin DFA extraction with n_state:13
Done fitting takes time: 2.3766
==Minimized===

This DFA has 11 states
States: ['11', '13', '10', '4', '7', '12', '6', '1', '5', '3', '2']
Alphabet: set(['1', '0'])
Starting state: 10
Accepting states: ['11', '13', '12', '1', '5', '6']
Transition function:
	1	10	11	12	13	2	3	4	5	6	7
1 	1	2	7	7	3	13	5	7	1	4	4
0 	12	2	7	6	3	13	11	6	6	12	4
Current state: 10
Currently accepting: False

Precision: 0.4865 Recall: 0.2802 Accuracy: 0.5020 F1: 0.3556


--------------------------------------------------------------------
Begin DFA extraction with n_state:14
Done fitting takes time: 1.8237
==Minimized===

This DFA has 10 states
States: ['11', '1', '7', '10', '8', '6', '13', '2', '3', '5']
Alphabet: set(['1', '0'])
Starting state: 10
Accepting states: ['11', '13', '1', '3', '2', '5', '6']
Transition function:
	1	10	11	13	2	3	5	6	7	8
1 	7	2	7	3	13	5	2	1	1	13
0 	6	8	7	7	11	11	6	11	11	13
Current state: 10
Currently accepting: False

Precision: 0.5003 Recall: 1.0000 Accuracy: 0.5102 F1: 0.6669


--------------------------------------------------------------------
Begin DFA extraction with n_state:15
Done fitting takes time: 2.1741
==Minimized===

This DFA has 6 states
States: ['13', '11', '2', '10', '3', '8']
Alphabet: set(['1', '0'])
Starting state: 10
Accepting states: ['11', '13', '2']
Transition function:
	10	11	13	2	3	8
1 	2	11	3	13	11	13
0 	8	11	3	13	11	13
Current state: 10
Currently accepting: False

Precision: 0.4909 Recall: 1.0000 Accuracy: 0.4914 F1: 0.6585


--------------------------------------------------------------------
Begin DFA extraction with n_state:16
Done fitting takes time: 1.8448
==Minimized===

This DFA has 3 states
States: ['13', '10', '2']
Alphabet: set(['1', '0'])
Starting state: 10
Accepting states: ['13']
Transition function:
	10	13	2
1 	2	13	13
0 	2	13	13
Current state: 10
Currently accepting: False

Precision: 0.4905 Recall: 1.0000 Accuracy: 0.4906 F1: 0.6581


--------------------------------------------------------------------
Begin DFA extraction with n_state:17
Done fitting takes time: 2.2905
==Minimized===

This DFA has 9 states
States: ['11', '3', '10', '15', '9', '17', '2', '13', '12']
Alphabet: set(['1', '0'])
Starting state: 10
Accepting states: ['11', '13', '12', '15', '3', '9']
Transition function:
	10	11	12	13	15	17	2	3	9
1 	17	15	2	2	11	9	11	11	3
0 	17	15	15	2	12	13	11	11	2
Current state: 10
Currently accepting: False

Precision: 0.4931 Recall: 1.0000 Accuracy: 0.4959 F1: 0.6605


--------------------------------------------------------------------
Begin DFA extraction with n_state:18
Done fitting takes time: 2.1003
==Minimized===

This DFA has 14 states
States: ['1', '7', '12', '17', '11', '10', '14', '5', '18', '4', '3', '8', '13', '9']
Alphabet: set(['1', '0'])
Starting state: 10
Accepting states: ['11', '13', '12', '14', '17', '1', '3', '5', '7', '9', '8']
Transition function:
	1	10	11	12	13	14	17	18	3	4	5	7	8	9
1 	4	18	3	17	3	17	14	9	5	1	17	14	14	3
0 	4	18	17	7	8	17	12	13	11	7	8	4	11	3
Current state: 10
Currently accepting: False

Precision: 0.4858 Recall: 0.7693 Accuracy: 0.4876 F1: 0.5955


--------------------------------------------------------------------
Begin DFA extraction with n_state:19
Done fitting takes time: 0.7098
==Minimized===

This DFA has 14 states
States: ['11', '7', '15', '1', '3', '16', '10', '8', '18', '4', '13', '9', '17', '19']
Alphabet: set(['1', '0'])
Starting state: 19
Accepting states: ['11', '10', '13', '15', '17', '16', '19', '1', '3', '7', '9', '8']
Transition function:
	1	10	11	13	15	16	17	18	19	3	4	7	8	9
1 	17	10	15	3	19	10	4	9	18	11	10	1	16	3
0 	7	4	8	8	4	7	4	13	18	11	8	4	4	3
Current state: 19
Currently accepting: True

Precision: 0.4826 Recall: 0.6319 Accuracy: 0.4873 F1: 0.5473
[ 0.          0.          0.          0.          0.65802986  0.30940939
  0.65802986  0.65802986  0.66993727  0.57005029  0.51530894  0.35557587
  0.66693355  0.65849802  0.65813384  0.66048208  0.59553903  0.54725023]


[[  0.00000000e+00   6.70206774e-01   6.70206774e-01   0.00000000e+00
    0.00000000e+00   2.45614035e-01   2.45614035e-01   6.70206774e-01
    6.70206774e-01   1.23252859e-01   6.70206774e-01   4.04411765e-02
    6.70206774e-01   6.70206774e-01   6.70206774e-01   5.81735968e-01
    5.19661292e-01   6.70206774e-01]
 [  0.00000000e+00   0.00000000e+00   0.00000000e+00   0.00000000e+00
    0.00000000e+00   0.00000000e+00   0.00000000e+00   0.00000000e+00
    4.04484692e-01   0.00000000e+00   5.40903673e-01   0.00000000e+00
    0.00000000e+00   7.95025539e-02   4.68055231e-04   1.41380736e-01
    4.79961603e-04   1.25393164e-01]
 [  0.00000000e+00   5.08265959e-01   1.00000000e+00   1.00000000e+00
    1.00000000e+00   1.00000000e+00   1.00000000e+00   1.00000000e+00
    1.00000000e+00   1.00000000e+00   1.00000000e+00   1.00000000e+00
    1.00000000e+00   1.00000000e+00   1.00000000e+00   1.00000000e+00
    1.00000000e+00   1.00000000e+00]
 [  9.86733002e-01   7.90052880e-01   7.90052880e-01   7.90052880e-01
    1.00000000e+00   1.00000000e+00   1.00000000e+00   1.00000000e+00
    1.00000000e+00   1.00000000e+00   1.00000000e+00   1.00000000e+00
    1.00000000e+00   1.00000000e+00   1.00000000e+00   1.00000000e+00
    1.00000000e+00   1.00000000e+00]
 [  0.00000000e+00   6.70206774e-01   0.00000000e+00   0.00000000e+00
    0.00000000e+00   5.08265959e-01   6.58029860e-01   4.75921376e-01
    6.62688942e-01   6.58029860e-01   6.58029860e-01   6.60168014e-01
    6.60168014e-01   6.60168014e-01   6.60168014e-01   6.58654226e-01
    6.64770419e-01   6.58029860e-01]
 [  0.00000000e+00   7.86204923e-01   1.00000000e+00   1.00000000e+00
    1.00000000e+00   1.00000000e+00   1.00000000e+00   1.00000000e+00
    1.00000000e+00   1.00000000e+00   1.00000000e+00   1.00000000e+00
    1.00000000e+00   1.00000000e+00   1.00000000e+00   1.00000000e+00
    1.00000000e+00   1.00000000e+00]
 [  0.00000000e+00   0.00000000e+00   0.00000000e+00   0.00000000e+00
    6.58029860e-01   3.09409394e-01   6.58029860e-01   6.58029860e-01
    6.69937269e-01   5.70050293e-01   5.15308942e-01   3.55575868e-01
    6.66933547e-01   6.58498024e-01   6.58133839e-01   6.60482081e-01
    5.95539033e-01   5.47250234e-01]
 [  0.00000000e+00   0.00000000e+00   0.00000000e+00   0.00000000e+00
    0.00000000e+00   0.00000000e+00   0.00000000e+00   0.00000000e+00
    0.00000000e+00   0.00000000e+00   0.00000000e+00   0.00000000e+00
    0.00000000e+00   0.00000000e+00   0.00000000e+00   0.00000000e+00
    0.00000000e+00   0.00000000e+00]
 [  0.00000000e+00   0.00000000e+00   0.00000000e+00   0.00000000e+00
    0.00000000e+00   0.00000000e+00   0.00000000e+00   0.00000000e+00
    0.00000000e+00   0.00000000e+00   0.00000000e+00   0.00000000e+00
    0.00000000e+00   0.00000000e+00   0.00000000e+00   0.00000000e+00
    0.00000000e+00   0.00000000e+00]]
