G:g7, model:SRN tanh, load all data and stored hidden activations


--------------------------------------------------------------------
Begin DFA extraction with n_state:2
Done fitting takes time: 0.2061
==Minimized===

This DFA has 1 states
States: ['1']
Alphabet: set(['1', '0'])
Starting state: 1
Accepting states: []
Transition function:
	1
1 	1
0 	1
Current state: 1
Currently accepting: False

Precision: 0.0000 Recall: 0.0000 Accuracy: 0.5731 F1: 0.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:3
Done fitting takes time: 0.3925
==Minimized===

This DFA has 1 states
States: ['3']
Alphabet: set(['1', '0'])
Starting state: 3
Accepting states: []
Transition function:
	3
1 	3
0 	3
Current state: 3
Currently accepting: False

Precision: 0.0000 Recall: 0.0000 Accuracy: 0.5731 F1: 0.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:4
Done fitting takes time: 0.3584
==Minimized===

This DFA has 1 states
States: ['4']
Alphabet: set(['1', '0'])
Starting state: 4
Accepting states: []
Transition function:
	4
1 	4
0 	4
Current state: 4
Currently accepting: False

Precision: 0.0000 Recall: 0.0000 Accuracy: 0.5731 F1: 0.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:5
Done fitting takes time: 0.2001
==Minimized===

This DFA has 3 states
States: ['4', '1', '3']
Alphabet: set(['1', '0'])
Starting state: 4
Accepting states: ['1', '3']
Transition function:
	1	3	4
1 	3	4	4
0 	1	4	1
Current state: 4
Currently accepting: False

Precision: 0.3547 Recall: 0.4671 Accuracy: 0.4098 F1: 0.4032


--------------------------------------------------------------------
Begin DFA extraction with n_state:6
Done fitting takes time: 0.1534
==Minimized===

This DFA has 3 states
States: ['1', '3', '6']
Alphabet: set(['1', '0'])
Starting state: 6
Accepting states: ['1']
Transition function:
	1	3	6
1 	3	6	6
0 	3	6	1
Current state: 6
Currently accepting: False

Precision: 0.2169 Recall: 0.1056 Accuracy: 0.4554 F1: 0.1421


--------------------------------------------------------------------
Begin DFA extraction with n_state:7
Done fitting takes time: 0.2335
==Minimized===

This DFA has 4 states
States: ['1', '6', '3', '7']
Alphabet: set(['1', '0'])
Starting state: 6
Accepting states: ['1']
Transition function:
	1	3	6	7
1 	7	6	6	3
0 	7	6	1	3
Current state: 6
Currently accepting: False

Precision: 0.2337 Recall: 0.0927 Accuracy: 0.4830 F1: 0.1328


--------------------------------------------------------------------
Begin DFA extraction with n_state:8
Done fitting takes time: 0.1411
==Minimized===

This DFA has 3 states
States: ['3', '1', '6']
Alphabet: set(['1', '0'])
Starting state: 6
Accepting states: ['1', '6']
Transition function:
	1	3	6
1 	3	3	6
0 	3	3	1
Current state: 6
Currently accepting: True

Precision: 1.0000 Recall: 0.0258 Accuracy: 0.5842 F1: 0.0503


--------------------------------------------------------------------
Begin DFA extraction with n_state:9
Done fitting takes time: 0.1146
==Minimized===

This DFA has 6 states
States: ['7', '8', '1', '2', '3', '6']
Alphabet: set(['1', '0'])
Starting state: 6
Accepting states: ['1', '3', '2', '6']
Transition function:
	1	2	3	6	7	8
1 	7	8	3	6	3	6
0 	7	8	2	1	3	8
Current state: 6
Currently accepting: True

Precision: 0.4759 Recall: 0.7641 Accuracy: 0.5401 F1: 0.5865


--------------------------------------------------------------------
Begin DFA extraction with n_state:10
Done fitting takes time: 0.2201
==Minimized===

This DFA has 8 states
States: ['3', '7', '8', '1', '9', '6', '2', '4']
Alphabet: set(['1', '0'])
Starting state: 6
Accepting states: ['1', '3', '2', '4', '6', '9']
Transition function:
	1	2	3	4	6	7	8	9
1 	7	6	4	4	6	4	6	8
0 	7	9	2	9	1	3	8	8
Current state: 6
Currently accepting: True

Precision: 0.4709 Recall: 0.7793 Accuracy: 0.5321 F1: 0.5871


--------------------------------------------------------------------
Begin DFA extraction with n_state:11
Done fitting takes time: 0.1912
==Minimized===

This DFA has 7 states
States: ['2', '11', '10', '3', '7', '1', '4']
Alphabet: set(['1', '0'])
Starting state: 11
Accepting states: ['11', '10', '2']
Transition function:
	1	10	11	2	3	4	7
1 	7	4	1	11	4	4	3
0 	7	10	1	10	2	4	3
Current state: 11
Currently accepting: True

Precision: 0.5108 Recall: 0.0833 Accuracy: 0.5746 F1: 0.1433


--------------------------------------------------------------------
Begin DFA extraction with n_state:12
Done fitting takes time: 0.3571
==Minimized===

This DFA has 7 states
States: ['11', '12', '8', '4', '7', '1', '5']
Alphabet: set(['1', '0'])
Starting state: 11
Accepting states: ['11', '12', '8']
Transition function:
	1	11	12	4	5	7	8
1 	7	1	8	4	5	4	11
0 	7	1	12	12	5	4	5
Current state: 11
Currently accepting: True

Precision: 0.6495 Recall: 0.5176 Accuracy: 0.6748 F1: 0.5761


--------------------------------------------------------------------
Begin DFA extraction with n_state:13
Done fitting takes time: 0.4305
==Minimized===

This DFA has 11 states
States: ['4', '3', '7', '1', '11', '5', '6', '13', '8', '12', '2']
Alphabet: set(['1', '0'])
Starting state: 11
Accepting states: ['13', '12', '2', '4', '8']
Transition function:
	1	11	12	13	2	3	4	5	6	7	8
1 	7	1	8	6	13	4	4	5	6	3	6
0 	7	1	12	6	12	2	2	5	8	3	5
Current state: 11
Currently accepting: False

Precision: 0.5818 Recall: 0.4425 Accuracy: 0.6263 F1: 0.5027


--------------------------------------------------------------------
Begin DFA extraction with n_state:14
Done fitting takes time: 0.3472
==Minimized===

This DFA has 9 states
States: ['4', '9', '7', '11', '1', '2', '8', '12', '3']
Alphabet: set(['1', '0'])
Starting state: 11
Accepting states: ['2', '4', '9', '8']
Transition function:
	1	11	12	2	3	4	7	8	9
1 	7	1	8	12	4	4	3	11	8
0 	7	1	12	12	2	9	3	11	12
Current state: 11
Currently accepting: False

Precision: 0.5094 Recall: 0.3803 Accuracy: 0.5792 F1: 0.4355


--------------------------------------------------------------------
Begin DFA extraction with n_state:15
Done fitting takes time: 0.4058
==Minimized===

This DFA has 7 states
States: ['12', '8', '4', '7', '1', '11', '15']
Alphabet: set(['1', '0'])
Starting state: 11
Accepting states: ['12', '8']
Transition function:
	1	11	12	15	4	7	8
1 	7	1	8	15	4	4	11
0 	7	1	12	15	12	4	15
Current state: 11
Currently accepting: False

Precision: 0.6162 Recall: 0.3920 Accuracy: 0.6363 F1: 0.4792


--------------------------------------------------------------------
Begin DFA extraction with n_state:16
Done fitting takes time: 0.5278
==Minimized===

This DFA has 9 states
States: ['8', '10', '6', '11', '3', '7', '1', '15', '16']
Alphabet: set(['1', '0'])
Starting state: 16
Accepting states: ['10', '6', '8']
Transition function:
	1	10	11	15	16	3	6	7	8
1 	7	8	6	15	1	15	6	3	11
0 	7	10	15	15	1	10	15	3	11
Current state: 16
Currently accepting: False

Precision: 0.8534 Recall: 0.2664 Accuracy: 0.6673 F1: 0.4061


--------------------------------------------------------------------
Begin DFA extraction with n_state:17
Done fitting takes time: 0.5556
==Minimized===

This DFA has 12 states
States: ['8', '10', '2', '17', '11', '3', '4', '6', '7', '1', '15', '16']
Alphabet: set(['1', '0'])
Starting state: 16
Accepting states: ['10', '17', '2', '4', '6', '8']
Transition function:
	1	10	11	15	16	17	2	3	4	6	7	8
1 	7	8	6	15	1	17	10	4	4	6	3	11
0 	7	10	15	15	1	10	10	2	17	15	3	11
Current state: 16
Currently accepting: False

Precision: 0.6354 Recall: 0.7406 Accuracy: 0.7079 F1: 0.6840


--------------------------------------------------------------------
Begin DFA extraction with n_state:18
Done fitting takes time: 0.3745
==Minimized===

This DFA has 9 states
States: ['13', '2', '6', '11', '3', '7', '1', '10', '16']
Alphabet: set(['1', '0'])
Starting state: 16
Accepting states: ['13', '2', '6']
Transition function:
	1	10	11	13	16	2	3	6	7
1 	7	10	6	11	1	13	10	6	3
0 	7	10	10	11	1	10	2	10	3
Current state: 16
Currently accepting: False

Precision: 0.7059 Recall: 0.0563 Accuracy: 0.5872 F1: 0.1043


--------------------------------------------------------------------
Begin DFA extraction with n_state:19
Done fitting takes time: 0.4376
==Minimized===

This DFA has 9 states
States: ['11', '12', '3', '10', '4', '7', '1', '15', '16']
Alphabet: set(['1', '0'])
Starting state: 16
Accepting states: ['11', '10', '12', '4']
Transition function:
	1	10	11	12	15	16	3	4	7
1 	7	12	15	11	15	1	4	4	3
0 	7	10	15	15	15	1	10	10	3
Current state: 16
Currently accepting: False

Precision: 0.7811 Recall: 0.5446 Accuracy: 0.7405 F1: 0.6418
[ 0.          0.          0.          0.40324215  0.14206788  0.13277311
  0.05034325  0.58648649  0.58709107  0.14328961  0.57609406  0.50266667
  0.43548387  0.47919656  0.40608229  0.68401084  0.10434783  0.6417704 ]


[[ 0.02549247  0.          0.59831461  0.02549247  0.17754011  0.17754011
   0.17754011  0.4518028   0.59831461  0.59831461  0.59831461  1.          1.
   1.          1.          0.84356436  0.84356436  0.92861035]
 [ 0.          0.          0.          0.40324215  0.14206788  0.13277311
   0.05034325  0.58648649  0.58709107  0.14328961  0.57609406  0.50266667
   0.43548387  0.47919656  0.40608229  0.68401084  0.10434783  0.6417704 ]
 [ 0.          0.59831461  0.52976704  0.52976704  0.52976704  1.          1.
   1.          1.          1.          1.          1.          1.          1.
   1.          1.          1.          1.        ]
 [ 0.          0.16774194  0.02549247  0.17754011  0.17754011  1.          1.
   1.          1.          1.          1.          1.          1.          1.
   1.          1.          1.          1.        ]
 [ 0.          0.          0.          0.59831461  0.59831461  0.72225417
   0.72225417  0.72225417  0.72225417  0.86938776  0.86938776  1.          1.
   1.          1.          1.          1.          1.        ]
 [ 0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.        ]
 [ 0.          0.          0.          0.          0.          0.59831461
   0.82639334  1.          0.52722558  1.          1.          1.          1.
   1.          1.          1.          1.          1.        ]]
