G:g5, model:MI tanh, load all data and stored hidden activations


--------------------------------------------------------------------
Begin DFA extraction with n_state:2
Done fitting takes time: 0.6430
==Minimized===

This DFA has 1 states
States: ['1']
Alphabet: set(['1', '0'])
Starting state: 1
Accepting states: ['1']
Transition function:
	1
1 	1
0 	1
Current state: 1
Currently accepting: True

Precision: 0.4903 Recall: 1.0000 Accuracy: 0.4903 F1: 0.6580


--------------------------------------------------------------------
Begin DFA extraction with n_state:3
Done fitting takes time: 0.6661
==Minimized===

This DFA has 1 states
States: ['1']
Alphabet: set(['1', '0'])
Starting state: 1
Accepting states: ['1']
Transition function:
	1
1 	1
0 	1
Current state: 1
Currently accepting: True

Precision: 0.4903 Recall: 1.0000 Accuracy: 0.4903 F1: 0.6580


--------------------------------------------------------------------
Begin DFA extraction with n_state:4
Done fitting takes time: 0.6216
==Minimized===

This DFA has 2 states
States: ['1', '4']
Alphabet: set(['1', '0'])
Starting state: 1
Accepting states: ['1']
Transition function:
	1	4
1 	4	1
0 	4	1
Current state: 1
Currently accepting: True

Precision: 0.5040 Recall: 1.0000 Accuracy: 0.5174 F1: 0.6702


--------------------------------------------------------------------
Begin DFA extraction with n_state:5
Done fitting takes time: 1.2059
==Minimized===

This DFA has 1 states
States: ['3']
Alphabet: set(['1', '0'])
Starting state: 3
Accepting states: ['3']
Transition function:
	3
1 	3
0 	3
Current state: 3
Currently accepting: True

Precision: 0.4903 Recall: 1.0000 Accuracy: 0.4903 F1: 0.6580


--------------------------------------------------------------------
Begin DFA extraction with n_state:6
Done fitting takes time: 1.3586
==Minimized===

This DFA has 4 states
States: ['2', '1', '4', '6']
Alphabet: set(['1', '0'])
Starting state: 6
Accepting states: ['1', '4', '6']
Transition function:
	1	2	4	6
1 	2	1	1	4
0 	2	2	6	6
Current state: 6
Currently accepting: True

Precision: 0.4891 Recall: 0.3810 Accuracy: 0.5013 F1: 0.4283


--------------------------------------------------------------------
Begin DFA extraction with n_state:7
Done fitting takes time: 0.6518
==Minimized===

This DFA has 4 states
States: ['2', '3', '4', '6']
Alphabet: set(['1', '0'])
Starting state: 6
Accepting states: ['3', '4', '6']
Transition function:
	2	3	4	6
1 	3	2	3	4
0 	3	3	3	6
Current state: 6
Currently accepting: True

Precision: 0.4908 Recall: 0.6636 Accuracy: 0.4974 F1: 0.5643


--------------------------------------------------------------------
Begin DFA extraction with n_state:8
Done fitting takes time: 1.6232
==Minimized===

This DFA has 6 states
States: ['1', '6', '2', '4', '5', '8']
Alphabet: set(['1', '0'])
Starting state: 6
Accepting states: ['1', '5', '6', '8']
Transition function:
	1	2	4	5	6	8
1 	2	1	5	8	4	1
0 	2	5	5	2	6	5
Current state: 6
Currently accepting: True

Precision: 0.4946 Recall: 0.7570 Accuracy: 0.5015 F1: 0.5983


--------------------------------------------------------------------
Begin DFA extraction with n_state:9
Done fitting takes time: 1.5372
==Minimized===

This DFA has 8 states
States: ['3', '2', '1', '6', '5', '9', '4', '7']
Alphabet: set(['1', '0'])
Starting state: 6
Accepting states: ['1', '3', '4', '7', '6']
Transition function:
	1	2	3	4	5	6	7	9
1 	2	1	5	1	4	9	4	5
0 	2	7	7	7	3	9	4	5
Current state: 6
Currently accepting: True

Precision: 0.4968 Recall: 0.9976 Accuracy: 0.5034 F1: 0.6633


--------------------------------------------------------------------
Begin DFA extraction with n_state:10
Done fitting takes time: 1.8809
==Minimized===

This DFA has 5 states
States: ['9', '10', '3', '5', '6']
Alphabet: set(['1', '0'])
Starting state: 6
Accepting states: ['10', '3', '5', '6']
Transition function:
	10	3	5	6	9
1 	10	5	9	9	5
0 	10	10	3	9	10
Current state: 6
Currently accepting: True

Precision: 0.4911 Recall: 1.0000 Accuracy: 0.4919 F1: 0.6587


--------------------------------------------------------------------
Begin DFA extraction with n_state:11
Done fitting takes time: 1.8922
==Minimized===

This DFA has 3 states
States: ['9', '11', '6']
Alphabet: set(['1', '0'])
Starting state: 6
Accepting states: ['11', '6']
Transition function:
	11	6	9
1 	11	9	11
0 	11	9	11
Current state: 6
Currently accepting: True

Precision: 0.4905 Recall: 1.0000 Accuracy: 0.4906 F1: 0.6581


--------------------------------------------------------------------
Begin DFA extraction with n_state:12
Done fitting takes time: 1.8935
==Minimized===

This DFA has 8 states
States: ['10', '3', '11', '7', '2', '9', '12', '6']
Alphabet: set(['1', '0'])
Starting state: 6
Accepting states: ['11', '10', '12', '3', '7', '6']
Transition function:
	10	11	12	2	3	6	7	9
1 	12	10	2	12	11	9	10	11
0 	7	3	2	7	7	9	10	11
Current state: 6
Currently accepting: True

Precision: 0.4968 Recall: 1.0000 Accuracy: 0.5034 F1: 0.6639


--------------------------------------------------------------------
Begin DFA extraction with n_state:13
Done fitting takes time: 1.7145
==Minimized===

This DFA has 7 states
States: ['10', '11', '5', '13', '2', '1', '6']
Alphabet: set(['1', '0'])
Starting state: 6
Accepting states: ['11', '10', '1', '5', '6']
Transition function:
	1	10	11	13	2	5	6
1 	2	1	10	5	1	11	13
0 	2	11	10	11	10	11	13
Current state: 6
Currently accepting: True

Precision: 0.4939 Recall: 0.7174 Accuracy: 0.5009 F1: 0.5850


--------------------------------------------------------------------
Begin DFA extraction with n_state:14
Done fitting takes time: 2.1248
==Minimized===

This DFA has 10 states
States: ['10', '11', '14', '5', '7', '12', '13', '9', '1', '6']
Alphabet: set(['1', '0'])
Starting state: 6
Accepting states: ['11', '10', '14', '1', '5', '7', '6']
Transition function:
	1	10	11	12	13	14	5	6	7	9
1 	12	1	10	1	5	5	14	9	14	5
0 	12	11	10	11	7	11	13	13	14	11
Current state: 6
Currently accepting: True

Precision: 0.4961 Recall: 1.0000 Accuracy: 0.5020 F1: 0.6632


--------------------------------------------------------------------
Begin DFA extraction with n_state:15
Done fitting takes time: 1.8136
==Minimized===

This DFA has 5 states
States: ['11', '15', '6', '13', '9']
Alphabet: set(['1', '0'])
Starting state: 6
Accepting states: ['11']
Transition function:
	11	13	15	6	9
1 	11	15	11	9	15
0 	11	11	11	13	15
Current state: 6
Currently accepting: False

Precision: 0.4905 Recall: 0.9998 Accuracy: 0.4907 F1: 0.6581


--------------------------------------------------------------------
Begin DFA extraction with n_state:16
Done fitting takes time: 0.6916
==Minimized===

This DFA has 10 states
States: ['4', '5', '12', '11', '13', '15', '2', '9', '1', '6']
Alphabet: set(['1', '0'])
Starting state: 6
Accepting states: ['11', '13', '12', '15', '1', '5', '4', '6']
Transition function:
	1	11	12	13	15	2	4	5	6	9
1 	2	12	5	15	11	5	1	12	9	15
0 	2	11	11	15	12	4	11	4	13	15
Current state: 6
Currently accepting: True

Precision: 0.4903 Recall: 0.9501 Accuracy: 0.4912 F1: 0.6468


--------------------------------------------------------------------
Begin DFA extraction with n_state:17
Done fitting takes time: 2.0070
==Minimized===

This DFA has 10 states
States: ['11', '2', '13', '15', '9', '6', '1', '5', '10', '3']
Alphabet: set(['1', '0'])
Starting state: 6
Accepting states: ['11', '10', '1', '3', '5', '6']
Transition function:
	1	10	11	13	15	2	3	5	6	9
1 	2	1	10	15	13	1	5	2	9	15
0 	2	11	10	11	3	10	11	10	13	15
Current state: 6
Currently accepting: True

Precision: 0.4925 Recall: 0.7364 Accuracy: 0.4986 F1: 0.5902


--------------------------------------------------------------------
Begin DFA extraction with n_state:18
Done fitting takes time: 1.9129
==Minimized===

This DFA has 4 states
States: ['11', '13', '6', '9']
Alphabet: set(['1', '0'])
Starting state: 6
Accepting states: ['11']
Transition function:
	11	13	6	9
1 	11	13	9	13
0 	11	11	13	13
Current state: 6
Currently accepting: False

Precision: 0.4910 Recall: 0.9986 Accuracy: 0.4918 F1: 0.6583


--------------------------------------------------------------------
Begin DFA extraction with n_state:19
Done fitting takes time: 2.2619
==Minimized===

This DFA has 4 states
States: ['11', '19', '13', '15']
Alphabet: set(['1', '0'])
Starting state: 19
Accepting states: ['11', '19']
Transition function:
	11	13	15	19
1 	11	15	11	13
0 	11	15	13	13
Current state: 19
Currently accepting: True

Precision: 0.4909 Recall: 0.9784 Accuracy: 0.4919 F1: 0.6538
[ 0.65802986  0.65802986  0.67020677  0.65802986  0.42834008  0.56425436
  0.59829222  0.66331418  0.65870631  0.65813384  0.66385081  0.58502203
  0.66321656  0.65813182  0.64677999  0.59020495  0.65833004  0.65377828]


[[ 0.          0.          0.          0.          0.67020677  0.67020677
   0.67020677  0.67020677  0.67020677  0.67020677  0.67020677  0.67020677
   0.67020677  0.50700214  0.67020677  0.42376402  0.51388559  0.67015286]
 [ 0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.55622061  0.          0.65004696  0.          0.
   0.          0.          0.          0.        ]
 [ 0.          0.50826596  1.          1.          1.          1.          1.
   1.          1.          1.          1.          1.          1.          1.
   1.          1.          1.          1.        ]
 [ 0.986733    0.79005288  0.79005288  1.          1.          1.          1.
   1.          1.          1.          1.          1.          1.          1.
   1.          1.          1.          1.        ]
 [ 0.          0.          0.          0.33999685  0.5781043   0.5781043
   0.5781043   0.9860322   0.99676918  0.99676918  0.99676918  0.99676918
   0.99676918  1.          1.          1.          1.          1.        ]
 [ 0.          0.78620492  0.9860322   0.81078815  0.88478659  1.          1.
   1.          1.          1.          1.          1.          1.          1.
   1.          1.          1.          1.        ]
 [ 0.65802986  0.65802986  0.67020677  0.65802986  0.42834008  0.56425436
   0.59829222  0.66331418  0.65870631  0.65813384  0.66385081  0.58502203
   0.66321656  0.65813182  0.64677999  0.59020495  0.65833004  0.65377828]
 [ 0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.        ]
 [ 0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.        ]]
