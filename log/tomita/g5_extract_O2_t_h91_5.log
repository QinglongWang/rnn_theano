G:g5, model:O2 tanh, load all data and stored hidden activations


--------------------------------------------------------------------
Begin DFA extraction with n_state:2
Done fitting takes time: 1.0562
==Minimized===

This DFA has 2 states
States: ['1', '2']
Alphabet: set(['1', '0'])
Starting state: 1
Accepting states: ['1']
Transition function:
	1	2
1 	1	2
0 	2	1
Current state: 1
Currently accepting: True

Precision: 0.9738 Recall: 1.0000 Accuracy: 0.9868 F1: 0.9867


--------------------------------------------------------------------
Begin DFA extraction with n_state:3
Done fitting takes time: 0.4968
==Minimized===

This DFA has 3 states
States: ['1', '3', '2']
Alphabet: set(['1', '0'])
Starting state: 1
Accepting states: ['1']
Transition function:
	1	2	3
1 	3	2	1
0 	2	1	2
Current state: 1
Currently accepting: True

Precision: 0.9760 Recall: 0.6636 Accuracy: 0.8271 F1: 0.7901


--------------------------------------------------------------------
Begin DFA extraction with n_state:4
Done fitting takes time: 0.5116
==Minimized===

This DFA has 3 states
States: ['1', '3', '2']
Alphabet: set(['1', '0'])
Starting state: 1
Accepting states: ['1']
Transition function:
	1	2	3
1 	3	2	1
0 	2	1	2
Current state: 1
Currently accepting: True

Precision: 0.9760 Recall: 0.6636 Accuracy: 0.8271 F1: 0.7901


--------------------------------------------------------------------
Begin DFA extraction with n_state:5
Done fitting takes time: 0.9019
==Minimized===

This DFA has 4 states
States: ['1', '3', '2', '5']
Alphabet: set(['1', '0'])
Starting state: 1
Accepting states: ['1']
Transition function:
	1	2	3	5
1 	3	5	1	2
0 	2	1	5	3
Current state: 1
Currently accepting: True

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:6
Done fitting takes time: 0.5844
==Minimized===

This DFA has 4 states
States: ['1', '3', '2', '5']
Alphabet: set(['1', '0'])
Starting state: 1
Accepting states: ['1']
Transition function:
	1	2	3	5
1 	3	5	1	2
0 	2	1	5	3
Current state: 1
Currently accepting: True

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:7
Done fitting takes time: 0.5523
==Minimized===

This DFA has 4 states
States: ['1', '3', '2', '5']
Alphabet: set(['1', '0'])
Starting state: 1
Accepting states: ['1']
Transition function:
	1	2	3	5
1 	3	5	1	2
0 	2	1	5	3
Current state: 1
Currently accepting: True

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:8
Done fitting takes time: 0.5285
==Minimized===

This DFA has 4 states
States: ['1', '3', '2', '5']
Alphabet: set(['1', '0'])
Starting state: 1
Accepting states: ['1']
Transition function:
	1	2	3	5
1 	3	5	1	2
0 	2	1	5	3
Current state: 1
Currently accepting: True

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:9
Done fitting takes time: 0.5537
==Minimized===

This DFA has 4 states
States: ['1', '3', '2', '5']
Alphabet: set(['1', '0'])
Starting state: 1
Accepting states: ['1']
Transition function:
	1	2	3	5
1 	3	5	1	2
0 	2	1	5	3
Current state: 1
Currently accepting: True

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:10
Done fitting takes time: 0.8714
==Minimized===

This DFA has 4 states
States: ['1', '3', '10', '5']
Alphabet: set(['1', '0'])
Starting state: 1
Accepting states: ['1']
Transition function:
	1	10	3	5
1 	3	5	1	10
0 	10	1	5	3
Current state: 1
Currently accepting: True

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:11
Done fitting takes time: 0.5564
==Minimized===

This DFA has 4 states
States: ['1', '3', '10', '5']
Alphabet: set(['1', '0'])
Starting state: 1
Accepting states: ['1']
Transition function:
	1	10	3	5
1 	3	5	1	10
0 	10	1	5	3
Current state: 1
Currently accepting: True

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:12
Done fitting takes time: 0.6027
==Minimized===

This DFA has 4 states
States: ['1', '3', '10', '12']
Alphabet: set(['1', '0'])
Starting state: 1
Accepting states: ['1']
Transition function:
	1	10	12	3
1 	3	12	10	1
0 	10	1	3	12
Current state: 1
Currently accepting: True

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:13
Done fitting takes time: 1.3629
==Minimized===

This DFA has 5 states
States: ['1', '3', '13', '10', '12']
Alphabet: set(['1', '0'])
Starting state: 13
Accepting states: ['1']
Transition function:
	1	10	12	13	3
1 	3	12	10	3	1
0 	10	1	3	10	12
Current state: 13
Currently accepting: False

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:14
Done fitting takes time: 1.8465
==Minimized===

This DFA has 5 states
States: ['1', '3', '13', '10', '12']
Alphabet: set(['1', '0'])
Starting state: 13
Accepting states: ['1']
Transition function:
	1	10	12	13	3
1 	3	12	10	3	1
0 	10	1	3	10	12
Current state: 13
Currently accepting: False

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:15
Done fitting takes time: 1.8306
==Minimized===

This DFA has 5 states
States: ['1', '3', '13', '10', '12']
Alphabet: set(['1', '0'])
Starting state: 13
Accepting states: ['1']
Transition function:
	1	10	12	13	3
1 	3	12	10	3	1
0 	10	1	3	10	12
Current state: 13
Currently accepting: False

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:16
Done fitting takes time: 1.2816
==Minimized===

This DFA has 5 states
States: ['1', '3', '16', '10', '12']
Alphabet: set(['1', '0'])
Starting state: 16
Accepting states: ['1']
Transition function:
	1	10	12	16	3
1 	3	12	10	3	1
0 	10	1	3	10	12
Current state: 16
Currently accepting: False

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:17
Done fitting takes time: 1.8412
==Minimized===

This DFA has 5 states
States: ['1', '3', '16', '10', '12']
Alphabet: set(['1', '0'])
Starting state: 16
Accepting states: ['1']
Transition function:
	1	10	12	16	3
1 	3	12	10	3	1
0 	10	1	3	10	12
Current state: 16
Currently accepting: False

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:18
Done fitting takes time: 0.5713
==Minimized===

This DFA has 5 states
States: ['1', '3', '16', '10', '12']
Alphabet: set(['1', '0'])
Starting state: 16
Accepting states: ['1']
Transition function:
	1	10	12	16	3
1 	3	12	10	3	1
0 	10	1	3	10	12
Current state: 16
Currently accepting: False

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:19
Done fitting takes time: 0.5853
==Minimized===

This DFA has 5 states
States: ['1', '3', '16', '10', '12']
Alphabet: set(['1', '0'])
Starting state: 16
Accepting states: ['1']
Transition function:
	1	10	12	16	3
1 	3	12	10	3	1
0 	10	1	3	10	12
Current state: 16
Currently accepting: False

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000
[ 0.986733    0.79005288  0.79005288  1.          1.          1.          1.
  1.          1.          1.          1.          1.          1.          1.
  1.          1.          1.          1.        ]


[[ 0.          0.67020677  0.          0.          0.          0.          0.
   0.          0.          0.53567015  0.66448766  0.08232446  0.49600194
   0.66790382  0.66448766  0.59321365  0.30312185  0.09715897]
 [ 0.          0.          0.          0.          0.          0.          0.
   0.35074045  0.00287494  0.          0.          0.          0.          0.
   0.          0.42335153  0.          0.        ]
 [ 0.986733    0.50826596  1.          1.          1.          1.          1.
   1.          1.          1.          1.          1.          1.          1.
   1.          1.          1.          1.        ]
 [ 0.986733    0.79005288  0.79005288  1.          1.          1.          1.
   1.          1.          1.          1.          1.          1.          1.
   1.          1.          1.          1.        ]
 [ 0.40714796  0.67020677  0.67020677  0.67020677  0.67020677  0.67020677
   0.66448628  0.55066887  0.55066887  0.55066887  0.53241431  0.48026094
   0.61716262  0.61879658  0.67020677  0.66395359  0.74399489  0.77136772]
 [ 0.9860322   0.78620492  0.78620492  1.          1.          1.          1.
   1.          1.          1.          1.          1.          1.          1.
   1.          1.          1.          1.        ]
 [ 0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.        ]
 [ 0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.        ]
 [ 0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.        ]]
