G:g5, model:MI tanh, load all data and stored hidden activations


--------------------------------------------------------------------
Begin DFA extraction with n_state:2
Done fitting takes time: 1.2152
==Minimized===

This DFA has 1 states
States: ['1']
Alphabet: set(['1', '0'])
Starting state: 1
Accepting states: []
Transition function:
	1
1 	1
0 	1
Current state: 1
Currently accepting: False

Precision: 0.0000 Recall: 0.0000 Accuracy: 0.5097 F1: 0.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:3
Done fitting takes time: 1.1429
==Minimized===

This DFA has 1 states
States: ['3']
Alphabet: set(['1', '0'])
Starting state: 3
Accepting states: []
Transition function:
	3
1 	3
0 	3
Current state: 3
Currently accepting: False

Precision: 0.0000 Recall: 0.0000 Accuracy: 0.5097 F1: 0.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:4
Done fitting takes time: 1.3728
==Minimized===

This DFA has 3 states
States: ['4', '3', '2']
Alphabet: set(['1', '0'])
Starting state: 2
Accepting states: ['4']
Transition function:
	2	3	4
1 	3	2	3
0 	3	4	3
Current state: 2
Currently accepting: False

Precision: 0.5109 Recall: 0.5056 Accuracy: 0.5202 F1: 0.5083


--------------------------------------------------------------------
Begin DFA extraction with n_state:5
Done fitting takes time: 1.2571
==Minimized===

This DFA has 4 states
States: ['3', '4', '2', '5']
Alphabet: set(['1', '0'])
Starting state: 2
Accepting states: ['3', '4']
Transition function:
	2	3	4	5
1 	3	2	5	2
0 	5	4	5	4
Current state: 2
Currently accepting: False

Precision: 0.5032 Recall: 0.5056 Accuracy: 0.5128 F1: 0.5044


--------------------------------------------------------------------
Begin DFA extraction with n_state:6
Done fitting takes time: 1.9046
==Minimized===

This DFA has 6 states
States: ['4', '1', '3', '2', '5', '6']
Alphabet: set(['1', '0'])
Starting state: 2
Accepting states: ['1', '3', '4']
Transition function:
	1	2	3	4	5	6
1 	3	3	1	6	2	1
0 	6	5	4	6	2	4
Current state: 2
Currently accepting: False

Precision: 0.5002 Recall: 0.9899 Accuracy: 0.5101 F1: 0.6646


--------------------------------------------------------------------
Begin DFA extraction with n_state:7
Done fitting takes time: 1.6079
==Minimized===

This DFA has 2 states
States: ['2', '5']
Alphabet: set(['1', '0'])
Starting state: 2
Accepting states: ['2']
Transition function:
	2	5
1 	5	2
0 	5	2
Current state: 2
Currently accepting: True

Precision: 0.5040 Recall: 1.0000 Accuracy: 0.5174 F1: 0.6702


--------------------------------------------------------------------
Begin DFA extraction with n_state:8
Done fitting takes time: 2.0072
==Minimized===

This DFA has 4 states
States: ['6', '4', '2', '5']
Alphabet: set(['1', '0'])
Starting state: 2
Accepting states: ['2', '5', '4']
Transition function:
	2	4	5	6
1 	5	6	2	2
0 	5	6	4	4
Current state: 2
Currently accepting: True

Precision: 0.4968 Recall: 1.0000 Accuracy: 0.5033 F1: 0.6638


--------------------------------------------------------------------
Begin DFA extraction with n_state:9
Done fitting takes time: 0.6709
==Minimized===

This DFA has 6 states
States: ['4', '2', '5', '9', '7', '6']
Alphabet: set(['1', '0'])
Starting state: 2
Accepting states: ['2', '5', '4', '9']
Transition function:
	2	4	5	6	7	9
1 	9	6	2	2	2	2
0 	5	6	7	4	9	4
Current state: 2
Currently accepting: True

Precision: 0.4947 Recall: 0.8110 Accuracy: 0.5012 F1: 0.6146


--------------------------------------------------------------------
Begin DFA extraction with n_state:10
Done fitting takes time: 1.8748
==Minimized===

This DFA has 1 states
States: ['10']
Alphabet: set(['1', '0'])
Starting state: 10
Accepting states: ['10']
Transition function:
	10
1 	10
0 	10
Current state: 10
Currently accepting: True

Precision: 0.4903 Recall: 1.0000 Accuracy: 0.4903 F1: 0.6580


--------------------------------------------------------------------
Begin DFA extraction with n_state:11
Done fitting takes time: 1.8511
==Minimized===

This DFA has 1 states
States: ['11']
Alphabet: set(['1', '0'])
Starting state: 11
Accepting states: ['11']
Transition function:
	11
1 	11
0 	11
Current state: 11
Currently accepting: True

Precision: 0.4903 Recall: 1.0000 Accuracy: 0.4903 F1: 0.6580


--------------------------------------------------------------------
Begin DFA extraction with n_state:12
Done fitting takes time: 2.0919
==Minimized===

This DFA has 5 states
States: ['10', '2', '8', '1', '7']
Alphabet: set(['1', '0'])
Starting state: 2
Accepting states: ['10', '2']
Transition function:
	1	10	2	7	8
1 	7	10	1	8	2
0 	7	10	7	8	10
Current state: 2
Currently accepting: True

Precision: 0.4913 Recall: 0.9357 Accuracy: 0.4934 F1: 0.6443


--------------------------------------------------------------------
Begin DFA extraction with n_state:13
Done fitting takes time: 2.2165
==Minimized===

This DFA has 13 states
States: ['8', '12', '7', '10', '1', '3', '4', '6', '13', '5', '9', '11', '2']
Alphabet: set(['1', '0'])
Starting state: 2
Accepting states: ['11', '10', '13', '12', '2', '5', '9', '8']
Transition function:
	1	10	11	12	13	2	3	4	5	6	7	8	9
1 	7	9	3	6	9	1	4	9	13	13	11	4	13
0 	7	8	3	6	5	7	4	5	10	10	7	12	12
Current state: 2
Currently accepting: True

Precision: 0.4901 Recall: 0.8339 Accuracy: 0.4932 F1: 0.6174


--------------------------------------------------------------------
Begin DFA extraction with n_state:14
Done fitting takes time: 1.9965
==Minimized===

This DFA has 12 states
States: ['10', '12', '14', '3', '6', '13', '11', '4', '1', '7', '5', '9']
Alphabet: set(['1', '0'])
Starting state: 14
Accepting states: ['10', '13', '12', '14', '5', '4', '9']
Transition function:
	1	10	11	12	13	14	3	4	5	6	7	9
1 	7	6	3	6	9	1	13	9	13	13	11	13
0 	7	9	3	6	5	7	4	6	10	10	7	12
Current state: 14
Currently accepting: True

Precision: 0.4878 Recall: 0.8122 Accuracy: 0.4898 F1: 0.6095


--------------------------------------------------------------------
Begin DFA extraction with n_state:15
Done fitting takes time: 2.1485
==Minimized===

This DFA has 4 states
States: ['11', '14', '1', '7']
Alphabet: set(['1', '0'])
Starting state: 14
Accepting states: ['11', '14']
Transition function:
	1	11	14	7
1 	7	11	1	11
0 	7	11	7	7
Current state: 14
Currently accepting: True

Precision: 0.4904 Recall: 0.9974 Accuracy: 0.4905 F1: 0.6575


--------------------------------------------------------------------
Begin DFA extraction with n_state:16
Done fitting takes time: 2.6509
==Minimized===

This DFA has 11 states
States: ['12', '15', '6', '8', '1', '10', '13', '2', '7', '16', '5']
Alphabet: set(['1', '0'])
Starting state: 16
Accepting states: ['10', '13', '12', '15', '16', '5', '6', '8']
Transition function:
	1	10	12	13	15	16	2	5	6	7	8
1 	7	5	6	5	13	1	5	2	13	8	10
0 	7	6	6	15	2	7	15	2	10	7	12
Current state: 16
Currently accepting: True

Precision: 0.4894 Recall: 0.6334 Accuracy: 0.4962 F1: 0.5522


--------------------------------------------------------------------
Begin DFA extraction with n_state:17
Done fitting takes time: 1.5843
==Minimized===

This DFA has 5 states
States: ['11', '16', '8', '17', '7']
Alphabet: set(['1', '0'])
Starting state: 16
Accepting states: ['11', '16']
Transition function:
	11	16	17	7	8
1 	11	17	7	8	11
0 	11	17	7	8	11
Current state: 16
Currently accepting: True

Precision: 0.4909 Recall: 0.9995 Accuracy: 0.4915 F1: 0.6584


--------------------------------------------------------------------
Begin DFA extraction with n_state:18
Done fitting takes time: 1.7109
==Minimized===

This DFA has 5 states
States: ['13', '8', '7', '17', '16']
Alphabet: set(['1', '0'])
Starting state: 16
Accepting states: ['13']
Transition function:
	13	16	17	7	8
1 	13	17	7	8	13
0 	13	17	7	8	13
Current state: 16
Currently accepting: False

Precision: 0.4909 Recall: 0.9995 Accuracy: 0.4915 F1: 0.6584


--------------------------------------------------------------------
Begin DFA extraction with n_state:19
Done fitting takes time: 2.2121
==Minimized===

This DFA has 5 states
States: ['10', '9', '7', '17', '16']
Alphabet: set(['1', '0'])
Starting state: 16
Accepting states: ['10']
Transition function:
	10	16	17	7	9
1 	10	17	7	9	10
0 	10	17	7	10	10
Current state: 16
Currently accepting: False

Precision: 0.4907 Recall: 0.9995 Accuracy: 0.4911 F1: 0.6582
[ 0.          0.          0.50826596  0.50443114  0.66462481  0.67020677
  0.66379791  0.61457291  0.65802986  0.65802986  0.64429197  0.61736735
  0.60954955  0.65748655  0.55217164  0.65844207  0.65844207  0.65823385]


[[ 0.          0.67020677  0.          0.          0.          0.          0.
   0.          0.          0.53567015  0.66448766  0.08232446  0.49600194
   0.66790382  0.66448766  0.59321365  0.30312185  0.09715897]
 [ 0.          0.          0.          0.          0.          0.          0.
   0.35074045  0.00287494  0.          0.          0.          0.          0.
   0.          0.42335153  0.          0.        ]
 [ 0.986733    0.50826596  1.          1.          1.          1.          1.
   1.          1.          1.          1.          1.          1.          1.
   1.          1.          1.          1.        ]
 [ 0.986733    0.79005288  0.79005288  1.          1.          1.          1.
   1.          1.          1.          1.          1.          1.          1.
   1.          1.          1.          1.        ]
 [ 0.40714796  0.67020677  0.67020677  0.67020677  0.67020677  0.67020677
   0.66448628  0.55066887  0.55066887  0.55066887  0.53241431  0.48026094
   0.61716262  0.61879658  0.67020677  0.66395359  0.74399489  0.77136772]
 [ 0.9860322   0.78620492  0.78620492  1.          1.          1.          1.
   1.          1.          1.          1.          1.          1.          1.
   1.          1.          1.          1.        ]
 [ 0.          0.          0.50826596  0.50443114  0.66462481  0.67020677
   0.66379791  0.61457291  0.65802986  0.65802986  0.64429197  0.61736735
   0.60954955  0.65748655  0.55217164  0.65844207  0.65844207  0.65823385]
 [ 0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.        ]
 [ 0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.        ]]
