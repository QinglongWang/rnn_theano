G:g6, model:MI tanh, load all data and stored hidden activations


--------------------------------------------------------------------
Begin DFA extraction with n_state:2
Done fitting takes time: 1.3951
==Minimized===

This DFA has 1 states
States: ['1']
Alphabet: set(['1', '0'])
Starting state: 1
Accepting states: []
Transition function:
	1
1 	1
0 	1
Current state: 1
Currently accepting: False

Precision: 0.0000 Recall: 0.0000 Accuracy: 0.5177 F1: 0.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:3
Done fitting takes time: 1.3353
==Minimized===

This DFA has 2 states
States: ['1', '3']
Alphabet: set(['1', '0'])
Starting state: 1
Accepting states: ['1']
Transition function:
	1	3
1 	1	3
0 	3	3
Current state: 1
Currently accepting: True

Precision: 0.3636 Recall: 0.0007 Accuracy: 0.5175 F1: 0.0014


--------------------------------------------------------------------
Begin DFA extraction with n_state:4
Done fitting takes time: 1.7205
==Minimized===

This DFA has 3 states
States: ['3', '1', '2']
Alphabet: set(['1', '0'])
Starting state: 1
Accepting states: ['1', '2']
Transition function:
	1	2	3
1 	1	3	2
0 	2	3	2
Current state: 1
Currently accepting: True

Precision: 0.4859 Recall: 0.5119 Accuracy: 0.5034 F1: 0.4986


--------------------------------------------------------------------
Begin DFA extraction with n_state:5
Done fitting takes time: 2.0445
==Minimized===

This DFA has 1 states
States: ['1']
Alphabet: set(['1', '0'])
Starting state: 1
Accepting states: ['1']
Transition function:
	1
1 	1
0 	1
Current state: 1
Currently accepting: True

Precision: 0.4823 Recall: 1.0000 Accuracy: 0.4823 F1: 0.6507


--------------------------------------------------------------------
Begin DFA extraction with n_state:6
Done fitting takes time: 1.8938
==Minimized===

This DFA has 4 states
States: ['2', '1', '3', '4']
Alphabet: set(['1', '0'])
Starting state: 1
Accepting states: ['1', '3', '4']
Transition function:
	1	2	3	4
1 	2	2	4	1
0 	4	2	2	3
Current state: 1
Currently accepting: True

Precision: 0.3917 Recall: 0.0082 Accuracy: 0.5155 F1: 0.0160


--------------------------------------------------------------------
Begin DFA extraction with n_state:7
Done fitting takes time: 1.9382
==Minimized===

This DFA has 7 states
States: ['2', '1', '7', '3', '5', '4', '6']
Alphabet: set(['1', '0'])
Starting state: 1
Accepting states: ['1', '3', '5', '4', '7', '6']
Transition function:
	1	2	3	4	5	6	7
1 	2	2	4	1	4	1	2
0 	5	2	2	3	6	7	2
Current state: 1
Currently accepting: True

Precision: 0.5000 Recall: 0.0129 Accuracy: 0.5177 F1: 0.0251


--------------------------------------------------------------------
Begin DFA extraction with n_state:8
Done fitting takes time: 2.4104
==Minimized===

This DFA has 1 states
States: ['1']
Alphabet: set(['1', '0'])
Starting state: 1
Accepting states: ['1']
Transition function:
	1
1 	1
0 	1
Current state: 1
Currently accepting: True

Precision: 0.4823 Recall: 1.0000 Accuracy: 0.4823 F1: 0.6507


--------------------------------------------------------------------
Begin DFA extraction with n_state:9
Done fitting takes time: 2.3580
==Minimized===

This DFA has 3 states
States: ['5', '1', '3']
Alphabet: set(['1', '0'])
Starting state: 1
Accepting states: ['1', '3']
Transition function:
	1	3	5
1 	1	3	3
0 	5	3	3
Current state: 1
Currently accepting: True

Precision: 0.4823 Recall: 0.9993 Accuracy: 0.4824 F1: 0.6506


--------------------------------------------------------------------
Begin DFA extraction with n_state:10
Done fitting takes time: 2.4137
==Minimized===

This DFA has 3 states
States: ['5', '10', '1']
Alphabet: set(['1', '0'])
Starting state: 10
Accepting states: ['10', '1']
Transition function:
	1	10	5
1 	1	1	1
0 	1	5	1
Current state: 10
Currently accepting: True

Precision: 0.4823 Recall: 1.0000 Accuracy: 0.4823 F1: 0.6508


--------------------------------------------------------------------
Begin DFA extraction with n_state:11
Done fitting takes time: 2.3663
==Minimized===

This DFA has 6 states
States: ['5', '10', '11', '1', '2', '9']
Alphabet: set(['1', '0'])
Starting state: 10
Accepting states: ['11', '10', '1', '2', '9']
Transition function:
	1	10	11	2	5	9
1 	11	1	10	1	11	1
0 	2	5	1	9	2	1
Current state: 10
Currently accepting: True

Precision: 0.4818 Recall: 0.9491 Accuracy: 0.4831 F1: 0.6391


--------------------------------------------------------------------
Begin DFA extraction with n_state:12
Done fitting takes time: 2.3398
==Minimized===

This DFA has 5 states
States: ['1', '10', '12', '5', '6']
Alphabet: set(['1', '0'])
Starting state: 10
Accepting states: ['10', '12', '1']
Transition function:
	1	10	12	5	6
1 	6	1	12	12	1
0 	6	5	12	6	12
Current state: 10
Currently accepting: True

Precision: 0.4830 Recall: 0.9927 Accuracy: 0.4841 F1: 0.6499


--------------------------------------------------------------------
Begin DFA extraction with n_state:13
Done fitting takes time: 2.4746
==Minimized===

This DFA has 1 states
States: ['11']
Alphabet: set(['1', '0'])
Starting state: 11
Accepting states: ['11']
Transition function:
	11
1 	11
0 	11
Current state: 11
Currently accepting: True

Precision: 0.4823 Recall: 1.0000 Accuracy: 0.4823 F1: 0.6507


--------------------------------------------------------------------
Begin DFA extraction with n_state:14
Done fitting takes time: 0.9693
==Minimized===

This DFA has 12 states
States: ['7', '8', '5', '10', '11', '13', '6', '14', '1', '4', '2', '9']
Alphabet: set(['1', '0'])
Starting state: 10
Accepting states: ['11', '10', '13', '14', '1', '2', '5', '4', '6', '9', '8']
Transition function:
	1	10	11	13	14	2	4	5	6	7	8	9
1 	11	1	10	4	11	14	1	8	9	4	7	14
0 	6	5	13	2	2	9	13	6	13	2	7	13
Current state: 10
Currently accepting: True

Precision: 0.4822 Recall: 0.9881 Accuracy: 0.4826 F1: 0.6481


--------------------------------------------------------------------
Begin DFA extraction with n_state:15
Done fitting takes time: 2.7584
==Minimized===

This DFA has 5 states
States: ['1', '11', '10', '5', '6']
Alphabet: set(['1', '0'])
Starting state: 10
Accepting states: ['11', '10', '1']
Transition function:
	1	10	11	5	6
1 	6	1	11	11	11
0 	6	5	11	6	11
Current state: 10
Currently accepting: True

Precision: 0.4823 Recall: 0.9998 Accuracy: 0.4824 F1: 0.6507


--------------------------------------------------------------------
Begin DFA extraction with n_state:16
Done fitting takes time: 2.9088
==Minimized===

This DFA has 6 states
States: ['1', '13', '10', '8', '5', '6']
Alphabet: set(['1', '0'])
Starting state: 10
Accepting states: ['10', '13', '1', '8']
Transition function:
	1	10	13	5	6	8
1 	6	1	13	8	13	1
0 	6	5	13	6	13	13
Current state: 10
Currently accepting: True

Precision: 0.4823 Recall: 0.9997 Accuracy: 0.4824 F1: 0.6507


--------------------------------------------------------------------
Begin DFA extraction with n_state:17
Done fitting takes time: 2.7713
==Minimized===

This DFA has 5 states
States: ['11', '1', '7', '10', '17']
Alphabet: set(['1', '0'])
Starting state: 10
Accepting states: ['11', '1']
Transition function:
	1	10	11	17	7
1 	7	1	11	1	11
0 	7	17	11	7	11
Current state: 10
Currently accepting: False

Precision: 0.4824 Recall: 0.9998 Accuracy: 0.4826 F1: 0.6508


--------------------------------------------------------------------
Begin DFA extraction with n_state:18
Done fitting takes time: 3.2786
==Minimized===

This DFA has 6 states
States: ['18', '13', '8', '10', '17', '7']
Alphabet: set(['1', '0'])
Starting state: 10
Accepting states: ['13', '18', '8']
Transition function:
	10	13	17	18	7	8
1 	18	13	8	7	13	18
0 	17	13	7	7	13	7
Current state: 10
Currently accepting: False

Precision: 0.4824 Recall: 0.9997 Accuracy: 0.4825 F1: 0.6507


--------------------------------------------------------------------
Begin DFA extraction with n_state:19
Done fitting takes time: 3.1532
==Minimized===

This DFA has 1 states
States: ['19']
Alphabet: set(['1', '0'])
Starting state: 19
Accepting states: []
Transition function:
	19
1 	19
0 	19
Current state: 19
Currently accepting: False

Precision: 0.0000 Recall: 0.0000 Accuracy: 0.5177 F1: 0.0000
[ 0.          0.00139155  0.49855712  0.65071445  0.01604643  0.02514441
  0.65071445  0.65062975  0.65075135  0.63912686  0.64985739  0.65071445
  0.64814815  0.65074864  0.65070902  0.65082246  0.65074593  0.        ]


[[ 0.39490446  0.          0.          0.06104887  0.53002875  0.51498371
   0.44413093  0.48168179  0.48168179  0.31035685  0.34457672  0.48168179
   0.31622939  0.41508319  0.11940299  0.05116432  0.35334668  0.50116318]
 [ 0.          0.          0.          0.65071445  0.          0.65071445
   0.65071445  0.65071445  0.65071445  0.64838248  0.65071445  0.65071445
   0.49562081  0.65059966  0.64966104  0.65059966  0.64966104  0.65059966]
 [ 0.          1.          1.          1.          1.          1.          1.
   1.          1.          1.          1.          1.          1.          1.
   1.          1.          1.          1.        ]
 [ 0.          0.          1.          1.          1.          1.          1.
   1.          1.          1.          1.          1.          1.          1.
   1.          1.          1.          1.        ]
 [ 0.          0.48168179  1.          1.          1.          1.          1.
   1.          1.          1.          1.          1.          1.          1.
   1.          1.          1.          1.        ]
 [ 0.          1.          1.          1.          1.          1.          1.
   1.          1.          1.          1.          1.          1.          1.
   1.          1.          1.          1.        ]
 [ 0.          0.00139155  0.49855712  0.65071445  0.01604643  0.02514441
   0.65071445  0.65062975  0.65075135  0.63912686  0.64985739  0.65071445
   0.64814815  0.65074864  0.65070902  0.65082246  0.65074593  0.        ]
 [ 0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.        ]
 [ 0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.        ]]
