G:g2, model:GRU tanh, load all data and stored hidden activations


--------------------------------------------------------------------
Begin DFA extraction with n_state:2
Done fitting takes time: 0.0392
==Minimized===

This DFA has 1 states
States: ['2']
Alphabet: set(['1', '0'])
Starting state: 2
Accepting states: []
Transition function:
	2
1 	2
0 	2
Current state: 2
Currently accepting: False

Precision: 0.0000 Recall: 0.0000 Accuracy: 0.9869 F1: 0.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:3
Done fitting takes time: 0.0438
==Minimized===

This DFA has 1 states
States: ['2']
Alphabet: set(['1', '0'])
Starting state: 2
Accepting states: []
Transition function:
	2
1 	2
0 	2
Current state: 2
Currently accepting: False

Precision: 0.0000 Recall: 0.0000 Accuracy: 0.9869 F1: 0.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:4
Done fitting takes time: 0.0431
==Minimized===

This DFA has 1 states
States: ['4']
Alphabet: set(['1', '0'])
Starting state: 4
Accepting states: []
Transition function:
	4
1 	4
0 	4
Current state: 4
Currently accepting: False

Precision: 0.0000 Recall: 0.0000 Accuracy: 0.9869 F1: 0.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:5
Done fitting takes time: 0.0418
==Minimized===

This DFA has 1 states
States: ['1']
Alphabet: set(['1', '0'])
Starting state: 1
Accepting states: []
Transition function:
	1
1 	1
0 	1
Current state: 1
Currently accepting: False

Precision: 0.0000 Recall: 0.0000 Accuracy: 0.9869 F1: 0.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:6
Done fitting takes time: 0.0859
==Minimized===

This DFA has 1 states
States: ['1']
Alphabet: set(['1', '0'])
Starting state: 1
Accepting states: []
Transition function:
	1
1 	1
0 	1
Current state: 1
Currently accepting: False

Precision: 0.0000 Recall: 0.0000 Accuracy: 0.9869 F1: 0.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:7
Done fitting takes time: 0.0869
==Minimized===

This DFA has 6 states
States: ['3', '6', '4', '1', '2', '7']
Alphabet: set(['1', '0'])
Starting state: 4
Accepting states: ['3']
Transition function:
	1	2	3	4	6	7
1 	1	2	6	2	7	1
0 	4	2	1	6	3	1
Current state: 4
Currently accepting: False

Precision: 0.0000 Recall: 0.0000 Accuracy: 0.9651 F1: 0.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:8
Done fitting takes time: 0.0360
==Minimized===

This DFA has 4 states
States: ['3', '6', '1', '4']
Alphabet: set(['1', '0'])
Starting state: 4
Accepting states: ['3']
Transition function:
	1	3	4	6
1 	1	6	6	1
0 	1	1	6	3
Current state: 4
Currently accepting: False

Precision: 0.6667 Recall: 1.0000 Accuracy: 0.9934 F1: 0.8000


--------------------------------------------------------------------
Begin DFA extraction with n_state:9
Done fitting takes time: 0.0938
==Minimized===

This DFA has 4 states
States: ['3', '5', '1', '4']
Alphabet: set(['1', '0'])
Starting state: 4
Accepting states: ['3']
Transition function:
	1	3	4	5
1 	1	5	5	1
0 	1	5	1	3
Current state: 4
Currently accepting: False

Precision: 0.6000 Recall: 1.0000 Accuracy: 0.9913 F1: 0.7500


--------------------------------------------------------------------
Begin DFA extraction with n_state:10
Done fitting takes time: 0.0403
==Minimized===

This DFA has 4 states
States: ['3', '6', '1', '4']
Alphabet: set(['1', '0'])
Starting state: 4
Accepting states: ['3']
Transition function:
	1	3	4	6
1 	1	6	6	1
0 	1	1	1	3
Current state: 4
Currently accepting: False

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:11
Done fitting takes time: 0.0414
==Minimized===

This DFA has 1 states
States: ['11']
Alphabet: set(['1', '0'])
Starting state: 11
Accepting states: []
Transition function:
	11
1 	11
0 	11
Current state: 11
Currently accepting: False

Precision: 0.0000 Recall: 0.0000 Accuracy: 0.9869 F1: 0.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:12
Done fitting takes time: 0.1363
==Minimized===

This DFA has 4 states
States: ['3', '5', '11', '12']
Alphabet: set(['1', '0'])
Starting state: 12
Accepting states: ['3']
Transition function:
	11	12	3	5
1 	11	5	5	11
0 	11	11	5	3
Current state: 12
Currently accepting: False

Precision: 0.6000 Recall: 1.0000 Accuracy: 0.9913 F1: 0.7500


--------------------------------------------------------------------
Begin DFA extraction with n_state:13
Done fitting takes time: 0.1274
==Minimized===

This DFA has 4 states
States: ['3', '6', '11', '12']
Alphabet: set(['1', '0'])
Starting state: 12
Accepting states: ['3']
Transition function:
	11	12	3	6
1 	11	6	6	11
0 	11	11	11	3
Current state: 12
Currently accepting: False

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:14
Done fitting takes time: 0.0966
==Minimized===

This DFA has 4 states
States: ['3', '6', '13', '14']
Alphabet: set(['1', '0'])
Starting state: 14
Accepting states: ['3']
Transition function:
	13	14	3	6
1 	13	6	6	13
0 	13	13	13	3
Current state: 14
Currently accepting: False

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:15
Done fitting takes time: 0.0493
==Minimized===

This DFA has 4 states
States: ['3', '5', '13', '14']
Alphabet: set(['1', '0'])
Starting state: 14
Accepting states: ['3']
Transition function:
	13	14	3	5
1 	13	5	5	13
0 	13	13	13	3
Current state: 14
Currently accepting: False

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:16
Done fitting takes time: 0.0475
==Minimized===

This DFA has 4 states
States: ['3', '5', '13', '14']
Alphabet: set(['1', '0'])
Starting state: 14
Accepting states: ['3']
Transition function:
	13	14	3	5
1 	13	5	5	13
0 	13	13	5	3
Current state: 14
Currently accepting: False

Precision: 0.6000 Recall: 1.0000 Accuracy: 0.9913 F1: 0.7500


--------------------------------------------------------------------
Begin DFA extraction with n_state:17
Done fitting takes time: 0.0384
==Minimized===

This DFA has 4 states
States: ['3', '17', '11', '14']
Alphabet: set(['1', '0'])
Starting state: 14
Accepting states: ['3']
Transition function:
	11	14	17	3
1 	11	17	11	17
0 	11	11	3	11
Current state: 14
Currently accepting: False

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:18
Done fitting takes time: 0.0408
==Minimized===

This DFA has 4 states
States: ['3', '17', '11', '14']
Alphabet: set(['1', '0'])
Starting state: 14
Accepting states: ['3']
Transition function:
	11	14	17	3
1 	11	17	11	17
0 	11	11	3	11
Current state: 14
Currently accepting: False

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:19
Done fitting takes time: 0.0781
==Minimized===

This DFA has 4 states
States: ['3', '17', '11', '14']
Alphabet: set(['1', '0'])
Starting state: 14
Accepting states: ['3']
Transition function:
	11	14	17	3
1 	11	17	11	17
0 	11	11	3	11
Current state: 14
Currently accepting: False

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000
[ 0.    0.    0.    0.    0.    0.    0.8   0.75  1.    0.    0.75  1.    1.
  1.    0.75  1.    1.    1.  ]


[[ 0.07894737  0.          0.          0.          0.          1.          1.
   1.          1.          1.          1.          1.          1.          1.
   1.          1.          1.          1.        ]
 [ 0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.          0.          0.          0.
   0.41666667  0.28571429  0.          0.        ]
 [ 0.          0.05263158  0.05263158  0.05263158  1.          1.          1.
   1.          1.          1.          1.          1.          1.          1.
   1.          1.          1.          1.        ]
 [ 0.          0.          0.          0.          0.          1.          1.
   1.          1.          1.          1.          1.          1.          1.
   1.          1.          1.          1.        ]
 [ 0.          0.          0.          0.          0.          1.          1.
   1.          1.          1.          1.          1.          1.          1.
   1.          1.          1.          1.        ]
 [ 0.          0.          0.29268293  0.85714286  1.          1.          1.
   1.          1.          1.          1.          1.          1.          1.
   1.          1.          1.          1.        ]
 [ 0.02586207  0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.          0.          0.          0.
   0.28571429  0.          0.28571429  1.        ]
 [ 0.          0.          0.          0.          0.          0.6         1.
   0.8         1.          1.          1.          0.66666667  1.          1.
   1.          1.          1.          1.        ]
 [ 0.          0.          0.          0.          0.          0.          0.8
   0.75        1.          0.          0.75        1.          1.          1.
   0.75        1.          1.          1.        ]]
