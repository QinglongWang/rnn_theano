G:g3, model:SRN sigmoid, load all data and stored hidden activations


--------------------------------------------------------------------
Begin DFA extraction with n_state:2
Done fitting takes time: 0.4260
==Minimized===

This DFA has 1 states
States: ['2']
Alphabet: set(['1', '0'])
Starting state: 2
Accepting states: []
Transition function:
	2
1 	2
0 	2
Current state: 2
Currently accepting: False

Precision: 0.0000 Recall: 0.0000 Accuracy: 0.5422 F1: 0.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:3
Done fitting takes time: 0.5548
==Minimized===

This DFA has 1 states
States: ['2']
Alphabet: set(['1', '0'])
Starting state: 2
Accepting states: []
Transition function:
	2
1 	2
0 	2
Current state: 2
Currently accepting: False

Precision: 0.0000 Recall: 0.0000 Accuracy: 0.5422 F1: 0.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:4
Done fitting takes time: 0.2306
==Minimized===

This DFA has 1 states
States: ['2']
Alphabet: set(['1', '0'])
Starting state: 2
Accepting states: ['2']
Transition function:
	2
1 	2
0 	2
Current state: 2
Currently accepting: True

Precision: 0.4578 Recall: 1.0000 Accuracy: 0.4578 F1: 0.6280


--------------------------------------------------------------------
Begin DFA extraction with n_state:5
Done fitting takes time: 0.2415
==Minimized===

This DFA has 1 states
States: ['2']
Alphabet: set(['1', '0'])
Starting state: 2
Accepting states: ['2']
Transition function:
	2
1 	2
0 	2
Current state: 2
Currently accepting: True

Precision: 0.4578 Recall: 1.0000 Accuracy: 0.4578 F1: 0.6280


--------------------------------------------------------------------
Begin DFA extraction with n_state:6
Done fitting takes time: 0.6310
==Minimized===

This DFA has 1 states
States: ['2']
Alphabet: set(['1', '0'])
Starting state: 2
Accepting states: ['2']
Transition function:
	2
1 	2
0 	2
Current state: 2
Currently accepting: True

Precision: 0.4578 Recall: 1.0000 Accuracy: 0.4578 F1: 0.6280


--------------------------------------------------------------------
Begin DFA extraction with n_state:7
Done fitting takes time: 0.2323
==Minimized===

This DFA has 1 states
States: ['2']
Alphabet: set(['1', '0'])
Starting state: 2
Accepting states: ['2']
Transition function:
	2
1 	2
0 	2
Current state: 2
Currently accepting: True

Precision: 0.4578 Recall: 1.0000 Accuracy: 0.4578 F1: 0.6280


--------------------------------------------------------------------
Begin DFA extraction with n_state:8
Done fitting takes time: 0.2527
==Minimized===

This DFA has 1 states
States: ['2']
Alphabet: set(['1', '0'])
Starting state: 2
Accepting states: ['2']
Transition function:
	2
1 	2
0 	2
Current state: 2
Currently accepting: True

Precision: 0.4578 Recall: 1.0000 Accuracy: 0.4578 F1: 0.6280


--------------------------------------------------------------------
Begin DFA extraction with n_state:9
Done fitting takes time: 0.6977
==Minimized===

This DFA has 1 states
States: ['2']
Alphabet: set(['1', '0'])
Starting state: 2
Accepting states: ['2']
Transition function:
	2
1 	2
0 	2
Current state: 2
Currently accepting: True

Precision: 0.4578 Recall: 1.0000 Accuracy: 0.4578 F1: 0.6280


--------------------------------------------------------------------
Begin DFA extraction with n_state:10
Done fitting takes time: 0.6270
==Minimized===

This DFA has 2 states
States: ['8', '9']
Alphabet: set(['1', '0'])
Starting state: 9
Accepting states: ['8']
Transition function:
	8	9
1 	8	8
0 	8	8
Current state: 9
Currently accepting: False

Precision: 0.4578 Recall: 1.0000 Accuracy: 0.4578 F1: 0.6280


--------------------------------------------------------------------
Begin DFA extraction with n_state:11
Done fitting takes time: 0.4612
==Minimized===

This DFA has 1 states
States: ['11']
Alphabet: set(['1', '0'])
Starting state: 11
Accepting states: ['11']
Transition function:
	11
1 	11
0 	11
Current state: 11
Currently accepting: True

Precision: 0.4578 Recall: 1.0000 Accuracy: 0.4578 F1: 0.6280


--------------------------------------------------------------------
Begin DFA extraction with n_state:12
Done fitting takes time: 0.2672
==Minimized===

This DFA has 4 states
States: ['11', '12', '10', '4']
Alphabet: set(['1', '0'])
Starting state: 12
Accepting states: ['11', '12']
Transition function:
	10	11	12	4
1 	10	12	11	10
0 	10	4	12	12
Current state: 12
Currently accepting: True

Precision: 0.8304 Recall: 1.0000 Accuracy: 0.9065 F1: 0.9073


--------------------------------------------------------------------
Begin DFA extraction with n_state:13
Done fitting takes time: 0.2532
==Minimized===

This DFA has 4 states
States: ['11', '13', '10', '4']
Alphabet: set(['1', '0'])
Starting state: 13
Accepting states: ['11', '13']
Transition function:
	10	11	13	4
1 	10	13	11	10
0 	10	4	13	13
Current state: 13
Currently accepting: True

Precision: 0.8304 Recall: 1.0000 Accuracy: 0.9065 F1: 0.9073


--------------------------------------------------------------------
Begin DFA extraction with n_state:14
Done fitting takes time: 0.4042
==Minimized===

This DFA has 6 states
States: ['13', '11', '14', '9', '10', '3']
Alphabet: set(['1', '0'])
Starting state: 9
Accepting states: ['11', '13', '14']
Transition function:
	10	11	13	14	3	9
1 	10	13	11	14	10	11
0 	10	3	13	3	14	13
Current state: 9
Currently accepting: False

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:15
Done fitting takes time: 0.2495
==Minimized===

This DFA has 6 states
States: ['13', '11', '14', '9', '10', '3']
Alphabet: set(['1', '0'])
Starting state: 9
Accepting states: ['11', '13', '14']
Transition function:
	10	11	13	14	3	9
1 	10	13	11	14	10	11
0 	10	3	13	3	14	13
Current state: 9
Currently accepting: False

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:16
Done fitting takes time: 0.2697
==Minimized===

This DFA has 6 states
States: ['13', '11', '14', '9', '10', '16']
Alphabet: set(['1', '0'])
Starting state: 9
Accepting states: ['11', '13', '14']
Transition function:
	10	11	13	14	16	9
1 	10	13	11	14	10	11
0 	10	16	13	16	14	13
Current state: 9
Currently accepting: False

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:17
Done fitting takes time: 0.2605
==Minimized===

This DFA has 6 states
States: ['13', '11', '14', '9', '10', '16']
Alphabet: set(['1', '0'])
Starting state: 9
Accepting states: ['11', '13', '14']
Transition function:
	10	11	13	14	16	9
1 	10	13	11	14	10	11
0 	10	16	13	16	14	13
Current state: 9
Currently accepting: False

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:18
Done fitting takes time: 0.2665
==Minimized===

This DFA has 6 states
States: ['13', '11', '14', '9', '10', '16']
Alphabet: set(['1', '0'])
Starting state: 9
Accepting states: ['11', '13', '14']
Transition function:
	10	11	13	14	16	9
1 	10	13	11	14	10	11
0 	10	16	13	16	14	13
Current state: 9
Currently accepting: False

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:19
Done fitting takes time: 0.7533
==Minimized===

This DFA has 6 states
States: ['13', '11', '14', '9', '10', '16']
Alphabet: set(['1', '0'])
Starting state: 9
Accepting states: ['11', '13', '14']
Transition function:
	10	11	13	14	16	9
1 	10	13	11	14	10	11
0 	10	16	13	16	14	13
Current state: 9
Currently accepting: False

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000
[ 0.          0.          0.6280285   0.6280285   0.6280285   0.6280285
  0.6280285   0.6280285   0.6280285   0.6280285   0.90734386  0.90734386
  1.          1.          1.          1.          1.          1.        ]


[[ 0.          0.          0.6280285   0.6280285   0.6280285   0.6280285
   0.6280285   0.6280285   0.6280285   0.6280285   0.90734386  0.90734386
   1.          1.          1.          1.          1.          1.        ]
 [ 0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.        ]
 [ 0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.        ]
 [ 0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.        ]
 [ 0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.        ]
 [ 0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.        ]
 [ 0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.        ]
 [ 0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.        ]
 [ 0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.        ]]
