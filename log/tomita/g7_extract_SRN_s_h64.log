G:g7, model:SRN sigmoid, load all data and stored hidden activations


--------------------------------------------------------------------
Begin DFA extraction with n_state:2
Done fitting takes time: 0.1238
==Minimized===

This DFA has 2 states
States: ['2', '1']
Alphabet: set(['1', '0'])
Starting state: 2
Accepting states: ['2']
Transition function:
	1	2
1 	1	2
0 	1	1
Current state: 2
Currently accepting: True

Precision: 1.0000 Recall: 0.0129 Accuracy: 0.5787 F1: 0.0255


--------------------------------------------------------------------
Begin DFA extraction with n_state:3
Done fitting takes time: 0.1032
==Minimized===

This DFA has 1 states
States: ['3']
Alphabet: set(['1', '0'])
Starting state: 3
Accepting states: []
Transition function:
	3
1 	3
0 	3
Current state: 3
Currently accepting: False

Precision: 0.0000 Recall: 0.0000 Accuracy: 0.5731 F1: 0.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:4
Done fitting takes time: 0.1927
==Minimized===

This DFA has 1 states
States: ['1']
Alphabet: set(['1', '0'])
Starting state: 1
Accepting states: ['1']
Transition function:
	1
1 	1
0 	1
Current state: 1
Currently accepting: True

Precision: 0.4269 Recall: 1.0000 Accuracy: 0.4269 F1: 0.5983


--------------------------------------------------------------------
Begin DFA extraction with n_state:5
Done fitting takes time: 0.2615
==Minimized===

This DFA has 2 states
States: ['4', '3']
Alphabet: set(['1', '0'])
Starting state: 4
Accepting states: ['4']
Transition function:
	3	4
1 	3	4
0 	3	3
Current state: 4
Currently accepting: True

Precision: 1.0000 Recall: 0.0129 Accuracy: 0.5787 F1: 0.0255


--------------------------------------------------------------------
Begin DFA extraction with n_state:6
Done fitting takes time: 0.2786
==Minimized===

This DFA has 3 states
States: ['3', '5', '4']
Alphabet: set(['1', '0'])
Starting state: 5
Accepting states: ['5', '4']
Transition function:
	3	4	5
1 	3	4	4
0 	3	3	5
Current state: 5
Currently accepting: True

Precision: 1.0000 Recall: 0.0974 Accuracy: 0.6147 F1: 0.1775


--------------------------------------------------------------------
Begin DFA extraction with n_state:7
Done fitting takes time: 0.2140
==Minimized===

This DFA has 3 states
States: ['3', '5', '4']
Alphabet: set(['1', '0'])
Starting state: 5
Accepting states: ['5', '4']
Transition function:
	3	4	5
1 	3	4	4
0 	3	3	5
Current state: 5
Currently accepting: True

Precision: 1.0000 Recall: 0.0974 Accuracy: 0.6147 F1: 0.1775


--------------------------------------------------------------------
Begin DFA extraction with n_state:8
Done fitting takes time: 0.2295
==Minimized===

This DFA has 3 states
States: ['3', '5', '4']
Alphabet: set(['1', '0'])
Starting state: 5
Accepting states: ['5', '4']
Transition function:
	3	4	5
1 	3	4	4
0 	3	3	5
Current state: 5
Currently accepting: True

Precision: 1.0000 Recall: 0.0974 Accuracy: 0.6147 F1: 0.1775


--------------------------------------------------------------------
Begin DFA extraction with n_state:9
Done fitting takes time: 0.2686
==Minimized===

This DFA has 5 states
States: ['3', '4', '1', '2', '5']
Alphabet: set(['1', '0'])
Starting state: 5
Accepting states: ['1', '2', '5', '4']
Transition function:
	1	2	3	4	5
1 	4	2	3	4	2
0 	1	5	3	3	1
Current state: 5
Currently accepting: True

Precision: 0.6055 Recall: 0.3603 Accuracy: 0.6268 F1: 0.4518


--------------------------------------------------------------------
Begin DFA extraction with n_state:10
Done fitting takes time: 0.2341
==Minimized===

This DFA has 1 states
States: ['1']
Alphabet: set(['1', '0'])
Starting state: 1
Accepting states: ['1']
Transition function:
	1
1 	1
0 	1
Current state: 1
Currently accepting: True

Precision: 0.4269 Recall: 1.0000 Accuracy: 0.4269 F1: 0.5983


--------------------------------------------------------------------
Begin DFA extraction with n_state:11
Done fitting takes time: 0.1216
==Minimized===

This DFA has 1 states
States: ['1']
Alphabet: set(['1', '0'])
Starting state: 1
Accepting states: ['1']
Transition function:
	1
1 	1
0 	1
Current state: 1
Currently accepting: True

Precision: 0.4269 Recall: 1.0000 Accuracy: 0.4269 F1: 0.5983


--------------------------------------------------------------------
Begin DFA extraction with n_state:12
Done fitting takes time: 0.2650
==Minimized===

This DFA has 1 states
States: ['1']
Alphabet: set(['1', '0'])
Starting state: 1
Accepting states: ['1']
Transition function:
	1
1 	1
0 	1
Current state: 1
Currently accepting: True

Precision: 0.4269 Recall: 1.0000 Accuracy: 0.4269 F1: 0.5983


--------------------------------------------------------------------
Begin DFA extraction with n_state:13
Done fitting takes time: 0.2819
==Minimized===

This DFA has 6 states
States: ['10', '11', '1', '2', '13', '12']
Alphabet: set(['1', '0'])
Starting state: 13
Accepting states: ['11', '10', '1', '2']
Transition function:
	1	10	11	12	13	2
1 	2	10	10	12	2	2
0 	1	12	11	12	1	11
Current state: 13
Currently accepting: False

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:14
Done fitting takes time: 0.2362
==Minimized===

This DFA has 6 states
States: ['10', '11', '1', '2', '13', '12']
Alphabet: set(['1', '0'])
Starting state: 13
Accepting states: ['11', '10', '1', '2']
Transition function:
	1	10	11	12	13	2
1 	2	10	10	12	2	2
0 	1	12	11	12	1	11
Current state: 13
Currently accepting: False

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:15
Done fitting takes time: 0.2218
==Minimized===

This DFA has 6 states
States: ['10', '11', '15', '1', '13', '12']
Alphabet: set(['1', '0'])
Starting state: 13
Accepting states: ['11', '10', '15', '1']
Transition function:
	1	10	11	12	13	15
1 	15	10	10	12	15	15
0 	1	12	11	12	1	11
Current state: 13
Currently accepting: False

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:16
Done fitting takes time: 0.3520
==Minimized===

This DFA has 6 states
States: ['10', '11', '15', '1', '13', '12']
Alphabet: set(['1', '0'])
Starting state: 13
Accepting states: ['11', '10', '15', '1']
Transition function:
	1	10	11	12	13	15
1 	15	10	10	12	15	15
0 	1	12	11	12	1	11
Current state: 13
Currently accepting: False

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:17
Done fitting takes time: 0.1302
==Minimized===

This DFA has 6 states
States: ['10', '14', '11', '15', '13', '12']
Alphabet: set(['1', '0'])
Starting state: 13
Accepting states: ['11', '10', '15', '14']
Transition function:
	10	11	12	13	14	15
1 	10	15	12	15	10	15
0 	12	11	12	11	11	14
Current state: 13
Currently accepting: False

Precision: 0.7295 Recall: 1.0000 Accuracy: 0.8417 F1: 0.8436


--------------------------------------------------------------------
Begin DFA extraction with n_state:18
Done fitting takes time: 0.1393
==Minimized===

This DFA has 6 states
States: ['10', '14', '11', '15', '13', '12']
Alphabet: set(['1', '0'])
Starting state: 13
Accepting states: ['11', '10', '15', '14']
Transition function:
	10	11	12	13	14	15
1 	10	15	12	15	10	15
0 	12	11	12	11	11	14
Current state: 13
Currently accepting: False

Precision: 0.7295 Recall: 1.0000 Accuracy: 0.8417 F1: 0.8436


--------------------------------------------------------------------
Begin DFA extraction with n_state:19
Done fitting takes time: 0.1331
==Minimized===

This DFA has 7 states
States: ['10', '11', '15', '13', '12', '14', '16']
Alphabet: set(['1', '0'])
Starting state: 13
Accepting states: ['11', '10', '15', '14', '16']
Transition function:
	10	11	12	13	14	15	16
1 	10	15	12	15	10	15	10
0 	12	11	12	11	16	14	11
Current state: 13
Currently accepting: False

Precision: 0.8667 Recall: 1.0000 Accuracy: 0.9344 F1: 0.9286
[ 0.02549247  0.          0.59831461  0.02549247  0.17754011  0.17754011
  0.17754011  0.4518028   0.59831461  0.59831461  0.59831461  1.          1.
  1.          1.          0.84356436  0.84356436  0.92861035]


[[ 0.02549247  0.          0.59831461  0.02549247  0.17754011  0.17754011
   0.17754011  0.4518028   0.59831461  0.59831461  0.59831461  1.          1.
   1.          1.          0.84356436  0.84356436  0.92861035]
 [ 0.          0.          0.          0.40324215  0.14206788  0.13277311
   0.05034325  0.58648649  0.58709107  0.14328961  0.57609406  0.50266667
   0.43548387  0.47919656  0.40608229  0.68401084  0.10434783  0.6417704 ]
 [ 0.          0.59831461  0.52976704  0.52976704  0.52976704  1.          1.
   1.          1.          1.          1.          1.          1.          1.
   1.          1.          1.          1.        ]
 [ 0.          0.16774194  0.02549247  0.17754011  0.17754011  1.          1.
   1.          1.          1.          1.          1.          1.          1.
   1.          1.          1.          1.        ]
 [ 0.          0.          0.          0.59831461  0.59831461  0.72225417
   0.72225417  0.72225417  0.72225417  0.86938776  0.86938776  1.          1.
   1.          1.          1.          1.          1.        ]
 [ 0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.        ]
 [ 0.          0.          0.          0.          0.          0.59831461
   0.82639334  1.          0.52722558  1.          1.          1.          1.
   1.          1.          1.          1.          1.        ]]
