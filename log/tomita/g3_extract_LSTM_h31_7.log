G:g3, model:LSTM tanh, load all data and stored hidden activations


--------------------------------------------------------------------
Begin DFA extraction with n_state:2
Done fitting takes time: 0.3318
==Minimized===

This DFA has 1 states
States: ['2']
Alphabet: set(['1', '0'])
Starting state: 2
Accepting states: []
Transition function:
	2
1 	2
0 	2
Current state: 2
Currently accepting: False

Precision: 0.0000 Recall: 0.0000 Accuracy: 0.5422 F1: 0.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:3
Done fitting takes time: 0.1973
==Minimized===

This DFA has 2 states
States: ['2', '3']
Alphabet: set(['1', '0'])
Starting state: 3
Accepting states: ['2']
Transition function:
	2	3
1 	3	2
0 	3	3
Current state: 3
Currently accepting: False

Precision: 0.4938 Recall: 0.3822 Accuracy: 0.5379 F1: 0.4309


--------------------------------------------------------------------
Begin DFA extraction with n_state:4
Done fitting takes time: 0.2182
==Minimized===

This DFA has 3 states
States: ['3', '2', '4']
Alphabet: set(['1', '0'])
Starting state: 4
Accepting states: ['2', '4']
Transition function:
	2	3	4
1 	3	2	4
0 	3	3	3
Current state: 4
Currently accepting: True

Precision: 0.4958 Recall: 0.3853 Accuracy: 0.5392 F1: 0.4336


--------------------------------------------------------------------
Begin DFA extraction with n_state:5
Done fitting takes time: 0.4682
==Minimized===

This DFA has 4 states
States: ['2', '3', '1', '4']
Alphabet: set(['1', '0'])
Starting state: 2
Accepting states: ['2']
Transition function:
	1	2	3	4
1 	1	3	2	1
0 	1	4	3	2
Current state: 2
Currently accepting: True

Precision: 0.5915 Recall: 0.1548 Accuracy: 0.5642 F1: 0.2454


--------------------------------------------------------------------
Begin DFA extraction with n_state:6
Done fitting takes time: 0.3297
==Minimized===

This DFA has 3 states
States: ['3', '2', '6']
Alphabet: set(['1', '0'])
Starting state: 2
Accepting states: ['3']
Transition function:
	2	3	6
1 	3	2	2
0 	6	3	2
Current state: 2
Currently accepting: False

Precision: 0.5199 Recall: 0.4871 Accuracy: 0.5593 F1: 0.5030


--------------------------------------------------------------------
Begin DFA extraction with n_state:7
Done fitting takes time: 0.6789
==Minimized===

This DFA has 5 states
States: ['4', '3', '7', '2', '5']
Alphabet: set(['1', '0'])
Starting state: 4
Accepting states: ['3', '4', '7']
Transition function:
	2	3	4	5	7
1 	2	7	5	4	3
0 	2	3	5	3	2
Current state: 4
Currently accepting: True

Precision: 0.7483 Recall: 0.5577 Accuracy: 0.7117 F1: 0.6391


--------------------------------------------------------------------
Begin DFA extraction with n_state:8
Done fitting takes time: 0.5925
==Minimized===

This DFA has 5 states
States: ['3', '4', '7', '2', '5']
Alphabet: set(['1', '0'])
Starting state: 3
Accepting states: ['3', '4', '7']
Transition function:
	2	3	4	5	7
1 	2	5	7	3	4
0 	2	5	4	4	2
Current state: 3
Currently accepting: True

Precision: 0.7483 Recall: 0.5577 Accuracy: 0.7117 F1: 0.6391


--------------------------------------------------------------------
Begin DFA extraction with n_state:9
Done fitting takes time: 0.4967
==Minimized===

This DFA has 3 states
States: ['2', '1', '6']
Alphabet: set(['1', '0'])
Starting state: 2
Accepting states: ['2']
Transition function:
	1	2	6
1 	1	2	1
0 	1	6	2
Current state: 2
Currently accepting: True

Precision: 1.0000 Recall: 0.2980 Accuracy: 0.6787 F1: 0.4592


--------------------------------------------------------------------
Begin DFA extraction with n_state:10
Done fitting takes time: 0.8368
==Minimized===

This DFA has 5 states
States: ['10', '2', '5', '1', '6']
Alphabet: set(['1', '0'])
Starting state: 10
Accepting states: ['10', '2', '5']
Transition function:
	1	10	2	5	6
1 	1	5	2	10	1
0 	1	10	6	6	2
Current state: 10
Currently accepting: True

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:11
Done fitting takes time: 0.8352
==Minimized===

This DFA has 6 states
States: ['11', '2', '5', '3', '1', '6']
Alphabet: set(['1', '0'])
Starting state: 3
Accepting states: ['11', '2', '5']
Transition function:
	1	11	2	3	5	6
1 	1	5	2	5	11	1
0 	1	11	6	11	6	2
Current state: 3
Currently accepting: False

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:12
Done fitting takes time: 0.7681
==Minimized===

This DFA has 6 states
States: ['11', '2', '5', '3', '12', '6']
Alphabet: set(['1', '0'])
Starting state: 3
Accepting states: ['11', '2', '5']
Transition function:
	11	12	2	3	5	6
1 	5	12	2	5	11	12
0 	11	12	6	11	6	2
Current state: 3
Currently accepting: False

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:13
Done fitting takes time: 0.3458
==Minimized===

This DFA has 6 states
States: ['11', '2', '5', '13', '12', '6']
Alphabet: set(['1', '0'])
Starting state: 13
Accepting states: ['11', '2', '5']
Transition function:
	11	12	13	2	5	6
1 	5	12	5	2	11	12
0 	11	12	11	6	6	2
Current state: 13
Currently accepting: False

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:14
Done fitting takes time: 0.3341
==Minimized===

This DFA has 6 states
States: ['11', '2', '5', '13', '12', '6']
Alphabet: set(['1', '0'])
Starting state: 13
Accepting states: ['11', '2', '5']
Transition function:
	11	12	13	2	5	6
1 	5	12	5	2	11	12
0 	11	12	11	6	6	2
Current state: 13
Currently accepting: False

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:15
Done fitting takes time: 0.2657
==Minimized===

This DFA has 6 states
States: ['11', '2', '5', '13', '12', '6']
Alphabet: set(['1', '0'])
Starting state: 13
Accepting states: ['11', '2', '5']
Transition function:
	11	12	13	2	5	6
1 	5	12	5	2	11	12
0 	11	12	11	6	6	2
Current state: 13
Currently accepting: False

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:16
Done fitting takes time: 0.2459
==Minimized===

This DFA has 6 states
States: ['11', '16', '5', '13', '12', '6']
Alphabet: set(['1', '0'])
Starting state: 13
Accepting states: ['11', '16', '5']
Transition function:
	11	12	13	16	5	6
1 	5	12	5	16	11	12
0 	11	12	11	6	6	16
Current state: 13
Currently accepting: False

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:17
Done fitting takes time: 0.4035
==Minimized===

This DFA has 6 states
States: ['11', '16', '5', '13', '12', '6']
Alphabet: set(['1', '0'])
Starting state: 13
Accepting states: ['11', '16', '5']
Transition function:
	11	12	13	16	5	6
1 	5	12	5	16	11	12
0 	11	12	11	6	6	16
Current state: 13
Currently accepting: False

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:18
Done fitting takes time: 0.2438
==Minimized===

This DFA has 6 states
States: ['11', '16', '5', '13', '12', '6']
Alphabet: set(['1', '0'])
Starting state: 13
Accepting states: ['11', '16', '5']
Transition function:
	11	12	13	16	5	6
1 	5	12	5	16	11	12
0 	11	12	11	6	6	16
Current state: 13
Currently accepting: False

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:19
Done fitting takes time: 0.2514
==Minimized===

This DFA has 6 states
States: ['11', '16', '5', '13', '12', '6']
Alphabet: set(['1', '0'])
Starting state: 13
Accepting states: ['11', '16', '5']
Transition function:
	11	12	13	16	5	6
1 	5	12	5	16	11	12
0 	11	12	11	6	6	16
Current state: 13
Currently accepting: False

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000
[ 0.          0.43092666  0.43359818  0.24540368  0.50299401  0.63912164
  0.63912164  0.45920746  1.          1.          1.          1.          1.
  1.          1.          1.          1.          1.        ]


[[ 0.43137255  0.53856008  0.6280285   0.43137255  0.43137255  0.6280285
   0.6280285   0.6280285   0.6280285   0.6280285   0.83848797  0.97110676
   0.97110676  0.97110676  1.          1.          1.          1.        ]
 [ 0.43137255  0.02253797  0.          0.          0.          0.          0.
   0.0110331   0.0110331   0.0110331   0.02293121  0.02865613  0.05116059
   0.05116059  0.17177914  0.17177914  0.20117417  0.20117417]
 [ 0.6280285   0.6280285   0.94767025  0.45920746  0.45920746  0.45920746
   1.          1.          1.          1.          1.          1.          1.
   1.          1.          1.          1.          1.        ]
 [ 0.          0.43092666  0.94767025  0.94767025  0.94767025  1.          1.
   1.          1.          1.          1.          1.          1.          1.
   1.          1.          1.          1.        ]
 [ 0.          0.6280285   0.45920746  0.45920746  0.45920746  0.45920746
   0.45920746  0.85577649  1.          1.          1.          1.          1.
   1.          1.          1.          1.          1.        ]
 [ 0.01203008  0.6280285   0.45920746  0.94767025  1.          1.          1.
   1.          1.          1.          1.          1.          1.          1.
   1.          1.          1.          1.        ]
 [ 0.          0.6280285   0.6280285   0.6280285   0.6280285   0.63898421
   0.53865699  0.85155684  0.72893866  0.8554337   0.8554337   0.8554337
   1.          1.          1.          1.          1.          1.        ]
 [ 0.          0.43092666  0.43359818  0.24540368  0.50299401  0.63912164
   0.63912164  0.45920746  1.          1.          1.          1.          1.
   1.          1.          1.          1.          1.        ]
 [ 0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.        ]]
