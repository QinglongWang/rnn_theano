G:g5, model:UNI sigmoid, load all data and stored hidden activations


--------------------------------------------------------------------
Begin DFA extraction with n_state:2
Done fitting takes time: 1.0904
==Minimized===

This DFA has 2 states
States: ['2', '1']
Alphabet: set(['1', '0'])
Starting state: 2
Accepting states: ['2']
Transition function:
	1	2
1 	1	1
0 	2	1
Current state: 2
Currently accepting: True

Precision: 0.5032 Recall: 0.3419 Accuracy: 0.5118 F1: 0.4071


--------------------------------------------------------------------
Begin DFA extraction with n_state:3
Done fitting takes time: 0.9976
==Minimized===

This DFA has 1 states
States: ['1']
Alphabet: set(['1', '0'])
Starting state: 1
Accepting states: []
Transition function:
	1
1 	1
0 	1
Current state: 1
Currently accepting: False

Precision: 0.0000 Recall: 0.0000 Accuracy: 0.5097 F1: 0.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:4
Done fitting takes time: 0.6051
==Minimized===

This DFA has 3 states
States: ['1', '3', '2']
Alphabet: set(['1', '0'])
Starting state: 3
Accepting states: ['3', '2']
Transition function:
	1	2	3
1 	1	1	1
0 	2	1	3
Current state: 3
Currently accepting: True

Precision: 0.5028 Recall: 0.3419 Accuracy: 0.5115 F1: 0.4070


--------------------------------------------------------------------
Begin DFA extraction with n_state:5
Done fitting takes time: 1.3576
==Minimized===

This DFA has 4 states
States: ['1', '4', '3', '5']
Alphabet: set(['1', '0'])
Starting state: 3
Accepting states: ['3', '5', '4']
Transition function:
	1	3	4	5
1 	5	1	5	1
0 	3	4	3	1
Current state: 3
Currently accepting: True

Precision: 0.5009 Recall: 1.0000 Accuracy: 0.5114 F1: 0.6675


--------------------------------------------------------------------
Begin DFA extraction with n_state:6
Done fitting takes time: 0.8281
==Minimized===

This DFA has 2 states
States: ['3', '6']
Alphabet: set(['1', '0'])
Starting state: 3
Accepting states: ['3']
Transition function:
	3	6
1 	6	3
0 	6	3
Current state: 3
Currently accepting: True

Precision: 0.5040 Recall: 1.0000 Accuracy: 0.5174 F1: 0.6702


--------------------------------------------------------------------
Begin DFA extraction with n_state:7
Done fitting takes time: 0.5271
==Minimized===

This DFA has 2 states
States: ['3', '6']
Alphabet: set(['1', '0'])
Starting state: 3
Accepting states: ['3']
Transition function:
	3	6
1 	6	3
0 	6	3
Current state: 3
Currently accepting: True

Precision: 0.5040 Recall: 1.0000 Accuracy: 0.5174 F1: 0.6702


--------------------------------------------------------------------
Begin DFA extraction with n_state:8
Done fitting takes time: 0.6584
==Minimized===

This DFA has 3 states
States: ['3', '5', '6']
Alphabet: set(['1', '0'])
Starting state: 3
Accepting states: ['3']
Transition function:
	3	5	6
1 	6	6	5
0 	6	6	3
Current state: 3
Currently accepting: True

Precision: 0.5109 Recall: 0.5056 Accuracy: 0.5202 F1: 0.5083


--------------------------------------------------------------------
Begin DFA extraction with n_state:9
Done fitting takes time: 1.3355
==Minimized===

This DFA has 4 states
States: ['9', '6', '3', '2']
Alphabet: set(['1', '0'])
Starting state: 3
Accepting states: ['3', '2', '6']
Transition function:
	2	3	6	9
1 	9	9	2	3
0 	9	6	3	3
Current state: 3
Currently accepting: True

Precision: 0.4986 Recall: 1.0000 Accuracy: 0.5068 F1: 0.6654


--------------------------------------------------------------------
Begin DFA extraction with n_state:10
Done fitting takes time: 1.7998
==Minimized===

This DFA has 5 states
States: ['8', '3', '9', '5', '6']
Alphabet: set(['1', '0'])
Starting state: 8
Accepting states: ['3', '9', '8']
Transition function:
	3	5	6	8	9
1 	9	6	5	6	3
0 	6	9	3	6	8
Current state: 8
Currently accepting: True

Precision: 0.4985 Recall: 0.7025 Accuracy: 0.5075 F1: 0.5832


--------------------------------------------------------------------
Begin DFA extraction with n_state:11
Done fitting takes time: 1.2370
==Minimized===

This DFA has 7 states
States: ['3', '9', '6', '11', '5', '2', '8']
Alphabet: set(['1', '0'])
Starting state: 8
Accepting states: ['3', '2', '9', '8']
Transition function:
	11	2	3	5	6	8	9
1 	5	11	9	11	2	11	3
0 	3	9	6	9	3	6	8
Current state: 8
Currently accepting: True

Precision: 0.5002 Recall: 0.8821 Accuracy: 0.5100 F1: 0.6384


--------------------------------------------------------------------
Begin DFA extraction with n_state:12
Done fitting takes time: 1.2481
==Minimized===

This DFA has 7 states
States: ['6', '3', '9', '11', '5', '2', '8']
Alphabet: set(['1', '0'])
Starting state: 8
Accepting states: ['3', '2', '6', '9', '8']
Transition function:
	11	2	3	5	6	8	9
1 	5	11	9	11	2	11	3
0 	3	9	6	9	3	6	8
Current state: 8
Currently accepting: True

Precision: 0.4955 Recall: 0.8821 Accuracy: 0.5018 F1: 0.6345


--------------------------------------------------------------------
Begin DFA extraction with n_state:13
Done fitting takes time: 0.5549
==Minimized===

This DFA has 7 states
States: ['6', '13', '9', '11', '5', '2', '8']
Alphabet: set(['1', '0'])
Starting state: 8
Accepting states: ['13', '2', '6', '9', '8']
Transition function:
	11	13	2	5	6	8	9
1 	5	9	11	11	2	11	13
0 	13	6	9	9	13	6	8
Current state: 8
Currently accepting: True

Precision: 0.4955 Recall: 0.8821 Accuracy: 0.5018 F1: 0.6345


--------------------------------------------------------------------
Begin DFA extraction with n_state:14
Done fitting takes time: 1.0369
==Minimized===

This DFA has 7 states
States: ['6', '13', '9', '11', '5', '2', '8']
Alphabet: set(['1', '0'])
Starting state: 13
Accepting states: ['13', '2', '6', '9', '8']
Transition function:
	11	13	2	5	6	8	9
1 	5	9	11	11	2	11	13
0 	13	6	9	9	13	6	8
Current state: 13
Currently accepting: True

Precision: 0.5096 Recall: 0.9088 Accuracy: 0.5265 F1: 0.6530


--------------------------------------------------------------------
Begin DFA extraction with n_state:15
Done fitting takes time: 0.8699
==Minimized===

This DFA has 8 states
States: ['13', '2', '11', '10', '15', '1', '6', '9']
Alphabet: set(['1', '0'])
Starting state: 13
Accepting states: ['13', '15', '1', '2']
Transition function:
	1	10	11	13	15	2	6	9
1 	15	11	10	9	1	11	2	13
0 	11	15	13	6	2	15	13	2
Current state: 13
Currently accepting: True

Precision: 0.6000 Recall: 1.0000 Accuracy: 0.6731 F1: 0.7500


--------------------------------------------------------------------
Begin DFA extraction with n_state:16
Done fitting takes time: 1.2852
==Minimized===

This DFA has 10 states
States: ['13', '2', '11', '10', '12', '15', '6', '9', '16', '1']
Alphabet: set(['1', '0'])
Starting state: 13
Accepting states: ['13', '15', '16', '1', '2']
Transition function:
	1	10	11	12	13	15	16	2	6	9
1 	15	11	10	10	9	1	15	11	2	13
0 	12	15	13	16	6	2	10	15	13	2
Current state: 13
Currently accepting: True

Precision: 0.6251 Recall: 0.9808 Accuracy: 0.7021 F1: 0.7636


--------------------------------------------------------------------
Begin DFA extraction with n_state:17
Done fitting takes time: 1.2017
==Minimized===

This DFA has 10 states
States: ['13', '17', '11', '10', '12', '15', '6', '9', '16', '1']
Alphabet: set(['1', '0'])
Starting state: 13
Accepting states: ['13', '15', '17', '16', '1']
Transition function:
	1	10	11	12	13	15	16	17	6	9
1 	15	11	10	10	9	1	15	11	17	13
0 	12	15	13	16	6	17	10	15	13	10
Current state: 13
Currently accepting: True

Precision: 0.6777 Recall: 0.9808 Accuracy: 0.7618 F1: 0.8015


--------------------------------------------------------------------
Begin DFA extraction with n_state:18
Done fitting takes time: 0.5602
==Minimized===

This DFA has 12 states
States: ['13', '11', '12', '15', '17', '2', '10', '4', '16', '1', '6', '9']
Alphabet: set(['1', '0'])
Starting state: 13
Accepting states: ['13', '15', '17', '16', '1', '2']
Transition function:
	1	10	11	12	13	15	16	17	2	4	6	9
1 	15	11	10	10	9	1	1	11	11	11	2	13
0 	12	15	13	16	6	17	4	16	15	16	13	4
Current state: 13
Currently accepting: True

Precision: 0.7542 Recall: 0.9717 Accuracy: 0.8308 F1: 0.8492


--------------------------------------------------------------------
Begin DFA extraction with n_state:19
Done fitting takes time: 0.6914
==Minimized===

This DFA has 14 states
States: ['13', '16', '11', '12', '15', '18', '10', '5', '19', '1', '6', '9', '17', '2']
Alphabet: set(['1', '0'])
Starting state: 13
Accepting states: ['13', '15', '17', '16', '19', '1', '2']
Transition function:
	1	10	11	12	13	15	16	17	18	19	2	5	6	9
1 	15	11	5	10	9	1	18	11	1	1	11	11	2	13
0 	12	19	13	16	6	17	10	19	17	10	15	15	13	10
Current state: 13
Currently accepting: True

Precision: 0.7466 Recall: 0.9791 Accuracy: 0.8268 F1: 0.8472
[ 0.40714796  0.          0.40703158  0.66746795  0.67020677  0.67020677
  0.50826596  0.66538861  0.58315894  0.63840139  0.63454231  0.63454231
  0.65303658  0.74997749  0.7635514   0.80153046  0.84922883  0.84720058]


[[ 0.          0.          0.50826596  0.60506567  0.50826596  0.55335222
   0.23959094  0.57339638  0.57339638  0.53617953  0.67020677  0.33145796
   0.57339638  0.375       0.52358168  0.49940291  0.33434748  0.50383693]
 [ 0.          0.          0.          0.          0.          0.          0.
   0.28847458  0.18794807  0.          0.          0.          0.          0.
   0.          0.16868908  0.          0.        ]
 [ 0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.        ]
 [ 0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.        ]
 [ 0.40714796  0.          0.40703158  0.66746795  0.67020677  0.67020677
   0.50826596  0.66538861  0.58315894  0.63840139  0.63454231  0.63454231
   0.65303658  0.74997749  0.7635514   0.80153046  0.84922883  0.84720058]
 [ 0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.        ]
 [ 0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.        ]
 [ 0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.        ]
 [ 0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.        ]]
