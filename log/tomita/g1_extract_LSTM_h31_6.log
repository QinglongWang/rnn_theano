G:g1, model:LSTM tanh, load all data and stored hidden activations


--------------------------------------------------------------------
Begin DFA extraction with n_state:2
Done fitting takes time: 0.0575
==Minimized===

This DFA has 1 states
States: ['1']
Alphabet: set(['1', '0'])
Starting state: 1
Accepting states: []
Transition function:
	1
1 	1
0 	1
Current state: 1
Currently accepting: False

Precision: 0.0000 Recall: 0.0000 Accuracy: 0.9763 F1: 0.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:3
Done fitting takes time: 0.0310
==Minimized===

This DFA has 3 states
States: ['2', '1', '3']
Alphabet: set(['1', '0'])
Starting state: 3
Accepting states: ['2']
Transition function:
	1	2	3
1 	1	2	2
0 	1	3	1
Current state: 3
Currently accepting: False

Precision: 0.4400 Recall: 1.0000 Accuracy: 0.9698 F1: 0.6111


--------------------------------------------------------------------
Begin DFA extraction with n_state:4
Done fitting takes time: 0.0991
==Minimized===

This DFA has 3 states
States: ['2', '1', '3']
Alphabet: set(['1', '0'])
Starting state: 3
Accepting states: ['2']
Transition function:
	1	2	3
1 	1	3	2
0 	1	3	1
Current state: 3
Currently accepting: False

Precision: 0.6250 Recall: 0.4545 Accuracy: 0.9806 F1: 0.5263


--------------------------------------------------------------------
Begin DFA extraction with n_state:5
Done fitting takes time: 0.0748
==Minimized===

This DFA has 4 states
States: ['5', '3', '1', '2']
Alphabet: set(['1', '0'])
Starting state: 3
Accepting states: ['5']
Transition function:
	1	2	3	5
1 	1	1	5	5
0 	1	3	2	1
Current state: 3
Currently accepting: False

Precision: 0.7333 Recall: 1.0000 Accuracy: 0.9914 F1: 0.8462


--------------------------------------------------------------------
Begin DFA extraction with n_state:6
Done fitting takes time: 0.0447
==Minimized===

This DFA has 3 states
States: ['5', '1', '3']
Alphabet: set(['1', '0'])
Starting state: 3
Accepting states: ['5']
Transition function:
	1	3	5
1 	1	5	5
0 	1	1	1
Current state: 3
Currently accepting: False

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:7
Done fitting takes time: 0.0394
==Minimized===

This DFA has 3 states
States: ['5', '1', '3']
Alphabet: set(['1', '0'])
Starting state: 3
Accepting states: ['5']
Transition function:
	1	3	5
1 	1	5	5
0 	1	1	1
Current state: 3
Currently accepting: False

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:8
Done fitting takes time: 0.0386
==Minimized===

This DFA has 3 states
States: ['8', '1', '3']
Alphabet: set(['1', '0'])
Starting state: 3
Accepting states: ['8']
Transition function:
	1	3	8
1 	1	8	8
0 	1	1	1
Current state: 3
Currently accepting: False

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:9
Done fitting takes time: 0.0414
==Minimized===

This DFA has 3 states
States: ['8', '1', '3']
Alphabet: set(['1', '0'])
Starting state: 3
Accepting states: ['8']
Transition function:
	1	3	8
1 	1	8	8
0 	1	1	1
Current state: 3
Currently accepting: False

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:10
Done fitting takes time: 0.0710
==Minimized===

This DFA has 3 states
States: ['8', '10', '3']
Alphabet: set(['1', '0'])
Starting state: 3
Accepting states: ['8']
Transition function:
	10	3	8
1 	10	8	8
0 	10	10	10
Current state: 3
Currently accepting: False

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:11
Done fitting takes time: 0.0959
==Minimized===

This DFA has 3 states
States: ['8', '11', '3']
Alphabet: set(['1', '0'])
Starting state: 3
Accepting states: ['8']
Transition function:
	11	3	8
1 	11	8	8
0 	11	11	11
Current state: 3
Currently accepting: False

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:12
Done fitting takes time: 0.1118
==Minimized===

This DFA has 3 states
States: ['8', '11', '3']
Alphabet: set(['1', '0'])
Starting state: 3
Accepting states: ['8']
Transition function:
	11	3	8
1 	11	8	8
0 	11	11	11
Current state: 3
Currently accepting: False

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:13
Done fitting takes time: 0.0701
==Minimized===

This DFA has 3 states
States: ['8', '11', '3']
Alphabet: set(['1', '0'])
Starting state: 3
Accepting states: ['8']
Transition function:
	11	3	8
1 	11	8	8
0 	11	11	11
Current state: 3
Currently accepting: False

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:14
Done fitting takes time: 0.0972
==Minimized===

This DFA has 3 states
States: ['8', '11', '3']
Alphabet: set(['1', '0'])
Starting state: 3
Accepting states: ['8']
Transition function:
	11	3	8
1 	11	8	8
0 	11	11	11
Current state: 3
Currently accepting: False

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:15
Done fitting takes time: 0.0537
==Minimized===

This DFA has 3 states
States: ['8', '11', '3']
Alphabet: set(['1', '0'])
Starting state: 3
Accepting states: ['8']
Transition function:
	11	3	8
1 	11	8	8
0 	11	11	11
Current state: 3
Currently accepting: False

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:16
Done fitting takes time: 0.1302
==Minimized===

This DFA has 3 states
States: ['8', '11', '3']
Alphabet: set(['1', '0'])
Starting state: 3
Accepting states: ['8']
Transition function:
	11	3	8
1 	11	8	8
0 	11	11	11
Current state: 3
Currently accepting: False

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:17
Done fitting takes time: 0.0694
==Minimized===

This DFA has 3 states
States: ['8', '11', '3']
Alphabet: set(['1', '0'])
Starting state: 3
Accepting states: ['8']
Transition function:
	11	3	8
1 	11	8	8
0 	11	11	11
Current state: 3
Currently accepting: False

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:18
Done fitting takes time: 0.0484
==Minimized===

This DFA has 3 states
States: ['8', '11', '3']
Alphabet: set(['1', '0'])
Starting state: 3
Accepting states: ['8']
Transition function:
	11	3	8
1 	11	8	8
0 	11	11	11
Current state: 3
Currently accepting: False

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:19
Done fitting takes time: 0.0859
==Minimized===

This DFA has 3 states
States: ['8', '11', '3']
Alphabet: set(['1', '0'])
Starting state: 3
Accepting states: ['8']
Transition function:
	11	3	8
1 	11	8	8
0 	11	11	11
Current state: 3
Currently accepting: False

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000
[ 0.          0.61111111  0.52631579  0.84615385  1.          1.          1.
  1.          1.          1.          1.          1.          1.          1.
  1.          1.          1.          1.        ]


[[ 0.          0.          0.          1.          1.          1.          1.
   1.          1.          1.          1.          1.          1.          1.
   1.          1.          1.          1.        ]
 [ 0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.          0.          0.16666667
   0.16666667  0.30769231  0.30769231  0.58333333  0.58333333]
 [ 0.08730159  0.          0.          1.          1.          1.          1.
   1.          1.          1.          1.          1.          1.          1.
   1.          1.          1.          1.        ]
 [ 0.          0.          0.          0.          0.          0.          0.
   1.          1.          1.          1.          1.          1.          1.
   1.          1.          1.          1.        ]
 [ 0.          0.          0.          1.          1.          1.          1.
   1.          1.          1.          1.          1.          1.          1.
   1.          1.          1.          1.        ]
 [ 0.          0.          0.          1.          1.          1.          1.
   1.          1.          1.          1.          1.          1.          1.
   1.          1.          1.          1.        ]
 [ 0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.          0.          1.          1.
   1.          0.75862069  1.          1.        ]
 [ 0.          0.61111111  0.52631579  0.84615385  1.          1.          1.
   1.          1.          1.          1.          1.          1.          1.
   1.          1.          1.          1.        ]
 [ 0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.        ]]
