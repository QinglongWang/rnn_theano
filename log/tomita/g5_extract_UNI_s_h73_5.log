G:g5, model:UNI sigmoid, load all data and stored hidden activations


--------------------------------------------------------------------
Begin DFA extraction with n_state:2
Done fitting takes time: 0.6523
==Minimized===

This DFA has 2 states
States: ['2', '1']
Alphabet: set(['1', '0'])
Starting state: 2
Accepting states: ['2']
Transition function:
	1	2
1 	1	1
0 	2	1
Current state: 2
Currently accepting: True

Precision: 0.5032 Recall: 0.3419 Accuracy: 0.5118 F1: 0.4071


--------------------------------------------------------------------
Begin DFA extraction with n_state:3
Done fitting takes time: 0.4776
==Minimized===

This DFA has 2 states
States: ['1', '3']
Alphabet: set(['1', '0'])
Starting state: 1
Accepting states: ['1']
Transition function:
	1	3
1 	3	1
0 	3	1
Current state: 1
Currently accepting: True

Precision: 0.5040 Recall: 1.0000 Accuracy: 0.5174 F1: 0.6702


--------------------------------------------------------------------
Begin DFA extraction with n_state:4
Done fitting takes time: 0.5178
==Minimized===

This DFA has 2 states
States: ['1', '3']
Alphabet: set(['1', '0'])
Starting state: 1
Accepting states: ['1']
Transition function:
	1	3
1 	3	1
0 	3	1
Current state: 1
Currently accepting: True

Precision: 0.5040 Recall: 1.0000 Accuracy: 0.5174 F1: 0.6702


--------------------------------------------------------------------
Begin DFA extraction with n_state:5
Done fitting takes time: 0.5931
==Minimized===

This DFA has 2 states
States: ['2', '3']
Alphabet: set(['1', '0'])
Starting state: 2
Accepting states: ['2']
Transition function:
	2	3
1 	3	2
0 	3	2
Current state: 2
Currently accepting: True

Precision: 0.5040 Recall: 1.0000 Accuracy: 0.5174 F1: 0.6702


--------------------------------------------------------------------
Begin DFA extraction with n_state:6
Done fitting takes time: 0.8694
==Minimized===

This DFA has 2 states
States: ['2', '3']
Alphabet: set(['1', '0'])
Starting state: 2
Accepting states: ['2']
Transition function:
	2	3
1 	3	2
0 	3	2
Current state: 2
Currently accepting: True

Precision: 0.5040 Recall: 1.0000 Accuracy: 0.5174 F1: 0.6702


--------------------------------------------------------------------
Begin DFA extraction with n_state:7
Done fitting takes time: 0.6019
==Minimized===

This DFA has 2 states
States: ['2', '3']
Alphabet: set(['1', '0'])
Starting state: 2
Accepting states: ['2']
Transition function:
	2	3
1 	3	2
0 	3	2
Current state: 2
Currently accepting: True

Precision: 0.5040 Recall: 1.0000 Accuracy: 0.5174 F1: 0.6702


--------------------------------------------------------------------
Begin DFA extraction with n_state:8
Done fitting takes time: 0.5309
==Minimized===

This DFA has 5 states
States: ['3', '1', '6', '2', '5']
Alphabet: set(['1', '0'])
Starting state: 5
Accepting states: ['1', '2', '5', '6']
Transition function:
	1	2	3	5	6
1 	6	3	5	3	1
0 	6	3	2	6	5
Current state: 5
Currently accepting: True

Precision: 0.4976 Recall: 1.0000 Accuracy: 0.5048 F1: 0.6645


--------------------------------------------------------------------
Begin DFA extraction with n_state:9
Done fitting takes time: 1.1004
==Minimized===

This DFA has 6 states
States: ['1', '6', '3', '7', '2', '5']
Alphabet: set(['1', '0'])
Starting state: 5
Accepting states: ['1', '2', '5', '6']
Transition function:
	1	2	3	5	6	7
1 	6	3	5	3	1	7
0 	7	3	2	6	5	6
Current state: 5
Currently accepting: True

Precision: 0.4453 Recall: 0.7215 Accuracy: 0.4227 F1: 0.5507


--------------------------------------------------------------------
Begin DFA extraction with n_state:10
Done fitting takes time: 2.4088
==Minimized===

This DFA has 6 states
States: ['1', '6', '3', '7', '2', '5']
Alphabet: set(['1', '0'])
Starting state: 5
Accepting states: ['1', '2', '5', '6']
Transition function:
	1	2	3	5	6	7
1 	6	3	5	3	1	7
0 	7	3	2	6	5	6
Current state: 5
Currently accepting: True

Precision: 0.4453 Recall: 0.7215 Accuracy: 0.4227 F1: 0.5507


--------------------------------------------------------------------
Begin DFA extraction with n_state:11
Done fitting takes time: 0.5582
==Minimized===

This DFA has 6 states
States: ['11', '6', '3', '7', '2', '5']
Alphabet: set(['1', '0'])
Starting state: 5
Accepting states: ['11', '2', '5', '6']
Transition function:
	11	2	3	5	6	7
1 	6	3	5	3	11	7
0 	7	3	2	6	5	6
Current state: 5
Currently accepting: True

Precision: 0.4453 Recall: 0.7215 Accuracy: 0.4227 F1: 0.5507


--------------------------------------------------------------------
Begin DFA extraction with n_state:12
Done fitting takes time: 1.5892
==Minimized===

This DFA has 7 states
States: ['11', '10', '3', '7', '9', '2', '5']
Alphabet: set(['1', '0'])
Starting state: 5
Accepting states: ['11', '10', '2', '5']
Transition function:
	10	11	2	3	5	7	9
1 	11	10	3	5	3	7	7
0 	5	9	3	2	10	11	10
Current state: 5
Currently accepting: True

Precision: 0.4349 Recall: 0.6862 Accuracy: 0.4090 F1: 0.5324


--------------------------------------------------------------------
Begin DFA extraction with n_state:13
Done fitting takes time: 1.0259
==Minimized===

This DFA has 9 states
States: ['5', '12', '11', '3', '4', '7', '9', '10', '6']
Alphabet: set(['1', '0'])
Starting state: 4
Accepting states: ['11', '10', '12', '5', '6']
Transition function:
	10	11	12	3	4	5	6	7	9
1 	6	12	11	4	3	3	10	7	7
0 	4	9	5	4	12	12	9	6	12
Current state: 4
Currently accepting: False

Precision: 0.4518 Recall: 0.5126 Accuracy: 0.4560 F1: 0.4803


--------------------------------------------------------------------
Begin DFA extraction with n_state:14
Done fitting takes time: 0.5407
==Minimized===

This DFA has 8 states
States: ['12', '11', '10', '3', '7', '9', '14', '5']
Alphabet: set(['1', '0'])
Starting state: 14
Accepting states: ['11', '10', '12', '14', '5']
Transition function:
	10	11	12	14	3	5	7	9
1 	10	12	11	3	5	3	7	7
0 	9	9	5	3	14	12	10	12
Current state: 14
Currently accepting: True

Precision: 0.4969 Recall: 0.8142 Accuracy: 0.5047 F1: 0.6172


--------------------------------------------------------------------
Begin DFA extraction with n_state:15
Done fitting takes time: 0.5603
==Minimized===

This DFA has 9 states
States: ['3', '15', '9', '14', '5', '10', '12', '11', '6']
Alphabet: set(['1', '0'])
Starting state: 14
Accepting states: ['11', '10', '12', '14', '5', '6']
Transition function:
	10	11	12	14	15	3	5	6	9
1 	6	12	11	3	15	5	3	10	15
0 	14	9	5	3	6	14	12	9	12
Current state: 14
Currently accepting: True

Precision: 0.4979 Recall: 0.8173 Accuracy: 0.5062 F1: 0.6188


--------------------------------------------------------------------
Begin DFA extraction with n_state:16
Done fitting takes time: 0.5425
==Minimized===

This DFA has 2 states
States: ['14', '3']
Alphabet: set(['1', '0'])
Starting state: 14
Accepting states: ['14']
Transition function:
	14	3
1 	3	14
0 	3	14
Current state: 14
Currently accepting: True

Precision: 0.5040 Recall: 1.0000 Accuracy: 0.5174 F1: 0.6702


--------------------------------------------------------------------
Begin DFA extraction with n_state:17
Done fitting takes time: 0.8089
==Minimized===

This DFA has 11 states
States: ['7', '15', '9', '13', '5', '10', '12', '11', '6', '17', '16']
Alphabet: set(['1', '0'])
Starting state: 13
Accepting states: ['11', '10', '13', '12', '5', '6']
Transition function:
	10	11	12	13	15	16	17	5	6	7	9
1 	6	12	11	17	7	5	13	16	10	7	15
0 	13	9	5	16	12	13	13	12	9	6	12
Current state: 13
Currently accepting: True

Precision: 0.5192 Recall: 0.9205 Accuracy: 0.5431 F1: 0.6640


--------------------------------------------------------------------
Begin DFA extraction with n_state:18
Done fitting takes time: 0.5802
==Minimized===

This DFA has 9 states
States: ['12', '11', '10', '15', '18', '13', '5', '17', '16']
Alphabet: set(['1', '0'])
Starting state: 13
Accepting states: ['11', '10', '13', '12', '5']
Transition function:
	10	11	12	13	15	16	17	18	5
1 	10	12	11	17	15	5	13	15	16
0 	18	18	5	16	10	13	5	12	12
Current state: 13
Currently accepting: True

Precision: 0.6004 Recall: 0.9779 Accuracy: 0.6700 F1: 0.7440


--------------------------------------------------------------------
Begin DFA extraction with n_state:19
Done fitting takes time: 1.0160
==Minimized===

This DFA has 8 states
States: ['12', '11', '10', '15', '13', '5', '17', '16']
Alphabet: set(['1', '0'])
Starting state: 13
Accepting states: ['11', '10', '13', '12', '5']
Transition function:
	10	11	12	13	15	16	17	5
1 	10	12	11	17	15	5	13	16
0 	15	15	5	16	10	13	5	12
Current state: 13
Currently accepting: True

Precision: 0.6278 Recall: 1.0000 Accuracy: 0.7093 F1: 0.7714
[ 0.40714796  0.67020677  0.67020677  0.67020677  0.67020677  0.67020677
  0.66448628  0.55066887  0.55066887  0.55066887  0.53241431  0.48026094
  0.61716262  0.61879658  0.67020677  0.66395359  0.74399489  0.77136772]


[[ 0.          0.67020677  0.          0.          0.          0.          0.
   0.          0.          0.53567015  0.66448766  0.08232446  0.49600194
   0.66790382  0.66448766  0.59321365  0.30312185  0.09715897]
 [ 0.          0.          0.          0.          0.          0.          0.
   0.35074045  0.00287494  0.          0.          0.          0.          0.
   0.          0.42335153  0.          0.        ]
 [ 0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.        ]
 [ 0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.        ]
 [ 0.40714796  0.67020677  0.67020677  0.67020677  0.67020677  0.67020677
   0.66448628  0.55066887  0.55066887  0.55066887  0.53241431  0.48026094
   0.61716262  0.61879658  0.67020677  0.66395359  0.74399489  0.77136772]
 [ 0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.        ]
 [ 0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.        ]
 [ 0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.        ]
 [ 0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.        ]]
