G:g3, model:SRN tanh, load all data and stored hidden activations


--------------------------------------------------------------------
Begin DFA extraction with n_state:2
Done fitting takes time: 0.3647
==Minimized===

This DFA has 1 states
States: ['2']
Alphabet: set(['1', '0'])
Starting state: 2
Accepting states: []
Transition function:
	2
1 	2
0 	2
Current state: 2
Currently accepting: False

Precision: 0.0000 Recall: 0.0000 Accuracy: 0.5422 F1: 0.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:3
Done fitting takes time: 0.2440
==Minimized===

This DFA has 1 states
States: ['3']
Alphabet: set(['1', '0'])
Starting state: 3
Accepting states: []
Transition function:
	3
1 	3
0 	3
Current state: 3
Currently accepting: False

Precision: 0.0000 Recall: 0.0000 Accuracy: 0.5422 F1: 0.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:4
Done fitting takes time: 0.5316
==Minimized===

This DFA has 1 states
States: ['3']
Alphabet: set(['1', '0'])
Starting state: 3
Accepting states: []
Transition function:
	3
1 	3
0 	3
Current state: 3
Currently accepting: False

Precision: 0.0000 Recall: 0.0000 Accuracy: 0.5422 F1: 0.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:5
Done fitting takes time: 0.6081
==Minimized===

This DFA has 1 states
States: ['3']
Alphabet: set(['1', '0'])
Starting state: 3
Accepting states: []
Transition function:
	3
1 	3
0 	3
Current state: 3
Currently accepting: False

Precision: 0.0000 Recall: 0.0000 Accuracy: 0.5422 F1: 0.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:6
Done fitting takes time: 0.5996
==Minimized===

This DFA has 1 states
States: ['3']
Alphabet: set(['1', '0'])
Starting state: 3
Accepting states: []
Transition function:
	3
1 	3
0 	3
Current state: 3
Currently accepting: False

Precision: 0.0000 Recall: 0.0000 Accuracy: 0.5422 F1: 0.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:7
Done fitting takes time: 0.6214
==Minimized===

This DFA has 3 states
States: ['3', '2', '7']
Alphabet: set(['1', '0'])
Starting state: 3
Accepting states: ['2', '7']
Transition function:
	2	3	7
1 	3	2	2
0 	7	7	7
Current state: 3
Currently accepting: False

Precision: 0.4375 Recall: 0.7801 Accuracy: 0.4402 F1: 0.5606


--------------------------------------------------------------------
Begin DFA extraction with n_state:8
Done fitting takes time: 0.7802
==Minimized===

This DFA has 6 states
States: ['2', '8', '5', '6', '3', '7']
Alphabet: set(['1', '0'])
Starting state: 3
Accepting states: ['3', '2', '7']
Transition function:
	2	3	5	6	7	8
1 	6	5	8	8	6	2
0 	7	5	8	7	6	7
Current state: 3
Currently accepting: True

Precision: 0.3346 Recall: 0.2718 Accuracy: 0.4192 F1: 0.2999


--------------------------------------------------------------------
Begin DFA extraction with n_state:9
Done fitting takes time: 0.6887
==Minimized===

This DFA has 5 states
States: ['2', '3', '6', '5', '8']
Alphabet: set(['1', '0'])
Starting state: 3
Accepting states: ['2']
Transition function:
	2	3	5	6	8
1 	8	2	5	3	6
0 	8	5	5	3	6
Current state: 3
Currently accepting: False

Precision: 0.4225 Recall: 0.0151 Accuracy: 0.5397 F1: 0.0292


--------------------------------------------------------------------
Begin DFA extraction with n_state:10
Done fitting takes time: 0.2912
==Minimized===

This DFA has 6 states
States: ['7', '3', '5', '8', '2', '6']
Alphabet: set(['1', '0'])
Starting state: 3
Accepting states: ['2', '7', '6']
Transition function:
	2	3	5	6	7	8
1 	8	2	5	3	6	3
0 	8	5	5	3	8	7
Current state: 3
Currently accepting: False

Precision: 0.5781 Recall: 0.0691 Accuracy: 0.5508 F1: 0.1234


--------------------------------------------------------------------
Begin DFA extraction with n_state:11
Done fitting takes time: 0.8291
==Minimized===

This DFA has 9 states
States: ['7', '10', '5', '3', '9', '8', '1', '2', '6']
Alphabet: set(['1', '0'])
Starting state: 3
Accepting states: ['1', '2', '7', '6']
Transition function:
	1	10	2	3	5	6	7	8	9
1 	9	10	8	2	8	3	1	6	1
0 	9	10	8	5	8	3	8	7	10
Current state: 3
Currently accepting: False

Precision: 0.5041 Recall: 0.2779 Accuracy: 0.5443 F1: 0.3583


--------------------------------------------------------------------
Begin DFA extraction with n_state:12
Done fitting takes time: 0.3202
==Minimized===

This DFA has 5 states
States: ['3', '12', '5', '11', '7']
Alphabet: set(['1', '0'])
Starting state: 3
Accepting states: ['11', '3', '7']
Transition function:
	11	12	3	5	7
1 	5	3	11	12	12
0 	5	7	5	7	12
Current state: 3
Currently accepting: True

Precision: 0.4746 Recall: 0.5320 Accuracy: 0.5162 F1: 0.5017


--------------------------------------------------------------------
Begin DFA extraction with n_state:13
Done fitting takes time: 0.6807
==Minimized===

This DFA has 5 states
States: ['11', '3', '6', '13', '5']
Alphabet: set(['1', '0'])
Starting state: 3
Accepting states: ['11']
Transition function:
	11	13	3	5	6
1 	5	6	11	13	3
0 	5	6	5	13	3
Current state: 3
Currently accepting: False

Precision: 0.5243 Recall: 0.1362 Accuracy: 0.5480 F1: 0.2162


--------------------------------------------------------------------
Begin DFA extraction with n_state:14
Done fitting takes time: 0.5482
==Minimized===

This DFA has 4 states
States: ['12', '14', '13', '5']
Alphabet: set(['1', '0'])
Starting state: 14
Accepting states: ['13', '5']
Transition function:
	12	13	14	5
1 	12	12	13	14
0 	12	12	5	14
Current state: 14
Currently accepting: False

Precision: 0.3382 Recall: 0.0116 Accuracy: 0.5372 F1: 0.0224


--------------------------------------------------------------------
Begin DFA extraction with n_state:15
Done fitting takes time: 0.3971
==Minimized===

This DFA has 3 states
States: ['14', '11', '5']
Alphabet: set(['1', '0'])
Starting state: 14
Accepting states: ['11', '5']
Transition function:
	11	14	5
1 	14	11	14
0 	5	5	14
Current state: 14
Currently accepting: False

Precision: 0.3901 Recall: 0.4413 Accuracy: 0.4284 F1: 0.4141


--------------------------------------------------------------------
Begin DFA extraction with n_state:16
Done fitting takes time: 0.8412
==Minimized===

This DFA has 11 states
States: ['5', '14', '2', '3', '16', '10', '1', '9', '13', '15', '4']
Alphabet: set(['1', '0'])
Starting state: 14
Accepting states: ['13', '15', '5', '4']
Transition function:
	1	10	13	14	15	16	2	3	4	5	9
1 	10	1	16	13	9	3	15	2	10	14	1
0 	10	4	16	5	9	3	13	2	10	14	1
Current state: 14
Currently accepting: False

Precision: 0.4293 Recall: 0.2098 Accuracy: 0.5106 F1: 0.2818


--------------------------------------------------------------------
Begin DFA extraction with n_state:17
Done fitting takes time: 0.6601
==Minimized===

This DFA has 11 states
States: ['8', '16', '13', '3', '6', '12', '10', '17', '5', '14', '2']
Alphabet: set(['1', '0'])
Starting state: 14
Accepting states: ['13', '12', '17', '5', '8']
Transition function:
	10	12	13	14	16	17	2	3	5	6	8
1 	17	16	6	13	12	10	12	2	14	3	17
0 	17	16	6	5	8	10	12	2	14	3	12
Current state: 14
Currently accepting: False

Precision: 0.4674 Recall: 0.5598 Accuracy: 0.5065 F1: 0.5094


--------------------------------------------------------------------
Begin DFA extraction with n_state:18
Done fitting takes time: 0.7040
==Minimized===

This DFA has 3 states
States: ['14', '11', '5']
Alphabet: set(['1', '0'])
Starting state: 14
Accepting states: ['11', '5']
Transition function:
	11	14	5
1 	14	11	14
0 	5	5	14
Current state: 14
Currently accepting: False

Precision: 0.3901 Recall: 0.4413 Accuracy: 0.4284 F1: 0.4141


--------------------------------------------------------------------
Begin DFA extraction with n_state:19
Done fitting takes time: 0.2390
==Minimized===

This DFA has 2 states
States: ['11', '14']
Alphabet: set(['1', '0'])
Starting state: 14
Accepting states: ['11']
Transition function:
	11	14
1 	14	11
0 	14	11
Current state: 14
Currently accepting: False

Precision: 0.4547 Recall: 0.4811 Accuracy: 0.4984 F1: 0.4675
[ 0.          0.          0.          0.          0.          0.56060881
  0.29994435  0.0292113   0.12342342  0.35825748  0.50166429  0.21617294
  0.02242808  0.41410317  0.28184282  0.50940799  0.41410317  0.46753247]


[[ 0.          0.          0.6280285   0.61434263  0.6280285   0.6280285
   0.70852221  0.6280285   0.6280285   0.55989515  0.43062873  0.73395371
   0.73395371  0.73395371  0.83428261  0.83428261  1.          1.        ]
 [ 0.          0.          0.          0.          0.          0.56060881
   0.29994435  0.0292113   0.12342342  0.35825748  0.50166429  0.21617294
   0.02242808  0.41410317  0.28184282  0.50940799  0.41410317  0.46753247]
 [ 0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.        ]
 [ 0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.        ]
 [ 0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.        ]
 [ 0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.        ]
 [ 0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.        ]
 [ 0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.        ]
 [ 0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.        ]]
