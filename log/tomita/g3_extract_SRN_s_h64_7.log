G:g3, model:SRN sigmoid, load all data and stored hidden activations


--------------------------------------------------------------------
Begin DFA extraction with n_state:2
Done fitting takes time: 0.3006
==Minimized===

This DFA has 2 states
States: ['1', '2']
Alphabet: set(['1', '0'])
Starting state: 1
Accepting states: ['1']
Transition function:
	1	2
1 	2	1
0 	2	2
Current state: 1
Currently accepting: True

Precision: 0.4941 Recall: 0.3828 Accuracy: 0.5381 F1: 0.4314


--------------------------------------------------------------------
Begin DFA extraction with n_state:3
Done fitting takes time: 0.2557
==Minimized===

This DFA has 3 states
States: ['3', '1', '2']
Alphabet: set(['1', '0'])
Starting state: 3
Accepting states: ['3']
Transition function:
	1	2	3
1 	3	1	1
0 	2	1	3
Current state: 3
Currently accepting: True

Precision: 0.5474 Recall: 0.5300 Accuracy: 0.5843 F1: 0.5386


--------------------------------------------------------------------
Begin DFA extraction with n_state:4
Done fitting takes time: 0.2119
==Minimized===

This DFA has 1 states
States: ['3']
Alphabet: set(['1', '0'])
Starting state: 3
Accepting states: ['3']
Transition function:
	3
1 	3
0 	3
Current state: 3
Currently accepting: True

Precision: 0.4578 Recall: 1.0000 Accuracy: 0.4578 F1: 0.6280


--------------------------------------------------------------------
Begin DFA extraction with n_state:5
Done fitting takes time: 0.2512
==Minimized===

This DFA has 2 states
States: ['5', '3']
Alphabet: set(['1', '0'])
Starting state: 5
Accepting states: ['5']
Transition function:
	3	5
1 	5	3
0 	3	3
Current state: 5
Currently accepting: True

Precision: 0.4941 Recall: 0.3828 Accuracy: 0.5381 F1: 0.4314


--------------------------------------------------------------------
Begin DFA extraction with n_state:6
Done fitting takes time: 0.3172
==Minimized===

This DFA has 2 states
States: ['5', '3']
Alphabet: set(['1', '0'])
Starting state: 5
Accepting states: ['5']
Transition function:
	3	5
1 	5	3
0 	3	3
Current state: 5
Currently accepting: True

Precision: 0.4941 Recall: 0.3828 Accuracy: 0.5381 F1: 0.4314


--------------------------------------------------------------------
Begin DFA extraction with n_state:7
Done fitting takes time: 0.2227
==Minimized===

This DFA has 1 states
States: ['3']
Alphabet: set(['1', '0'])
Starting state: 3
Accepting states: ['3']
Transition function:
	3
1 	3
0 	3
Current state: 3
Currently accepting: True

Precision: 0.4578 Recall: 1.0000 Accuracy: 0.4578 F1: 0.6280


--------------------------------------------------------------------
Begin DFA extraction with n_state:8
Done fitting takes time: 0.2139
==Minimized===

This DFA has 1 states
States: ['3']
Alphabet: set(['1', '0'])
Starting state: 3
Accepting states: ['3']
Transition function:
	3
1 	3
0 	3
Current state: 3
Currently accepting: True

Precision: 0.4578 Recall: 1.0000 Accuracy: 0.4578 F1: 0.6280


--------------------------------------------------------------------
Begin DFA extraction with n_state:9
Done fitting takes time: 0.2187
==Minimized===

This DFA has 1 states
States: ['3']
Alphabet: set(['1', '0'])
Starting state: 3
Accepting states: ['3']
Transition function:
	3
1 	3
0 	3
Current state: 3
Currently accepting: True

Precision: 0.4578 Recall: 1.0000 Accuracy: 0.4578 F1: 0.6280


--------------------------------------------------------------------
Begin DFA extraction with n_state:10
Done fitting takes time: 0.2258
==Minimized===

This DFA has 1 states
States: ['3']
Alphabet: set(['1', '0'])
Starting state: 3
Accepting states: ['3']
Transition function:
	3
1 	3
0 	3
Current state: 3
Currently accepting: True

Precision: 0.4578 Recall: 1.0000 Accuracy: 0.4578 F1: 0.6280


--------------------------------------------------------------------
Begin DFA extraction with n_state:11
Done fitting takes time: 0.2213
==Minimized===

This DFA has 1 states
States: ['11']
Alphabet: set(['1', '0'])
Starting state: 11
Accepting states: ['11']
Transition function:
	11
1 	11
0 	11
Current state: 11
Currently accepting: True

Precision: 0.4578 Recall: 1.0000 Accuracy: 0.4578 F1: 0.6280


--------------------------------------------------------------------
Begin DFA extraction with n_state:12
Done fitting takes time: 0.4603
==Minimized===

This DFA has 7 states
States: ['6', '5', '4', '10', '3', '11', '9']
Alphabet: set(['1', '0'])
Starting state: 9
Accepting states: ['11', '5', '4', '6', '9']
Transition function:
	10	11	3	4	5	6	9
1 	10	5	6	4	11	10	4
0 	10	11	9	3	3	10	11
Current state: 9
Currently accepting: True

Precision: 0.8168 Recall: 0.8613 Accuracy: 0.8481 F1: 0.8385


--------------------------------------------------------------------
Begin DFA extraction with n_state:13
Done fitting takes time: 0.3382
==Minimized===

This DFA has 7 states
States: ['6', '11', '13', '5', '10', '3', '9']
Alphabet: set(['1', '0'])
Starting state: 9
Accepting states: ['11', '13', '5', '6']
Transition function:
	10	11	13	3	5	6	9
1 	10	5	13	6	11	10	5
0 	10	11	3	13	3	10	11
Current state: 9
Currently accepting: False

Precision: 0.9438 Recall: 1.0000 Accuracy: 0.9728 F1: 0.9711


--------------------------------------------------------------------
Begin DFA extraction with n_state:14
Done fitting takes time: 0.4951
==Minimized===

This DFA has 7 states
States: ['6', '11', '13', '5', '10', '14', '9']
Alphabet: set(['1', '0'])
Starting state: 9
Accepting states: ['11', '13', '5', '6']
Transition function:
	10	11	13	14	5	6	9
1 	10	5	13	6	11	10	5
0 	10	11	14	13	14	10	11
Current state: 9
Currently accepting: False

Precision: 0.9438 Recall: 1.0000 Accuracy: 0.9728 F1: 0.9711


--------------------------------------------------------------------
Begin DFA extraction with n_state:15
Done fitting takes time: 0.4786
==Minimized===

This DFA has 7 states
States: ['6', '11', '13', '15', '10', '14', '9']
Alphabet: set(['1', '0'])
Starting state: 9
Accepting states: ['11', '13', '15', '6']
Transition function:
	10	11	13	14	15	6	9
1 	10	15	13	6	11	10	15
0 	10	11	14	13	14	10	11
Current state: 9
Currently accepting: False

Precision: 0.9438 Recall: 1.0000 Accuracy: 0.9728 F1: 0.9711


--------------------------------------------------------------------
Begin DFA extraction with n_state:16
Done fitting takes time: 0.2378
==Minimized===

This DFA has 6 states
States: ['11', '13', '15', '9', '10', '14']
Alphabet: set(['1', '0'])
Starting state: 9
Accepting states: ['11', '13', '15']
Transition function:
	10	11	13	14	15	9
1 	10	15	13	10	11	15
0 	10	11	14	13	14	11
Current state: 9
Currently accepting: False

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:17
Done fitting takes time: 0.3888
==Minimized===

This DFA has 6 states
States: ['11', '13', '15', '9', '10', '14']
Alphabet: set(['1', '0'])
Starting state: 9
Accepting states: ['11', '13', '15']
Transition function:
	10	11	13	14	15	9
1 	10	15	13	10	11	15
0 	10	11	14	13	14	11
Current state: 9
Currently accepting: False

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:18
Done fitting takes time: 0.4382
==Minimized===

This DFA has 6 states
States: ['11', '13', '15', '9', '10', '14']
Alphabet: set(['1', '0'])
Starting state: 9
Accepting states: ['11', '13', '15']
Transition function:
	10	11	13	14	15	9
1 	10	15	13	10	11	15
0 	10	11	14	13	14	11
Current state: 9
Currently accepting: False

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:19
Done fitting takes time: 0.3630
==Minimized===

This DFA has 6 states
States: ['11', '13', '15', '9', '10', '14']
Alphabet: set(['1', '0'])
Starting state: 9
Accepting states: ['11', '13', '15']
Transition function:
	10	11	13	14	15	9
1 	10	15	13	10	11	15
0 	10	11	14	13	14	11
Current state: 9
Currently accepting: False

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000
[ 0.43137255  0.53856008  0.6280285   0.43137255  0.43137255  0.6280285
  0.6280285   0.6280285   0.6280285   0.6280285   0.83848797  0.97110676
  0.97110676  0.97110676  1.          1.          1.          1.        ]


[[ 0.43137255  0.53856008  0.6280285   0.43137255  0.43137255  0.6280285
   0.6280285   0.6280285   0.6280285   0.6280285   0.83848797  0.97110676
   0.97110676  0.97110676  1.          1.          1.          1.        ]
 [ 0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.        ]
 [ 0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.        ]
 [ 0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.        ]
 [ 0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.        ]
 [ 0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.        ]
 [ 0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.        ]
 [ 0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.        ]
 [ 0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.        ]]
