G:g6, model:SRN tanh, load all data and stored hidden activations


--------------------------------------------------------------------
Begin DFA extraction with n_state:2
Done fitting takes time: 1.0803
==Minimized===

This DFA has 1 states
States: ['1']
Alphabet: set(['1', '0'])
Starting state: 1
Accepting states: []
Transition function:
	1
1 	1
0 	1
Current state: 1
Currently accepting: False

Precision: 0.0000 Recall: 0.0000 Accuracy: 0.5177 F1: 0.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:3
Done fitting takes time: 0.8419
==Minimized===

This DFA has 1 states
States: ['1']
Alphabet: set(['1', '0'])
Starting state: 1
Accepting states: []
Transition function:
	1
1 	1
0 	1
Current state: 1
Currently accepting: False

Precision: 0.0000 Recall: 0.0000 Accuracy: 0.5177 F1: 0.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:4
Done fitting takes time: 0.9256
==Minimized===

This DFA has 1 states
States: ['1']
Alphabet: set(['1', '0'])
Starting state: 1
Accepting states: []
Transition function:
	1
1 	1
0 	1
Current state: 1
Currently accepting: False

Precision: 0.0000 Recall: 0.0000 Accuracy: 0.5177 F1: 0.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:5
Done fitting takes time: 1.3574
==Minimized===

This DFA has 1 states
States: ['1']
Alphabet: set(['1', '0'])
Starting state: 1
Accepting states: ['1']
Transition function:
	1
1 	1
0 	1
Current state: 1
Currently accepting: True

Precision: 0.4823 Recall: 1.0000 Accuracy: 0.4823 F1: 0.6507


--------------------------------------------------------------------
Begin DFA extraction with n_state:6
Done fitting takes time: 2.4834
==Minimized===

This DFA has 1 states
States: ['4']
Alphabet: set(['1', '0'])
Starting state: 4
Accepting states: []
Transition function:
	4
1 	4
0 	4
Current state: 4
Currently accepting: False

Precision: 0.0000 Recall: 0.0000 Accuracy: 0.5177 F1: 0.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:7
Done fitting takes time: 1.7464
==Minimized===

This DFA has 1 states
States: ['1']
Alphabet: set(['1', '0'])
Starting state: 1
Accepting states: ['1']
Transition function:
	1
1 	1
0 	1
Current state: 1
Currently accepting: True

Precision: 0.4823 Recall: 1.0000 Accuracy: 0.4823 F1: 0.6507


--------------------------------------------------------------------
Begin DFA extraction with n_state:8
Done fitting takes time: 2.0260
==Minimized===

This DFA has 1 states
States: ['1']
Alphabet: set(['1', '0'])
Starting state: 1
Accepting states: ['1']
Transition function:
	1
1 	1
0 	1
Current state: 1
Currently accepting: True

Precision: 0.4823 Recall: 1.0000 Accuracy: 0.4823 F1: 0.6507


--------------------------------------------------------------------
Begin DFA extraction with n_state:9
Done fitting takes time: 2.2320
==Minimized===

This DFA has 1 states
States: ['1']
Alphabet: set(['1', '0'])
Starting state: 1
Accepting states: ['1']
Transition function:
	1
1 	1
0 	1
Current state: 1
Currently accepting: True

Precision: 0.4823 Recall: 1.0000 Accuracy: 0.4823 F1: 0.6507


--------------------------------------------------------------------
Begin DFA extraction with n_state:10
Done fitting takes time: 0.9081
==Minimized===

This DFA has 1 states
States: ['10']
Alphabet: set(['1', '0'])
Starting state: 10
Accepting states: ['10']
Transition function:
	10
1 	10
0 	10
Current state: 10
Currently accepting: True

Precision: 0.4823 Recall: 1.0000 Accuracy: 0.4823 F1: 0.6507


--------------------------------------------------------------------
Begin DFA extraction with n_state:11
Done fitting takes time: 0.9209
==Minimized===

This DFA has 8 states
States: ['1', '7', '4', '3', '11', '6', '10', '2']
Alphabet: set(['1', '0'])
Starting state: 10
Accepting states: ['10', '1', '2']
Transition function:
	1	10	11	2	3	4	6	7
1 	1	7	6	11	4	4	3	2
0 	1	7	6	11	4	1	3	1
Current state: 10
Currently accepting: True

Precision: 0.4828 Recall: 0.9868 Accuracy: 0.4839 F1: 0.6484


--------------------------------------------------------------------
Begin DFA extraction with n_state:12
Done fitting takes time: 1.9788
==Minimized===

This DFA has 1 states
States: ['10']
Alphabet: set(['1', '0'])
Starting state: 10
Accepting states: ['10']
Transition function:
	10
1 	10
0 	10
Current state: 10
Currently accepting: True

Precision: 0.4823 Recall: 1.0000 Accuracy: 0.4823 F1: 0.6507


--------------------------------------------------------------------
Begin DFA extraction with n_state:13
Done fitting takes time: 2.3673
==Minimized===

This DFA has 1 states
States: ['10']
Alphabet: set(['1', '0'])
Starting state: 10
Accepting states: ['10']
Transition function:
	10
1 	10
0 	10
Current state: 10
Currently accepting: True

Precision: 0.4823 Recall: 1.0000 Accuracy: 0.4823 F1: 0.6507


--------------------------------------------------------------------
Begin DFA extraction with n_state:14
Done fitting takes time: 2.6687
==Minimized===

This DFA has 10 states
States: ['12', '3', '2', '6', '8', '7', '10', '4', '11', '13']
Alphabet: set(['1', '0'])
Starting state: 10
Accepting states: ['12', '3']
Transition function:
	10	11	12	13	2	3	4	6	7	8
1 	7	6	12	8	11	13	4	3	2	12
0 	7	6	12	8	11	13	4	4	2	12
Current state: 10
Currently accepting: False

Precision: 0.4885 Recall: 0.5030 Accuracy: 0.5063 F1: 0.4956


--------------------------------------------------------------------
Begin DFA extraction with n_state:15
Done fitting takes time: 2.1900
==Minimized===

This DFA has 8 states
States: ['12', '4', '3', '6', '11', '14', '10', '7']
Alphabet: set(['1', '0'])
Starting state: 10
Accepting states: ['12']
Transition function:
	10	11	12	14	3	4	6	7
1 	7	6	12	11	4	12	3	14
0 	7	6	12	11	4	12	3	14
Current state: 10
Currently accepting: False

Precision: 0.4839 Recall: 0.9927 Accuracy: 0.4858 F1: 0.6506


--------------------------------------------------------------------
Begin DFA extraction with n_state:16
Done fitting takes time: 2.8710
==Minimized===

This DFA has 9 states
States: ['12', '8', '4', '3', '6', '11', '2', '10', '7']
Alphabet: set(['1', '0'])
Starting state: 10
Accepting states: ['12']
Transition function:
	10	11	12	2	3	4	6	7	8
1 	7	6	12	11	4	8	3	2	12
0 	7	6	12	11	4	8	3	2	12
Current state: 10
Currently accepting: False

Precision: 0.4846 Recall: 0.9854 Accuracy: 0.4875 F1: 0.6497


--------------------------------------------------------------------
Begin DFA extraction with n_state:17
Done fitting takes time: 2.9169
==Minimized===

This DFA has 8 states
States: ['12', '4', '3', '6', '11', '2', '10', '7']
Alphabet: set(['1', '0'])
Starting state: 10
Accepting states: ['12']
Transition function:
	10	11	12	2	3	4	6	7
1 	7	6	12	11	4	12	3	2
0 	7	6	12	11	4	12	3	2
Current state: 10
Currently accepting: False

Precision: 0.4839 Recall: 0.9927 Accuracy: 0.4858 F1: 0.6506


--------------------------------------------------------------------
Begin DFA extraction with n_state:18
Done fitting takes time: 2.7906
==Minimized===

This DFA has 9 states
States: ['12', '8', '4', '3', '6', '11', '14', '10', '7']
Alphabet: set(['1', '0'])
Starting state: 10
Accepting states: ['12']
Transition function:
	10	11	12	14	3	4	6	7	8
1 	7	6	12	11	4	8	3	14	12
0 	7	6	12	11	4	8	3	14	12
Current state: 10
Currently accepting: False

Precision: 0.4846 Recall: 0.9854 Accuracy: 0.4875 F1: 0.6497


--------------------------------------------------------------------
Begin DFA extraction with n_state:19
Done fitting takes time: 2.5377
==Minimized===

This DFA has 8 states
States: ['13', '4', '3', '6', '11', '14', '10', '7']
Alphabet: set(['1', '0'])
Starting state: 10
Accepting states: ['13']
Transition function:
	10	11	13	14	3	4	6	7
1 	7	6	13	11	4	13	3	14
0 	7	6	13	11	4	13	3	14
Current state: 10
Currently accepting: False

Precision: 0.4839 Recall: 0.9927 Accuracy: 0.4858 F1: 0.6506
[ 0.          0.          0.          0.65071445  0.          0.65071445
  0.65071445  0.65071445  0.65071445  0.64838248  0.65071445  0.65071445
  0.49562081  0.65059966  0.64966104  0.65059966  0.64966104  0.65059966]


[[ 0.39490446  0.          0.          0.06104887  0.53002875  0.51498371
   0.44413093  0.48168179  0.48168179  0.31035685  0.34457672  0.48168179
   0.31622939  0.41508319  0.11940299  0.05116432  0.35334668  0.50116318]
 [ 0.          0.          0.          0.65071445  0.          0.65071445
   0.65071445  0.65071445  0.65071445  0.64838248  0.65071445  0.65071445
   0.49562081  0.65059966  0.64966104  0.65059966  0.64966104  0.65059966]
 [ 0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.        ]
 [ 0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.        ]
 [ 0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.        ]
 [ 0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.        ]
 [ 0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.        ]
 [ 0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.        ]
 [ 0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.        ]]
