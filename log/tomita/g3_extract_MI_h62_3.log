G:g3, model:MI tanh, load all data and stored hidden activations


--------------------------------------------------------------------
Begin DFA extraction with n_state:2
Done fitting takes time: 0.2325
==Minimized===

This DFA has 1 states
States: ['2']
Alphabet: set(['1', '0'])
Starting state: 2
Accepting states: []
Transition function:
	2
1 	2
0 	2
Current state: 2
Currently accepting: False

Precision: 0.0000 Recall: 0.0000 Accuracy: 0.5422 F1: 0.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:3
Done fitting takes time: 0.5171
==Minimized===

This DFA has 1 states
States: ['3']
Alphabet: set(['1', '0'])
Starting state: 3
Accepting states: ['3']
Transition function:
	3
1 	3
0 	3
Current state: 3
Currently accepting: True

Precision: 0.4578 Recall: 1.0000 Accuracy: 0.4578 F1: 0.6280


--------------------------------------------------------------------
Begin DFA extraction with n_state:4
Done fitting takes time: 0.3629
==Minimized===

This DFA has 1 states
States: ['3']
Alphabet: set(['1', '0'])
Starting state: 3
Accepting states: ['3']
Transition function:
	3
1 	3
0 	3
Current state: 3
Currently accepting: True

Precision: 0.4578 Recall: 1.0000 Accuracy: 0.4578 F1: 0.6280


--------------------------------------------------------------------
Begin DFA extraction with n_state:5
Done fitting takes time: 0.3565
==Minimized===

This DFA has 1 states
States: ['3']
Alphabet: set(['1', '0'])
Starting state: 3
Accepting states: ['3']
Transition function:
	3
1 	3
0 	3
Current state: 3
Currently accepting: True

Precision: 0.4578 Recall: 1.0000 Accuracy: 0.4578 F1: 0.6280


--------------------------------------------------------------------
Begin DFA extraction with n_state:6
Done fitting takes time: 0.5508
==Minimized===

This DFA has 4 states
States: ['2', '5', '1', '3']
Alphabet: set(['1', '0'])
Starting state: 5
Accepting states: ['1', '3', '5']
Transition function:
	1	2	3	5
1 	1	1	5	5
0 	1	3	3	2
Current state: 5
Currently accepting: True

Precision: 0.4641 Recall: 0.9728 Accuracy: 0.4735 F1: 0.6284


--------------------------------------------------------------------
Begin DFA extraction with n_state:7
Done fitting takes time: 0.6208
==Minimized===

This DFA has 4 states
States: ['2', '7', '1', '3']
Alphabet: set(['1', '0'])
Starting state: 3
Accepting states: ['1', '3', '7']
Transition function:
	1	2	3	7
1 	1	1	7	3
0 	1	3	3	2
Current state: 3
Currently accepting: True

Precision: 0.4800 Recall: 1.0000 Accuracy: 0.5042 F1: 0.6487


--------------------------------------------------------------------
Begin DFA extraction with n_state:8
Done fitting takes time: 0.2171
==Minimized===

This DFA has 1 states
States: ['3']
Alphabet: set(['1', '0'])
Starting state: 3
Accepting states: ['3']
Transition function:
	3
1 	3
0 	3
Current state: 3
Currently accepting: True

Precision: 0.4578 Recall: 1.0000 Accuracy: 0.4578 F1: 0.6280


--------------------------------------------------------------------
Begin DFA extraction with n_state:9
Done fitting takes time: 0.5035
==Minimized===

This DFA has 1 states
States: ['5']
Alphabet: set(['1', '0'])
Starting state: 5
Accepting states: ['5']
Transition function:
	5
1 	5
0 	5
Current state: 5
Currently accepting: True

Precision: 0.4578 Recall: 1.0000 Accuracy: 0.4578 F1: 0.6280


--------------------------------------------------------------------
Begin DFA extraction with n_state:10
Done fitting takes time: 0.5536
==Minimized===

This DFA has 4 states
States: ['2', '10', '7', '6']
Alphabet: set(['1', '0'])
Starting state: 10
Accepting states: ['10', '7', '6']
Transition function:
	10	2	6	7
1 	7	2	7	10
0 	10	6	2	2
Current state: 10
Currently accepting: True

Precision: 0.6275 Recall: 1.0000 Accuracy: 0.7283 F1: 0.7711


--------------------------------------------------------------------
Begin DFA extraction with n_state:11
Done fitting takes time: 0.6980
==Minimized===

This DFA has 4 states
States: ['8', '5', '11', '1']
Alphabet: set(['1', '0'])
Starting state: 5
Accepting states: ['11', '1', '5']
Transition function:
	1	11	5	8
1 	1	5	11	1
0 	1	11	8	11
Current state: 5
Currently accepting: True

Precision: 0.4742 Recall: 0.9970 Accuracy: 0.4926 F1: 0.6427


--------------------------------------------------------------------
Begin DFA extraction with n_state:12
Done fitting takes time: 0.5646
==Minimized===

This DFA has 6 states
States: ['6', '5', '11', '1', '12', '8']
Alphabet: set(['1', '0'])
Starting state: 5
Accepting states: ['11', '1', '5', '6']
Transition function:
	1	11	12	5	6	8
1 	1	5	12	11	12	1
0 	1	11	8	8	12	6
Current state: 5
Currently accepting: True

Precision: 0.4247 Recall: 0.7721 Accuracy: 0.4169 F1: 0.5480


--------------------------------------------------------------------
Begin DFA extraction with n_state:13
Done fitting takes time: 0.6629
==Minimized===

This DFA has 1 states
States: ['10']
Alphabet: set(['1', '0'])
Starting state: 10
Accepting states: ['10']
Transition function:
	10
1 	10
0 	10
Current state: 10
Currently accepting: True

Precision: 0.4578 Recall: 1.0000 Accuracy: 0.4578 F1: 0.6280


--------------------------------------------------------------------
Begin DFA extraction with n_state:14
Done fitting takes time: 0.6189
==Minimized===

This DFA has 7 states
States: ['6', '5', '11', '13', '2', '12', '8']
Alphabet: set(['1', '0'])
Starting state: 5
Accepting states: ['11', '13', '5', '6']
Transition function:
	11	12	13	2	5	6	8
1 	5	12	13	13	11	12	2
0 	11	8	13	13	8	12	6
Current state: 5
Currently accepting: True

Precision: 0.4223 Recall: 0.7358 Accuracy: 0.4183 F1: 0.5366


--------------------------------------------------------------------
Begin DFA extraction with n_state:15
Done fitting takes time: 0.4602
==Minimized===

This DFA has 1 states
States: ['10']
Alphabet: set(['1', '0'])
Starting state: 10
Accepting states: ['10']
Transition function:
	10
1 	10
0 	10
Current state: 10
Currently accepting: True

Precision: 0.4578 Recall: 1.0000 Accuracy: 0.4578 F1: 0.6280


--------------------------------------------------------------------
Begin DFA extraction with n_state:16
Done fitting takes time: 0.5258
==Minimized===

This DFA has 1 states
States: ['10']
Alphabet: set(['1', '0'])
Starting state: 10
Accepting states: ['10']
Transition function:
	10
1 	10
0 	10
Current state: 10
Currently accepting: True

Precision: 0.4578 Recall: 1.0000 Accuracy: 0.4578 F1: 0.6280


--------------------------------------------------------------------
Begin DFA extraction with n_state:17
Done fitting takes time: 0.5962
==Minimized===

This DFA has 9 states
States: ['17', '10', '5', '12', '15', '13', '9', '11', '6']
Alphabet: set(['1', '0'])
Starting state: 5
Accepting states: ['11', '10', '13', '17', '5', '6', '9']
Transition function:
	10	11	12	13	15	17	5	6	9
1 	17	12	5	13	13	10	17	12	5
0 	10	15	11	13	6	15	9	12	10
Current state: 5
Currently accepting: True

Precision: 0.4577 Recall: 0.8820 Accuracy: 0.4677 F1: 0.6027


--------------------------------------------------------------------
Begin DFA extraction with n_state:18
Done fitting takes time: 0.7125
==Minimized===

This DFA has 8 states
States: ['15', '10', '5', '17', '12', '14', '13', '9']
Alphabet: set(['1', '0'])
Starting state: 5
Accepting states: ['10', '13', '12', '14', '17', '5', '9']
Transition function:
	10	12	13	14	15	17	5	9
1 	17	17	13	12	13	10	17	5
0 	10	15	13	15	14	15	9	10
Current state: 5
Currently accepting: True

Precision: 0.4807 Recall: 0.9884 Accuracy: 0.5060 F1: 0.6469


--------------------------------------------------------------------
Begin DFA extraction with n_state:19
Done fitting takes time: 0.9079
==Minimized===

This DFA has 11 states
States: ['11', '17', '8', '10', '5', '9', '13', '16', '18', '12', '15']
Alphabet: set(['1', '0'])
Starting state: 5
Accepting states: ['11', '10', '13', '17', '16', '18', '5', '9', '8']
Transition function:
	10	11	12	13	15	16	17	18	5	8	9
1 	17	12	18	13	13	18	16	16	17	13	5
0 	10	12	11	13	11	10	15	8	9	11	10
Current state: 5
Currently accepting: True

Precision: 0.4451 Recall: 0.8689 Accuracy: 0.4441 F1: 0.5887
[ 0.          0.6280285   0.6280285   0.6280285   0.62844111  0.64867517
  0.6280285   0.6280285   0.77114525  0.64271782  0.54795991  0.6280285
  0.53659434  0.6280285   0.6280285   0.6026878   0.64686469  0.58865733]


[[ 0.          0.          0.61633466  0.6280285   0.6280285   0.6280285
   0.6280285   0.6280285   0.84526854  0.92555426  0.92555426  0.92555426
   1.          1.          1.          0.88844086  0.88844086  1.        ]
 [ 0.          0.          0.          0.          0.          0.46753247
   0.43137255  0.43137255  0.43137255  0.24758221  0.42804218  0.40141886
   0.          0.17610063  0.40661426  0.52622673  0.45951968  0.43665768]
 [ 0.          0.63898421  0.0110331   0.43359818  0.45920746  0.45920746
   0.45920746  1.          1.          1.          1.          1.          1.
   1.          1.          1.          1.          1.        ]
 [ 0.          0.          0.45920746  0.45920746  0.45920746  1.          1.
   1.          1.          1.          1.          1.          1.          1.
   1.          1.          1.          1.        ]
 [ 0.          0.6280285   0.6280285   0.45920746  0.94767025  0.94767025
   0.94767025  0.45920746  0.45920746  0.45920746  1.          1.          1.
   1.          1.          1.          1.          1.        ]
 [ 0.          0.43092666  0.94767025  0.94767025  0.94767025  1.          1.
   1.          1.          1.          1.          1.          1.          1.
   1.          1.          1.          1.        ]
 [ 0.          0.6280285   0.6280285   0.6280285   0.62844111  0.64867517
   0.6280285   0.6280285   0.77114525  0.64271782  0.54795991  0.6280285
   0.53659434  0.6280285   0.6280285   0.6026878   0.64686469  0.58865733]
 [ 0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.        ]
 [ 0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.        ]]
