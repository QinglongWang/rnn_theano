G:g4, model:SRN tanh, load all data and stored hidden activations


--------------------------------------------------------------------
Begin DFA extraction with n_state:2
Done fitting takes time: 1.0797
==Minimized===

This DFA has 1 states
States: ['1']
Alphabet: set(['1', '0'])
Starting state: 1
Accepting states: []
Transition function:
	1
1 	1
0 	1
Current state: 1
Currently accepting: False

Precision: 0.0000 Recall: 0.0000 Accuracy: 0.5094 F1: 0.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:3
Done fitting takes time: 1.4431
==Minimized===

This DFA has 2 states
States: ['2', '1']
Alphabet: set(['1', '0'])
Starting state: 2
Accepting states: ['2']
Transition function:
	1	2
1 	1	1
0 	1	1
Current state: 2
Currently accepting: True

Precision: 0.0000 Recall: 0.0000 Accuracy: 0.5094 F1: 0.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:4
Done fitting takes time: 2.1725
==Minimized===

This DFA has 1 states
States: ['1']
Alphabet: set(['1', '0'])
Starting state: 1
Accepting states: []
Transition function:
	1
1 	1
0 	1
Current state: 1
Currently accepting: False

Precision: 0.0000 Recall: 0.0000 Accuracy: 0.5094 F1: 0.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:5
Done fitting takes time: 2.3091
==Minimized===

This DFA has 5 states
States: ['2', '4', '1', '3', '5']
Alphabet: set(['1', '0'])
Starting state: 4
Accepting states: ['2', '4']
Transition function:
	1	2	3	4	5
1 	4	4	3	5	1
0 	2	3	3	5	1
Current state: 4
Currently accepting: True

Precision: 0.7609 Recall: 0.2651 Accuracy: 0.5986 F1: 0.3932


--------------------------------------------------------------------
Begin DFA extraction with n_state:6
Done fitting takes time: 1.0864
==Minimized===

This DFA has 3 states
States: ['4', '1', '6']
Alphabet: set(['1', '0'])
Starting state: 4
Accepting states: ['4']
Transition function:
	1	4	6
1 	4	6	1
0 	6	6	1
Current state: 4
Currently accepting: True

Precision: 0.5202 Recall: 0.2110 Accuracy: 0.5174 F1: 0.3002


--------------------------------------------------------------------
Begin DFA extraction with n_state:7
Done fitting takes time: 1.0624
==Minimized===

This DFA has 2 states
States: ['4', '7']
Alphabet: set(['1', '0'])
Starting state: 4
Accepting states: ['4']
Transition function:
	4	7
1 	7	7
0 	7	7
Current state: 4
Currently accepting: True

Precision: 0.0000 Recall: 0.0000 Accuracy: 0.5094 F1: 0.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:8
Done fitting takes time: 0.8479
==Minimized===

This DFA has 2 states
States: ['4', '7']
Alphabet: set(['1', '0'])
Starting state: 4
Accepting states: ['4']
Transition function:
	4	7
1 	7	7
0 	7	7
Current state: 4
Currently accepting: True

Precision: 0.0000 Recall: 0.0000 Accuracy: 0.5094 F1: 0.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:9
Done fitting takes time: 0.7462
==Minimized===

This DFA has 5 states
States: ['7', '1', '5', '9', '4']
Alphabet: set(['1', '0'])
Starting state: 4
Accepting states: ['9', '4', '7']
Transition function:
	1	4	5	7	9
1 	4	5	7	7	1
0 	5	5	9	9	1
Current state: 4
Currently accepting: True

Precision: 0.5098 Recall: 0.5832 Accuracy: 0.5203 F1: 0.5440


--------------------------------------------------------------------
Begin DFA extraction with n_state:10
Done fitting takes time: 0.7432
==Minimized===

This DFA has 8 states
States: ['7', '8', '10', '5', '9', '4', '1', '6']
Alphabet: set(['1', '0'])
Starting state: 4
Accepting states: ['9', '4', '7']
Transition function:
	1	10	4	5	6	7	8	9
1 	4	8	5	10	7	7	6	1
0 	6	8	5	10	9	9	6	1
Current state: 4
Currently accepting: True

Precision: 0.4824 Recall: 0.4006 Accuracy: 0.4950 F1: 0.4377


--------------------------------------------------------------------
Begin DFA extraction with n_state:11
Done fitting takes time: 1.1153
==Minimized===

This DFA has 8 states
States: ['7', '8', '10', '5', '9', '4', '1', '6']
Alphabet: set(['1', '0'])
Starting state: 4
Accepting states: ['9', '4', '7']
Transition function:
	1	10	4	5	6	7	8	9
1 	4	8	5	10	7	7	6	1
0 	6	8	5	10	9	9	6	1
Current state: 4
Currently accepting: True

Precision: 0.4824 Recall: 0.4006 Accuracy: 0.4950 F1: 0.4377


--------------------------------------------------------------------
Begin DFA extraction with n_state:12
Done fitting takes time: 0.7452
==Minimized===

This DFA has 8 states
States: ['7', '6', '9', '4', '10', '5', '1', '8']
Alphabet: set(['1', '0'])
Starting state: 4
Accepting states: ['9', '4', '7', '6']
Transition function:
	1	10	4	5	6	7	8	9
1 	4	8	5	10	1	7	7	1
0 	6	8	5	10	9	9	6	1
Current state: 4
Currently accepting: True

Precision: 0.4908 Recall: 0.4888 Accuracy: 0.5004 F1: 0.4898


--------------------------------------------------------------------
Begin DFA extraction with n_state:13
Done fitting takes time: 1.3572
==Minimized===

This DFA has 9 states
States: ['7', '13', '9', '10', '1', '5', '6', '8', '4']
Alphabet: set(['1', '0'])
Starting state: 4
Accepting states: ['9', '8', '13', '4', '7']
Transition function:
	1	10	13	4	5	6	7	8	9
1 	4	8	1	5	10	7	7	6	1
0 	6	13	9	5	10	9	9	6	1
Current state: 4
Currently accepting: True

Precision: 0.4973 Recall: 0.4948 Accuracy: 0.5067 F1: 0.4960


--------------------------------------------------------------------
Begin DFA extraction with n_state:14
Done fitting takes time: 1.6402
==Minimized===

This DFA has 9 states
States: ['7', '13', '9', '10', '1', '5', '6', '8', '4']
Alphabet: set(['1', '0'])
Starting state: 4
Accepting states: ['9', '8', '13', '4', '7']
Transition function:
	1	10	13	4	5	6	7	8	9
1 	4	8	1	5	10	7	7	6	1
0 	6	13	9	5	10	9	9	6	1
Current state: 4
Currently accepting: True

Precision: 0.4973 Recall: 0.4948 Accuracy: 0.5067 F1: 0.4960


--------------------------------------------------------------------
Begin DFA extraction with n_state:15
Done fitting takes time: 1.6264
==Minimized===

This DFA has 8 states
States: ['13', '9', '5', '6', '10', '1', '4', '8']
Alphabet: set(['1', '0'])
Starting state: 4
Accepting states: ['13', '4', '9', '8']
Transition function:
	1	10	13	4	5	6	8	9
1 	4	8	1	5	10	1	6	1
0 	6	13	9	5	10	9	6	1
Current state: 4
Currently accepting: True

Precision: 0.4803 Recall: 0.3459 Accuracy: 0.4954 F1: 0.4022


--------------------------------------------------------------------
Begin DFA extraction with n_state:16
Done fitting takes time: 1.8870
==Minimized===

This DFA has 12 states
States: ['15', '9', '13', '16', '11', '5', '4', '7', '1', '8', '10', '6']
Alphabet: set(['1', '0'])
Starting state: 4
Accepting states: ['13', '15', '16', '1', '4', '9', '8']
Transition function:
	1	10	11	13	15	16	4	5	6	7	8	9
1 	6	8	11	1	15	4	5	10	1	15	7	1
0 	6	13	11	7	9	11	5	10	9	9	7	16
Current state: 4
Currently accepting: True

Precision: 0.6774 Recall: 0.6132 Accuracy: 0.6670 F1: 0.6437


--------------------------------------------------------------------
Begin DFA extraction with n_state:17
Done fitting takes time: 2.0159
==Minimized===

This DFA has 11 states
States: ['15', '16', '9', '11', '5', '4', '7', '13', '1', '10', '6']
Alphabet: set(['1', '0'])
Starting state: 4
Accepting states: ['13', '15', '16', '1', '4', '9']
Transition function:
	1	10	11	13	15	16	4	5	6	7	9
1 	6	13	11	7	15	4	5	10	1	15	1
0 	6	13	11	7	9	11	5	10	9	9	16
Current state: 4
Currently accepting: True

Precision: 0.6937 Recall: 0.6216 Accuracy: 0.6797 F1: 0.6556


--------------------------------------------------------------------
Begin DFA extraction with n_state:18
Done fitting takes time: 1.7789
==Minimized===

This DFA has 13 states
States: ['15', '9', '11', '1', '13', '16', '10', '5', '7', '4', '8', '18', '6']
Alphabet: set(['1', '0'])
Starting state: 4
Accepting states: ['13', '15', '16', '1', '4', '9', '8']
Transition function:
	1	10	11	13	15	16	18	4	5	6	7	8	9
1 	6	8	11	1	15	4	15	5	10	1	18	7	1
0 	6	13	11	7	9	11	9	5	10	9	18	7	16
Current state: 4
Currently accepting: True

Precision: 0.6567 Recall: 0.5935 Accuracy: 0.6483 F1: 0.6235


--------------------------------------------------------------------
Begin DFA extraction with n_state:19
Done fitting takes time: 2.3196
==Minimized===

This DFA has 12 states
States: ['13', '4', '9', '11', '15', '16', '6', '10', '7', '19', '18', '8']
Alphabet: set(['1', '0'])
Starting state: 4
Accepting states: ['13', '15', '16', '19', '18', '4', '9', '8']
Transition function:
	10	11	13	15	16	18	19	4	6	7	8	9
1 	8	11	18	15	4	6	10	19	15	18	7	18
0 	13	11	7	9	11	6	10	19	9	9	7	16
Current state: 4
Currently accepting: True

Precision: 0.6983 Recall: 0.7584 Accuracy: 0.7207 F1: 0.7271
[ 0.          0.          0.          0.39324383  0.30023542  0.          0.
  0.54403486  0.43773264  0.43773264  0.48980786  0.49604839  0.49604839
  0.40217268  0.64371105  0.65564682  0.62351738  0.72713699]


[[  0.00000000e+00   7.77000777e-04   7.77000777e-04   6.97350070e-01
    7.08160443e-01   1.00000000e+00   8.46006964e-01   1.00000000e+00
    1.00000000e+00   1.00000000e+00   1.00000000e+00   1.00000000e+00
    1.00000000e+00   1.00000000e+00   1.00000000e+00   1.00000000e+00
    1.00000000e+00   1.00000000e+00]
 [  0.00000000e+00   0.00000000e+00   0.00000000e+00   3.93243828e-01
    3.00235424e-01   0.00000000e+00   0.00000000e+00   5.44034865e-01
    4.37732639e-01   4.37732639e-01   4.89807861e-01   4.96048395e-01
    4.96048395e-01   4.02172683e-01   6.43711045e-01   6.55646817e-01
    6.23517382e-01   7.27136991e-01]
 [  0.00000000e+00   0.00000000e+00   0.00000000e+00   0.00000000e+00
    0.00000000e+00   0.00000000e+00   0.00000000e+00   0.00000000e+00
    0.00000000e+00   0.00000000e+00   0.00000000e+00   0.00000000e+00
    0.00000000e+00   0.00000000e+00   0.00000000e+00   0.00000000e+00
    0.00000000e+00   0.00000000e+00]
 [  0.00000000e+00   0.00000000e+00   0.00000000e+00   0.00000000e+00
    0.00000000e+00   0.00000000e+00   0.00000000e+00   0.00000000e+00
    0.00000000e+00   0.00000000e+00   0.00000000e+00   0.00000000e+00
    0.00000000e+00   0.00000000e+00   0.00000000e+00   0.00000000e+00
    0.00000000e+00   0.00000000e+00]
 [  0.00000000e+00   0.00000000e+00   0.00000000e+00   0.00000000e+00
    0.00000000e+00   0.00000000e+00   0.00000000e+00   0.00000000e+00
    0.00000000e+00   0.00000000e+00   0.00000000e+00   0.00000000e+00
    0.00000000e+00   0.00000000e+00   0.00000000e+00   0.00000000e+00
    0.00000000e+00   0.00000000e+00]
 [  0.00000000e+00   0.00000000e+00   0.00000000e+00   0.00000000e+00
    0.00000000e+00   0.00000000e+00   0.00000000e+00   0.00000000e+00
    0.00000000e+00   0.00000000e+00   0.00000000e+00   0.00000000e+00
    0.00000000e+00   0.00000000e+00   0.00000000e+00   0.00000000e+00
    0.00000000e+00   0.00000000e+00]
 [  0.00000000e+00   0.00000000e+00   0.00000000e+00   0.00000000e+00
    0.00000000e+00   0.00000000e+00   0.00000000e+00   0.00000000e+00
    0.00000000e+00   0.00000000e+00   0.00000000e+00   0.00000000e+00
    0.00000000e+00   0.00000000e+00   0.00000000e+00   0.00000000e+00
    0.00000000e+00   0.00000000e+00]
 [  0.00000000e+00   0.00000000e+00   0.00000000e+00   0.00000000e+00
    0.00000000e+00   0.00000000e+00   0.00000000e+00   0.00000000e+00
    0.00000000e+00   0.00000000e+00   0.00000000e+00   0.00000000e+00
    0.00000000e+00   0.00000000e+00   0.00000000e+00   0.00000000e+00
    0.00000000e+00   0.00000000e+00]
 [  0.00000000e+00   0.00000000e+00   0.00000000e+00   0.00000000e+00
    0.00000000e+00   0.00000000e+00   0.00000000e+00   0.00000000e+00
    0.00000000e+00   0.00000000e+00   0.00000000e+00   0.00000000e+00
    0.00000000e+00   0.00000000e+00   0.00000000e+00   0.00000000e+00
    0.00000000e+00   0.00000000e+00]]
