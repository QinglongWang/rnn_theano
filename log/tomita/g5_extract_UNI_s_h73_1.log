G:g5, model:UNI sigmoid, load all data and stored hidden activations


--------------------------------------------------------------------
Begin DFA extraction with n_state:2
Done fitting takes time: 1.2888
==Minimized===

This DFA has 1 states
States: ['1']
Alphabet: set(['1', '0'])
Starting state: 1
Accepting states: []
Transition function:
	1
1 	1
0 	1
Current state: 1
Currently accepting: False

Precision: 0.0000 Recall: 0.0000 Accuracy: 0.5097 F1: 0.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:3
Done fitting takes time: 1.4306
==Minimized===

This DFA has 2 states
States: ['2', '1']
Alphabet: set(['1', '0'])
Starting state: 2
Accepting states: ['2']
Transition function:
	1	2
1 	1	1
0 	1	1
Current state: 2
Currently accepting: True

Precision: 0.0000 Recall: 0.0000 Accuracy: 0.5097 F1: 0.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:4
Done fitting takes time: 1.3838
==Minimized===

This DFA has 2 states
States: ['1', '3']
Alphabet: set(['1', '0'])
Starting state: 1
Accepting states: ['1']
Transition function:
	1	3
1 	3	1
0 	3	1
Current state: 1
Currently accepting: True

Precision: 0.5040 Recall: 1.0000 Accuracy: 0.5174 F1: 0.6702


--------------------------------------------------------------------
Begin DFA extraction with n_state:5
Done fitting takes time: 0.9150
==Minimized===

This DFA has 2 states
States: ['5', '3']
Alphabet: set(['1', '0'])
Starting state: 5
Accepting states: ['5']
Transition function:
	3	5
1 	5	3
0 	5	3
Current state: 5
Currently accepting: True

Precision: 0.5040 Recall: 1.0000 Accuracy: 0.5174 F1: 0.6702


--------------------------------------------------------------------
Begin DFA extraction with n_state:6
Done fitting takes time: 0.7474
==Minimized===

This DFA has 2 states
States: ['1', '3']
Alphabet: set(['1', '0'])
Starting state: 1
Accepting states: ['1']
Transition function:
	1	3
1 	3	1
0 	3	1
Current state: 1
Currently accepting: True

Precision: 0.5040 Recall: 1.0000 Accuracy: 0.5174 F1: 0.6702


--------------------------------------------------------------------
Begin DFA extraction with n_state:7
Done fitting takes time: 0.8165
==Minimized===

This DFA has 5 states
States: ['1', '2', '5', '4', '6']
Alphabet: set(['1', '0'])
Starting state: 2
Accepting states: ['1', '2', '5']
Transition function:
	1	2	4	5	6
1 	1	6	6	6	4
0 	2	1	1	6	5
Current state: 2
Currently accepting: True

Precision: 0.4506 Recall: 0.5549 Accuracy: 0.4500 F1: 0.4973


--------------------------------------------------------------------
Begin DFA extraction with n_state:8
Done fitting takes time: 0.5302
==Minimized===

This DFA has 6 states
States: ['2', '5', '1', '6', '4', '8']
Alphabet: set(['1', '0'])
Starting state: 2
Accepting states: ['1', '2', '5', '6']
Transition function:
	1	2	4	5	6	8
1 	1	8	8	6	5	4
0 	2	1	1	8	2	5
Current state: 2
Currently accepting: True

Precision: 0.2845 Recall: 0.4050 Accuracy: 0.2087 F1: 0.3342


--------------------------------------------------------------------
Begin DFA extraction with n_state:9
Done fitting takes time: 0.5467
==Minimized===

This DFA has 4 states
States: ['2', '7', '1', '3']
Alphabet: set(['1', '0'])
Starting state: 7
Accepting states: ['1', '3', '7']
Transition function:
	1	2	3	7
1 	3	2	1	2
0 	7	3	2	3
Current state: 7
Currently accepting: True

Precision: 0.1416 Recall: 0.1676 Accuracy: 0.0935 F1: 0.1535


--------------------------------------------------------------------
Begin DFA extraction with n_state:10
Done fitting takes time: 0.5486
==Minimized===

This DFA has 4 states
States: ['10', '7', '1', '3']
Alphabet: set(['1', '0'])
Starting state: 7
Accepting states: ['1', '3', '7']
Transition function:
	1	10	3	7
1 	3	10	1	10
0 	7	3	10	3
Current state: 7
Currently accepting: True

Precision: 0.1416 Recall: 0.1676 Accuracy: 0.0935 F1: 0.1535


--------------------------------------------------------------------
Begin DFA extraction with n_state:11
Done fitting takes time: 0.5428
==Minimized===

This DFA has 4 states
States: ['10', '7', '11', '1']
Alphabet: set(['1', '0'])
Starting state: 7
Accepting states: ['11', '1', '7']
Transition function:
	1	10	11	7
1 	11	10	1	10
0 	7	11	10	11
Current state: 7
Currently accepting: True

Precision: 0.1416 Recall: 0.1676 Accuracy: 0.0935 F1: 0.1535


--------------------------------------------------------------------
Begin DFA extraction with n_state:12
Done fitting takes time: 0.5575
==Minimized===

This DFA has 2 states
States: ['11', '10']
Alphabet: set(['1', '0'])
Starting state: 10
Accepting states: ['11']
Transition function:
	10	11
1 	10	11
0 	11	10
Current state: 10
Currently accepting: False

Precision: 0.0000 Recall: 0.0000 Accuracy: 0.0132 F1: 0.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:13
Done fitting takes time: 1.1137
==Minimized===

This DFA has 7 states
States: ['7', '12', '6', '11', '3', '10', '8']
Alphabet: set(['1', '0'])
Starting state: 7
Accepting states: ['11', '12', '3', '7', '6']
Transition function:
	10	11	12	3	6	7	8
1 	8	6	12	12	11	8	10
0 	3	8	7	10	7	3	11
Current state: 7
Currently accepting: True

Precision: 0.1844 Recall: 0.2300 Accuracy: 0.1237 F1: 0.2047


--------------------------------------------------------------------
Begin DFA extraction with n_state:14
Done fitting takes time: 0.5665
==Minimized===

This DFA has 2 states
States: ['11', '10']
Alphabet: set(['1', '0'])
Starting state: 11
Accepting states: ['11']
Transition function:
	10	11
1 	10	11
0 	11	10
Current state: 11
Currently accepting: True

Precision: 0.9738 Recall: 1.0000 Accuracy: 0.9868 F1: 0.9867


--------------------------------------------------------------------
Begin DFA extraction with n_state:15
Done fitting takes time: 0.5622
==Minimized===

This DFA has 9 states
States: ['15', '1', '12', '10', '6', '2', '8', '11', '13']
Alphabet: set(['1', '0'])
Starting state: 11
Accepting states: ['11', '13', '12', '1', '6']
Transition function:
	1	10	11	12	13	15	2	6	8
1 	12	8	6	1	6	1	8	11	10
0 	15	12	8	10	2	13	13	10	11
Current state: 11
Currently accepting: True

Precision: 0.7846 Recall: 0.8831 Accuracy: 0.8238 F1: 0.8309


--------------------------------------------------------------------
Begin DFA extraction with n_state:16
Done fitting takes time: 0.5799
==Minimized===

This DFA has 2 states
States: ['11', '10']
Alphabet: set(['1', '0'])
Starting state: 11
Accepting states: ['11']
Transition function:
	10	11
1 	10	11
0 	11	10
Current state: 11
Currently accepting: True

Precision: 0.9738 Recall: 1.0000 Accuracy: 0.9868 F1: 0.9867


--------------------------------------------------------------------
Begin DFA extraction with n_state:17
Done fitting takes time: 0.5618
==Minimized===

This DFA has 2 states
States: ['11', '10']
Alphabet: set(['1', '0'])
Starting state: 11
Accepting states: ['11']
Transition function:
	10	11
1 	10	11
0 	11	10
Current state: 11
Currently accepting: True

Precision: 0.9738 Recall: 1.0000 Accuracy: 0.9868 F1: 0.9867


--------------------------------------------------------------------
Begin DFA extraction with n_state:18
Done fitting takes time: 1.5307
==Minimized===

This DFA has 2 states
States: ['11', '10']
Alphabet: set(['1', '0'])
Starting state: 11
Accepting states: ['11']
Transition function:
	10	11
1 	10	11
0 	11	10
Current state: 11
Currently accepting: True

Precision: 0.9738 Recall: 1.0000 Accuracy: 0.9868 F1: 0.9867


--------------------------------------------------------------------
Begin DFA extraction with n_state:19
Done fitting takes time: 0.5802
==Minimized===

This DFA has 2 states
States: ['11', '10']
Alphabet: set(['1', '0'])
Starting state: 11
Accepting states: ['11']
Transition function:
	10	11
1 	10	11
0 	11	10
Current state: 11
Currently accepting: True

Precision: 0.9738 Recall: 1.0000 Accuracy: 0.9868 F1: 0.9867
[ 0.          0.          0.67020677  0.67020677  0.67020677  0.49731009
  0.33422486  0.15347405  0.15347405  0.15347405  0.          0.20472273
  0.986733    0.83090478  0.986733    0.986733    0.986733    0.986733  ]


[[ 0.          0.          0.          0.67020677  0.          0.67020677
   0.          0.36706168  0.518008    0.58418494  0.43979335  0.33978901
   0.47366388  0.17750544  0.38701995  0.24872727  0.58959881  0.49670812]
 [ 0.          0.          0.          0.          0.4957265   0.
   0.57339638  0.          0.          0.56864169  0.61618799  0.56864169
   0.56864169  0.56864169  0.61485158  0.49577397  0.63066762  0.6353045 ]
 [ 0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.        ]
 [ 0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.        ]
 [ 0.          0.          0.67020677  0.67020677  0.67020677  0.49731009
   0.33422486  0.15347405  0.15347405  0.15347405  0.          0.20472273
   0.986733    0.83090478  0.986733    0.986733    0.986733    0.986733  ]
 [ 0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.        ]
 [ 0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.        ]
 [ 0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.        ]
 [ 0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.        ]]
