G:g6, model:SRN tanh, load all data and stored hidden activations


--------------------------------------------------------------------
Begin DFA extraction with n_state:2
Done fitting takes time: 2.3210
==Minimized===

This DFA has 1 states
States: ['2']
Alphabet: set(['1', '0'])
Starting state: 2
Accepting states: []
Transition function:
	2
1 	2
0 	2
Current state: 2
Currently accepting: False

Precision: 0.0000 Recall: 0.0000 Accuracy: 0.5177 F1: 0.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:3
Done fitting takes time: 2.6609
==Minimized===

This DFA has 1 states
States: ['2']
Alphabet: set(['1', '0'])
Starting state: 2
Accepting states: []
Transition function:
	2
1 	2
0 	2
Current state: 2
Currently accepting: False

Precision: 0.0000 Recall: 0.0000 Accuracy: 0.5177 F1: 0.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:4
Done fitting takes time: 3.3013
==Minimized===

This DFA has 1 states
States: ['4']
Alphabet: set(['1', '0'])
Starting state: 4
Accepting states: []
Transition function:
	4
1 	4
0 	4
Current state: 4
Currently accepting: False

Precision: 0.0000 Recall: 0.0000 Accuracy: 0.5177 F1: 0.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:5
Done fitting takes time: 3.3290
==Minimized===

This DFA has 3 states
States: ['2', '1', '5']
Alphabet: set(['1', '0'])
Starting state: 1
Accepting states: ['1', '5']
Transition function:
	1	2	5
1 	1	1	2
0 	5	1	1
Current state: 1
Currently accepting: True

Precision: 0.4819 Recall: 0.8554 Accuracy: 0.4868 F1: 0.6165


--------------------------------------------------------------------
Begin DFA extraction with n_state:6
Done fitting takes time: 3.5300
==Minimized===

This DFA has 3 states
States: ['2', '5', '4']
Alphabet: set(['1', '0'])
Starting state: 4
Accepting states: ['5', '4']
Transition function:
	2	4	5
1 	4	4	2
0 	2	5	2
Current state: 4
Currently accepting: True

Precision: 0.4822 Recall: 0.6033 Accuracy: 0.4962 F1: 0.5360


--------------------------------------------------------------------
Begin DFA extraction with n_state:7
Done fitting takes time: 3.3528
==Minimized===

This DFA has 4 states
States: ['2', '5', '4', '7']
Alphabet: set(['1', '0'])
Starting state: 7
Accepting states: ['5', '4', '7']
Transition function:
	2	4	5	7
1 	4	4	2	4
0 	7	5	2	7
Current state: 7
Currently accepting: True

Precision: 0.4839 Recall: 0.8050 Accuracy: 0.4919 F1: 0.6045


--------------------------------------------------------------------
Begin DFA extraction with n_state:8
Done fitting takes time: 2.3434
==Minimized===

This DFA has 5 states
States: ['5', '4', '6', '2', '7']
Alphabet: set(['1', '0'])
Starting state: 7
Accepting states: ['5', '4']
Transition function:
	2	4	5	6	7
1 	4	4	2	7	4
0 	5	5	2	7	6
Current state: 7
Currently accepting: False

Precision: 0.4847 Recall: 0.6670 Accuracy: 0.4974 F1: 0.5614


--------------------------------------------------------------------
Begin DFA extraction with n_state:9
Done fitting takes time: 3.5170
==Minimized===

This DFA has 5 states
States: ['9', '5', '6', '2', '7']
Alphabet: set(['1', '0'])
Starting state: 7
Accepting states: ['9', '5']
Transition function:
	2	5	6	7	9
1 	9	2	7	9	9
0 	5	2	7	6	5
Current state: 7
Currently accepting: False

Precision: 0.4847 Recall: 0.6670 Accuracy: 0.4974 F1: 0.5614


--------------------------------------------------------------------
Begin DFA extraction with n_state:10
Done fitting takes time: 2.8244
==Minimized===

This DFA has 1 states
States: ['7']
Alphabet: set(['1', '0'])
Starting state: 7
Accepting states: []
Transition function:
	7
1 	7
0 	7
Current state: 7
Currently accepting: False

Precision: 0.0000 Recall: 0.0000 Accuracy: 0.5177 F1: 0.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:11
Done fitting takes time: 3.8253
==Minimized===

This DFA has 3 states
States: ['11', '7', '6']
Alphabet: set(['1', '0'])
Starting state: 7
Accepting states: ['11']
Transition function:
	11	6	7
1 	11	11	6
0 	11	11	6
Current state: 7
Currently accepting: False

Precision: 0.4823 Recall: 1.0000 Accuracy: 0.4824 F1: 0.6508


--------------------------------------------------------------------
Begin DFA extraction with n_state:12
Done fitting takes time: 4.4997
==Minimized===

This DFA has 6 states
States: ['9', '5', '11', '2', '7', '6']
Alphabet: set(['1', '0'])
Starting state: 7
Accepting states: ['9', '5']
Transition function:
	11	2	5	6	7	9
1 	9	9	2	11	6	9
0 	11	5	2	11	6	5
Current state: 7
Currently accepting: False

Precision: 0.4843 Recall: 0.6701 Accuracy: 0.4967 F1: 0.5622


--------------------------------------------------------------------
Begin DFA extraction with n_state:13
Done fitting takes time: 1.3343
==Minimized===

This DFA has 4 states
States: ['2', '5', '11', '13']
Alphabet: set(['1', '0'])
Starting state: 5
Accepting states: ['11', '13', '5']
Transition function:
	11	13	2	5
1 	13	13	13	2
0 	11	5	11	2
Current state: 5
Currently accepting: True

Precision: 0.4841 Recall: 0.8050 Accuracy: 0.4923 F1: 0.6046


--------------------------------------------------------------------
Begin DFA extraction with n_state:14
Done fitting takes time: 3.9233
==Minimized===

This DFA has 5 states
States: ['5', '11', '10', '2', '7']
Alphabet: set(['1', '0'])
Starting state: 7
Accepting states: ['11', '10', '5']
Transition function:
	10	11	2	5	7
1 	10	10	10	2	2
0 	5	11	11	2	2
Current state: 7
Currently accepting: False

Precision: 0.4841 Recall: 0.8050 Accuracy: 0.4923 F1: 0.6046


--------------------------------------------------------------------
Begin DFA extraction with n_state:15
Done fitting takes time: 5.9446
==Minimized===

This DFA has 4 states
States: ['15', '11', '7', '6']
Alphabet: set(['1', '0'])
Starting state: 7
Accepting states: ['15']
Transition function:
	11	15	6	7
1 	15	15	11	6
0 	15	15	11	6
Current state: 7
Currently accepting: False

Precision: 0.4823 Recall: 0.9997 Accuracy: 0.4824 F1: 0.6507


--------------------------------------------------------------------
Begin DFA extraction with n_state:16
Done fitting takes time: 5.3962
==Minimized===

This DFA has 6 states
States: ['5', '11', '15', '7', '2', '6']
Alphabet: set(['1', '0'])
Starting state: 7
Accepting states: ['11', '15', '5']
Transition function:
	11	15	2	5	6	7
1 	15	15	15	2	15	6
0 	11	5	5	2	11	6
Current state: 7
Currently accepting: False

Precision: 0.4840 Recall: 0.6713 Accuracy: 0.4964 F1: 0.5625


--------------------------------------------------------------------
Begin DFA extraction with n_state:17
Done fitting takes time: 4.7201
==Minimized===

This DFA has 6 states
States: ['7', '2', '14', '5', '11', '6']
Alphabet: set(['1', '0'])
Starting state: 7
Accepting states: ['14', '2', '5', '7']
Transition function:
	11	14	2	5	6	7
1 	14	14	14	14	11	14
0 	5	5	7	2	11	6
Current state: 7
Currently accepting: True

Precision: 0.4823 Recall: 0.9378 Accuracy: 0.4845 F1: 0.6370


--------------------------------------------------------------------
Begin DFA extraction with n_state:18
Done fitting takes time: 4.9148
==Minimized===

This DFA has 9 states
States: ['9', '7', '6', '18', '5', '15', '4', '11', '2']
Alphabet: set(['1', '0'])
Starting state: 7
Accepting states: ['15', '18', '5', '4', '9']
Transition function:
	11	15	18	2	4	5	6	7	9
1 	4	15	2	15	15	2	11	6	4
0 	18	5	9	18	18	2	11	6	9
Current state: 7
Currently accepting: False

Precision: 0.4842 Recall: 0.7909 Accuracy: 0.4928 F1: 0.6006


--------------------------------------------------------------------
Begin DFA extraction with n_state:19
Done fitting takes time: 4.7646
==Minimized===

This DFA has 15 states
States: ['9', '13', '4', '18', '11', '2', '15', '14', '17', '8', '12', '19', '5', '7', '6']
Alphabet: set(['1', '0'])
Starting state: 7
Accepting states: ['13', '15', '14', '18', '4', '9']
Transition function:
	11	12	13	14	15	17	18	19	2	4	5	6	7	8	9
1 	4	8	15	15	15	11	4	12	4	13	19	5	6	17	2
0 	11	8	14	11	9	11	11	12	18	18	19	5	6	17	2
Current state: 7
Currently accepting: False

Precision: 0.4858 Recall: 0.7219 Accuracy: 0.4973 F1: 0.5807
[ 0.          0.          0.          0.61650546  0.53599628  0.60446247
  0.56139064  0.56139064  0.          0.65078825  0.5622167   0.60462072
  0.60462072  0.65070902  0.5625      0.63695549  0.60062206  0.58072205]


[[ 0.          0.          0.          0.06207345  0.          0.          0.
   0.          0.0638195   0.27790885  0.56364558  0.          0.53138891
   0.          0.51129549  0.          0.21134868  0.59103699]
 [ 0.          0.          0.          0.61650546  0.53599628  0.60446247
   0.56139064  0.56139064  0.          0.65078825  0.5622167   0.60462072
   0.60462072  0.65070902  0.5625      0.63695549  0.60062206  0.58072205]
 [ 0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.        ]
 [ 0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.        ]
 [ 0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.        ]
 [ 0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.        ]
 [ 0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.        ]
 [ 0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.        ]
 [ 0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.        ]]
