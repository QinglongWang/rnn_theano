G:g7, model:O2 sigmoid, load all data and stored hidden activations


--------------------------------------------------------------------
Begin DFA extraction with n_state:2
Done fitting takes time: 0.1155
==Minimized===

This DFA has 1 states
States: ['2']
Alphabet: set(['1', '0'])
Starting state: 2
Accepting states: []
Transition function:
	2
1 	2
0 	2
Current state: 2
Currently accepting: False

Precision: 0.0000 Recall: 0.0000 Accuracy: 0.5731 F1: 0.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:3
Done fitting takes time: 0.0767
==Minimized===

This DFA has 1 states
States: ['1']
Alphabet: set(['1', '0'])
Starting state: 1
Accepting states: ['1']
Transition function:
	1
1 	1
0 	1
Current state: 1
Currently accepting: True

Precision: 0.4269 Recall: 1.0000 Accuracy: 0.4269 F1: 0.5983


--------------------------------------------------------------------
Begin DFA extraction with n_state:4
Done fitting takes time: 0.0901
==Minimized===

This DFA has 4 states
States: ['3', '4', '1', '2']
Alphabet: set(['1', '0'])
Starting state: 2
Accepting states: ['1', '2', '4']
Transition function:
	1	2	3	4
1 	4	2	3	4
0 	1	1	3	3
Current state: 2
Currently accepting: True

Precision: 1.0000 Recall: 0.3603 Accuracy: 0.7270 F1: 0.5298


--------------------------------------------------------------------
Begin DFA extraction with n_state:5
Done fitting takes time: 0.0853
==Minimized===

This DFA has 4 states
States: ['3', '4', '2', '5']
Alphabet: set(['1', '0'])
Starting state: 2
Accepting states: ['2', '5', '4']
Transition function:
	2	3	4	5
1 	2	3	4	4
0 	5	3	3	5
Current state: 2
Currently accepting: True

Precision: 1.0000 Recall: 0.3603 Accuracy: 0.7270 F1: 0.5298


--------------------------------------------------------------------
Begin DFA extraction with n_state:6
Done fitting takes time: 0.0913
==Minimized===

This DFA has 6 states
States: ['4', '5', '1', '2', '3', '6']
Alphabet: set(['1', '0'])
Starting state: 6
Accepting states: ['1', '2', '5', '4']
Transition function:
	1	2	3	4	5	6
1 	2	2	3	4	4	2
0 	1	5	3	3	5	1
Current state: 6
Currently accepting: False

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:7
Done fitting takes time: 0.1612
==Minimized===

This DFA has 6 states
States: ['4', '5', '1', '2', '3', '6']
Alphabet: set(['1', '0'])
Starting state: 6
Accepting states: ['1', '2', '5', '4']
Transition function:
	1	2	3	4	5	6
1 	2	2	3	4	4	2
0 	1	5	3	3	5	1
Current state: 6
Currently accepting: False

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:8
Done fitting takes time: 0.0941
==Minimized===

This DFA has 6 states
States: ['4', '5', '1', '2', '3', '6']
Alphabet: set(['1', '0'])
Starting state: 6
Accepting states: ['1', '2', '5', '4']
Transition function:
	1	2	3	4	5	6
1 	2	2	3	4	4	2
0 	1	5	3	3	5	1
Current state: 6
Currently accepting: False

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:9
Done fitting takes time: 0.0904
==Minimized===

This DFA has 6 states
States: ['4', '5', '1', '2', '3', '6']
Alphabet: set(['1', '0'])
Starting state: 6
Accepting states: ['1', '2', '5', '4']
Transition function:
	1	2	3	4	5	6
1 	2	2	3	4	4	2
0 	1	5	3	3	5	1
Current state: 6
Currently accepting: False

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:10
Done fitting takes time: 0.2099
==Minimized===

This DFA has 6 states
States: ['10', '5', '3', '6', '1', '2']
Alphabet: set(['1', '0'])
Starting state: 6
Accepting states: ['10', '1', '2', '5']
Transition function:
	1	10	2	3	5	6
1 	2	10	2	3	10	2
0 	1	3	5	3	5	1
Current state: 6
Currently accepting: False

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:11
Done fitting takes time: 0.1037
==Minimized===

This DFA has 6 states
States: ['10', '5', '11', '2', '3', '6']
Alphabet: set(['1', '0'])
Starting state: 6
Accepting states: ['11', '10', '2', '5']
Transition function:
	10	11	2	3	5	6
1 	10	2	2	3	10	2
0 	3	11	5	3	5	11
Current state: 6
Currently accepting: False

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:12
Done fitting takes time: 0.1021
==Minimized===

This DFA has 6 states
States: ['10', '5', '11', '2', '12', '6']
Alphabet: set(['1', '0'])
Starting state: 6
Accepting states: ['11', '10', '2', '5']
Transition function:
	10	11	12	2	5	6
1 	10	2	12	2	10	2
0 	12	11	12	5	5	11
Current state: 6
Currently accepting: False

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:13
Done fitting takes time: 0.1283
==Minimized===

This DFA has 6 states
States: ['10', '13', '11', '2', '12', '6']
Alphabet: set(['1', '0'])
Starting state: 6
Accepting states: ['11', '10', '13', '2']
Transition function:
	10	11	12	13	2	6
1 	10	2	12	10	2	2
0 	12	11	12	13	13	11
Current state: 6
Currently accepting: False

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:14
Done fitting takes time: 0.1124
==Minimized===

This DFA has 6 states
States: ['10', '13', '11', '2', '12', '6']
Alphabet: set(['1', '0'])
Starting state: 6
Accepting states: ['11', '10', '13', '2']
Transition function:
	10	11	12	13	2	6
1 	10	2	12	10	2	2
0 	12	11	12	13	13	11
Current state: 6
Currently accepting: False

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:15
Done fitting takes time: 0.1237
==Minimized===

This DFA has 6 states
States: ['10', '13', '11', '15', '12', '6']
Alphabet: set(['1', '0'])
Starting state: 6
Accepting states: ['11', '10', '13', '15']
Transition function:
	10	11	12	13	15	6
1 	10	15	12	10	15	15
0 	12	11	12	13	13	11
Current state: 6
Currently accepting: False

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:16
Done fitting takes time: 0.0983
==Minimized===

This DFA has 6 states
States: ['10', '13', '11', '15', '12', '6']
Alphabet: set(['1', '0'])
Starting state: 6
Accepting states: ['11', '10', '13', '15']
Transition function:
	10	11	12	13	15	6
1 	10	15	12	10	15	15
0 	12	11	12	13	13	11
Current state: 6
Currently accepting: False

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:17
Done fitting takes time: 0.1175
==Minimized===

This DFA has 6 states
States: ['10', '13', '11', '15', '12', '6']
Alphabet: set(['1', '0'])
Starting state: 6
Accepting states: ['11', '10', '13', '15']
Transition function:
	10	11	12	13	15	6
1 	10	15	12	10	15	15
0 	12	11	12	13	13	11
Current state: 6
Currently accepting: False

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:18
Done fitting takes time: 0.1088
==Minimized===

This DFA has 6 states
States: ['10', '13', '11', '15', '12', '6']
Alphabet: set(['1', '0'])
Starting state: 6
Accepting states: ['11', '10', '13', '15']
Transition function:
	10	11	12	13	15	6
1 	10	15	12	10	15	15
0 	12	11	12	13	13	11
Current state: 6
Currently accepting: False

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:19
Done fitting takes time: 0.1036
==Minimized===

This DFA has 6 states
States: ['10', '13', '11', '15', '12', '6']
Alphabet: set(['1', '0'])
Starting state: 6
Accepting states: ['11', '10', '13', '15']
Transition function:
	10	11	12	13	15	6
1 	10	15	12	10	15	15
0 	12	11	12	13	13	11
Current state: 6
Currently accepting: False

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000
[ 0.          0.59831461  0.52976704  0.52976704  1.          1.          1.
  1.          1.          1.          1.          1.          1.          1.
  1.          1.          1.          1.        ]


[[ 0.          0.59831461  0.59831461  0.59831461  0.02549247  0.02549247
   0.02549247  1.          1.          0.77208881  0.77208881  1.          1.
   1.          1.          1.          1.          1.        ]
 [ 0.          0.          0.58145815  0.34593725  0.50400427  0.
   0.43612597  0.32978723  0.27621483  0.13530655  0.13163482  0.42160738
   0.30246914  0.36702509  0.18341463  0.14887365  0.29927007  0.22634146]
 [ 0.          0.59831461  0.52976704  0.52976704  1.          1.          1.
   1.          1.          1.          1.          1.          1.          1.
   1.          1.          1.          1.        ]
 [ 0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.        ]
 [ 0.          0.59831461  0.59831461  0.63338376  0.59831461  0.67804878
   0.52976704  0.52976704  1.          1.          1.          1.          1.
   1.          1.          1.          1.          1.        ]
 [ 0.          0.          0.          0.17754011  0.17754011  0.17754011
   1.          1.          1.          1.          1.          1.          1.
   1.          1.          1.          1.          1.        ]
 [ 0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.        ]
 [ 0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.        ]
 [ 0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.        ]]
