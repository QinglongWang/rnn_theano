G:g5, model:SRN tanh, load all data and stored hidden activations


--------------------------------------------------------------------
Begin DFA extraction with n_state:2
Done fitting takes time: 0.7295
==Minimized===

This DFA has 1 states
States: ['1']
Alphabet: set(['1', '0'])
Starting state: 1
Accepting states: []
Transition function:
	1
1 	1
0 	1
Current state: 1
Currently accepting: False

Precision: 0.0000 Recall: 0.0000 Accuracy: 0.5097 F1: 0.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:3
Done fitting takes time: 0.7343
==Minimized===

This DFA has 1 states
States: ['1']
Alphabet: set(['1', '0'])
Starting state: 1
Accepting states: []
Transition function:
	1
1 	1
0 	1
Current state: 1
Currently accepting: False

Precision: 0.0000 Recall: 0.0000 Accuracy: 0.5097 F1: 0.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:4
Done fitting takes time: 0.6633
==Minimized===

This DFA has 1 states
States: ['1']
Alphabet: set(['1', '0'])
Starting state: 1
Accepting states: []
Transition function:
	1
1 	1
0 	1
Current state: 1
Currently accepting: False

Precision: 0.0000 Recall: 0.0000 Accuracy: 0.5097 F1: 0.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:5
Done fitting takes time: 0.7687
==Minimized===

This DFA has 1 states
States: ['1']
Alphabet: set(['1', '0'])
Starting state: 1
Accepting states: []
Transition function:
	1
1 	1
0 	1
Current state: 1
Currently accepting: False

Precision: 0.0000 Recall: 0.0000 Accuracy: 0.5097 F1: 0.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:6
Done fitting takes time: 1.1913
==Minimized===

This DFA has 1 states
States: ['1']
Alphabet: set(['1', '0'])
Starting state: 1
Accepting states: []
Transition function:
	1
1 	1
0 	1
Current state: 1
Currently accepting: False

Precision: 0.0000 Recall: 0.0000 Accuracy: 0.5097 F1: 0.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:7
Done fitting takes time: 1.0434
==Minimized===

This DFA has 4 states
States: ['1', '2', '3', '7']
Alphabet: set(['1', '0'])
Starting state: 1
Accepting states: ['3', '7']
Transition function:
	1	2	3	7
1 	3	2	1	2
0 	7	2	1	2
Current state: 1
Currently accepting: False

Precision: 0.0000 Recall: 0.0000 Accuracy: 0.5080 F1: 0.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:8
Done fitting takes time: 0.8000
==Minimized===

This DFA has 1 states
States: ['1']
Alphabet: set(['1', '0'])
Starting state: 1
Accepting states: []
Transition function:
	1
1 	1
0 	1
Current state: 1
Currently accepting: False

Precision: 0.0000 Recall: 0.0000 Accuracy: 0.5097 F1: 0.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:9
Done fitting takes time: 1.2873
==Minimized===

This DFA has 8 states
States: ['5', '9', '3', '4', '7', '8', '1', '2']
Alphabet: set(['1', '0'])
Starting state: 9
Accepting states: ['1', '8', '2', '5', '9']
Transition function:
	1	2	3	4	5	7	8	9
1 	7	7	3	2	2	2	4	9
0 	7	3	3	1	3	5	4	8
Current state: 9
Currently accepting: True

Precision: 0.4533 Recall: 0.0327 Accuracy: 0.5064 F1: 0.0609


--------------------------------------------------------------------
Begin DFA extraction with n_state:10
Done fitting takes time: 0.7403
==Minimized===

This DFA has 5 states
States: ['3', '5', '6', '1', '9']
Alphabet: set(['1', '0'])
Starting state: 9
Accepting states: ['5', '6']
Transition function:
	1	3	5	6	9
1 	9	6	9	3	1
0 	3	5	9	3	1
Current state: 9
Currently accepting: False

Precision: 0.0000 Recall: 0.0000 Accuracy: 0.4967 F1: 0.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:11
Done fitting takes time: 1.4048
==Minimized===

This DFA has 1 states
States: ['1']
Alphabet: set(['1', '0'])
Starting state: 1
Accepting states: []
Transition function:
	1
1 	1
0 	1
Current state: 1
Currently accepting: False

Precision: 0.0000 Recall: 0.0000 Accuracy: 0.5097 F1: 0.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:12
Done fitting takes time: 0.8415
==Minimized===

This DFA has 6 states
States: ['7', '2', '4', '8', '10', '9']
Alphabet: set(['1', '0'])
Starting state: 9
Accepting states: ['7']
Transition function:
	10	2	4	7	8	9
1 	8	9	2	2	4	10
0 	8	7	2	2	4	10
Current state: 9
Currently accepting: False

Precision: 0.5189 Recall: 0.1681 Accuracy: 0.5157 F1: 0.2539


--------------------------------------------------------------------
Begin DFA extraction with n_state:13
Done fitting takes time: 1.2016
==Minimized===

This DFA has 11 states
States: ['7', '2', '4', '8', '10', '9', '5', '3', '6', '1', '13']
Alphabet: set(['1', '0'])
Starting state: 9
Accepting states: ['1', '13']
Transition function:
	1	10	13	2	3	4	5	6	7	8	9
1 	3	8	5	7	6	2	9	3	1	4	10
0 	3	8	5	7	6	2	13	13	2	4	10
Current state: 9
Currently accepting: False

Precision: 0.4635 Recall: 0.0715 Accuracy: 0.5041 F1: 0.1240


--------------------------------------------------------------------
Begin DFA extraction with n_state:14
Done fitting takes time: 1.3617
==Minimized===

This DFA has 8 states
States: ['1', '4', '8', '10', '9', '3', '2', '5']
Alphabet: set(['1', '0'])
Starting state: 9
Accepting states: ['1']
Transition function:
	1	10	2	3	4	5	8	9
1 	3	8	9	5	2	9	4	10
0 	3	8	3	5	1	9	4	10
Current state: 9
Currently accepting: False

Precision: 0.4943 Recall: 0.0619 Accuracy: 0.5089 F1: 0.1101


--------------------------------------------------------------------
Begin DFA extraction with n_state:15
Done fitting takes time: 0.8552
==Minimized===

This DFA has 8 states
States: ['1', '9', '11', '2', '12', '8', '3', '4']
Alphabet: set(['1', '0'])
Starting state: 9
Accepting states: ['1']
Transition function:
	1	11	12	2	3	4	8	9
1 	3	9	8	9	11	2	4	1
0 	3	9	8	3	11	2	4	12
Current state: 9
Currently accepting: False

Precision: 0.4866 Recall: 0.1044 Accuracy: 0.5068 F1: 0.1720


--------------------------------------------------------------------
Begin DFA extraction with n_state:16
Done fitting takes time: 0.7314
==Minimized===

This DFA has 7 states
States: ['5', '15', '3', '1', '9', '16', '2']
Alphabet: set(['1', '0'])
Starting state: 9
Accepting states: ['15', '3']
Transition function:
	1	15	16	2	3	5	9
1 	9	2	2	9	1	15	1
0 	3	2	2	9	5	16	1
Current state: 9
Currently accepting: False

Precision: 0.5034 Recall: 0.4146 Accuracy: 0.5124 F1: 0.4547


--------------------------------------------------------------------
Begin DFA extraction with n_state:17
Done fitting takes time: 0.9225
==Minimized===

This DFA has 5 states
States: ['9', '2', '3', '10', '8']
Alphabet: set(['1', '0'])
Starting state: 9
Accepting states: ['9']
Transition function:
	10	2	3	8	9
1 	8	9	2	3	10
0 	8	3	2	3	10
Current state: 9
Currently accepting: True

Precision: 0.4922 Recall: 0.1587 Accuracy: 0.5072 F1: 0.2400


--------------------------------------------------------------------
Begin DFA extraction with n_state:18
Done fitting takes time: 0.9521
==Minimized===

This DFA has 2 states
States: ['9', '11']
Alphabet: set(['1', '0'])
Starting state: 9
Accepting states: ['9']
Transition function:
	11	9
1 	11	11
0 	11	11
Current state: 9
Currently accepting: True

Precision: 0.0000 Recall: 0.0000 Accuracy: 0.5097 F1: 0.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:19
Done fitting takes time: 1.6789
==Minimized===

This DFA has 14 states
States: ['15', '14', '11', '5', '10', '8', '1', '9', '13', '16', '19', '6', '18', '3']
Alphabet: set(['1', '0'])
Starting state: 9
Accepting states: ['15', '1', '9']
Transition function:
	1	10	11	13	14	15	16	18	19	3	5	6	8	9
1 	3	8	14	5	1	1	11	19	16	6	14	13	18	10
0 	3	8	14	5	1	15	11	19	16	6	15	13	18	10
Current state: 9
Currently accepting: True

Precision: 0.4961 Recall: 0.3020 Accuracy: 0.5073 F1: 0.3755
[ 0.          0.          0.          0.          0.          0.          0.
  0.06091825  0.          0.          0.25389917  0.12396007  0.11009174
  0.17197075  0.45471301  0.24001452  0.          0.37546635]


[[ 0.          0.          0.67020677  0.67020677  0.67020677  0.67020677
   0.67020677  0.67020677  0.67020677  0.67020677  0.67020677  0.45376599
   0.67020677  0.59414955  0.49560976  0.3646007   0.18867925  0.3616531 ]
 [ 0.          0.          0.          0.          0.          0.          0.
   0.06091825  0.          0.          0.25389917  0.12396007  0.11009174
   0.17197075  0.45471301  0.24001452  0.          0.37546635]
 [ 0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.        ]
 [ 0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.        ]
 [ 0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.        ]
 [ 0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.        ]
 [ 0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.        ]
 [ 0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.        ]
 [ 0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.        ]]
