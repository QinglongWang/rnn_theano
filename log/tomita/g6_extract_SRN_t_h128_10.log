G:g6, model:SRN tanh, load all data and stored hidden activations


--------------------------------------------------------------------
Begin DFA extraction with n_state:2
Done fitting takes time: 2.3515
==Minimized===

This DFA has 1 states
States: ['2']
Alphabet: set(['1', '0'])
Starting state: 2
Accepting states: []
Transition function:
	2
1 	2
0 	2
Current state: 2
Currently accepting: False

Precision: 0.0000 Recall: 0.0000 Accuracy: 0.5177 F1: 0.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:3
Done fitting takes time: 1.1653
==Minimized===

This DFA has 3 states
States: ['3', '1', '2']
Alphabet: set(['1', '0'])
Starting state: 3
Accepting states: ['1', '2']
Transition function:
	1	2	3
1 	1	3	1
0 	2	3	2
Current state: 3
Currently accepting: False

Precision: 0.4843 Recall: 0.6703 Accuracy: 0.4967 F1: 0.5623


--------------------------------------------------------------------
Begin DFA extraction with n_state:4
Done fitting takes time: 3.0365
==Minimized===

This DFA has 1 states
States: ['3']
Alphabet: set(['1', '0'])
Starting state: 3
Accepting states: ['3']
Transition function:
	3
1 	3
0 	3
Current state: 3
Currently accepting: True

Precision: 0.4823 Recall: 1.0000 Accuracy: 0.4823 F1: 0.6507


--------------------------------------------------------------------
Begin DFA extraction with n_state:5
Done fitting takes time: 2.3775
==Minimized===

This DFA has 2 states
States: ['2', '3']
Alphabet: set(['1', '0'])
Starting state: 3
Accepting states: ['2']
Transition function:
	2	3
1 	3	3
0 	2	2
Current state: 3
Currently accepting: False

Precision: 0.4792 Recall: 0.4974 Accuracy: 0.4969 F1: 0.4881


--------------------------------------------------------------------
Begin DFA extraction with n_state:6
Done fitting takes time: 3.4853
==Minimized===

This DFA has 1 states
States: ['3']
Alphabet: set(['1', '0'])
Starting state: 3
Accepting states: []
Transition function:
	3
1 	3
0 	3
Current state: 3
Currently accepting: False

Precision: 0.0000 Recall: 0.0000 Accuracy: 0.5177 F1: 0.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:7
Done fitting takes time: 3.3093
==Minimized===

This DFA has 3 states
States: ['7', '3', '2']
Alphabet: set(['1', '0'])
Starting state: 3
Accepting states: ['3', '2']
Transition function:
	2	3	7
1 	3	7	3
0 	2	7	2
Current state: 3
Currently accepting: True

Precision: 0.4779 Recall: 0.6603 Accuracy: 0.4882 F1: 0.5545


--------------------------------------------------------------------
Begin DFA extraction with n_state:8
Done fitting takes time: 1.1863
==Minimized===

This DFA has 6 states
States: ['7', '1', '5', '8', '3', '2']
Alphabet: set(['1', '0'])
Starting state: 3
Accepting states: ['1', '5', '7']
Transition function:
	1	2	3	5	7	8
1 	1	3	8	1	2	1
0 	5	3	8	7	2	7
Current state: 3
Currently accepting: False

Precision: 0.4796 Recall: 0.5662 Accuracy: 0.4945 F1: 0.5193


--------------------------------------------------------------------
Begin DFA extraction with n_state:9
Done fitting takes time: 3.2028
==Minimized===

This DFA has 9 states
States: ['2', '3', '4', '9', '1', '5', '6', '7', '8']
Alphabet: set(['1', '0'])
Starting state: 3
Accepting states: ['3', '2', '4']
Transition function:
	1	2	3	4	5	6	7	8	9
1 	9	4	8	1	1	5	6	7	3
0 	9	2	8	4	1	5	6	7	2
Current state: 3
Currently accepting: True

Precision: 0.4876 Recall: 0.3810 Accuracy: 0.5084 F1: 0.4277


--------------------------------------------------------------------
Begin DFA extraction with n_state:10
Done fitting takes time: 2.7811
==Minimized===

This DFA has 10 states
States: ['1', '5', '4', '6', '10', '2', '7', '8', '3', '9']
Alphabet: set(['1', '0'])
Starting state: 10
Accepting states: ['1', '10', '2', '5', '4']
Transition function:
	1	10	2	3	4	5	6	7	8	9
1 	9	4	4	3	1	1	5	6	7	3
0 	9	8	10	3	10	5	2	6	7	2
Current state: 10
Currently accepting: True

Precision: 0.4755 Recall: 0.2452 Accuracy: 0.5055 F1: 0.3236


--------------------------------------------------------------------
Begin DFA extraction with n_state:11
Done fitting takes time: 2.7368
==Minimized===

This DFA has 9 states
States: ['4', '10', '3', '2', '7', '1', '6', '11', '8']
Alphabet: set(['1', '0'])
Starting state: 10
Accepting states: ['10', '3', '4']
Transition function:
	1	10	11	2	3	4	6	7	8
1 	1	4	6	4	4	7	1	2	11
0 	3	8	6	10	3	7	1	2	11
Current state: 10
Currently accepting: True

Precision: 0.4836 Recall: 0.3860 Accuracy: 0.5051 F1: 0.4293


--------------------------------------------------------------------
Begin DFA extraction with n_state:12
Done fitting takes time: 2.6683
==Minimized===

This DFA has 10 states
States: ['3', '2', '10', '5', '4', '6', '11', '8', '12', '7']
Alphabet: set(['1', '0'])
Starting state: 10
Accepting states: ['3', '2', '10']
Transition function:
	10	11	12	2	3	4	5	6	7	8
1 	3	6	5	3	7	3	3	12	4	11
0 	8	6	5	4	7	10	2	12	4	11
Current state: 10
Currently accepting: True

Precision: 0.4839 Recall: 0.3316 Accuracy: 0.5071 F1: 0.3935


--------------------------------------------------------------------
Begin DFA extraction with n_state:13
Done fitting takes time: 3.5625
==Minimized===

This DFA has 11 states
States: ['1', '4', '10', '7', '9', '5', '12', '6', '13', '3', '8']
Alphabet: set(['1', '0'])
Starting state: 10
Accepting states: ['10', '1', '4', '7']
Transition function:
	1	10	12	13	3	4	5	6	7	8	9
1 	9	4	5	6	3	1	3	12	4	13	4
0 	9	8	5	6	3	7	7	12	10	13	10
Current state: 10
Currently accepting: True

Precision: 0.4812 Recall: 0.3018 Accuracy: 0.5064 F1: 0.3710


--------------------------------------------------------------------
Begin DFA extraction with n_state:14
Done fitting takes time: 3.0108
==Minimized===

This DFA has 13 states
States: ['4', '12', '14', '2', '3', '7', '10', '1', '5', '9', '6', '13', '8']
Alphabet: set(['1', '0'])
Starting state: 10
Accepting states: ['10', '12', '1', '3', '2', '4', '7']
Transition function:
	1	10	12	13	14	2	3	4	5	6	7	8	9
1 	9	8	12	6	5	4	4	1	12	14	4	13	12
0 	9	8	3	6	5	10	3	7	7	14	2	13	2
Current state: 10
Currently accepting: True

Precision: 0.4865 Recall: 0.7189 Accuracy: 0.4985 F1: 0.5803


--------------------------------------------------------------------
Begin DFA extraction with n_state:15
Done fitting takes time: 3.0681
==Minimized===

This DFA has 13 states
States: ['3', '4', '2', '14', '6', '13', '12', '1', '10', '5', '9', '7', '8']
Alphabet: set(['1', '0'])
Starting state: 10
Accepting states: ['10', '3', '4', '7', '8']
Transition function:
	1	10	12	13	14	2	3	4	5	6	7	8	9
1 	13	1	12	6	5	8	8	8	12	14	2	9	12
0 	13	1	12	6	5	7	4	7	7	14	2	9	3
Current state: 10
Currently accepting: True

Precision: 0.4803 Recall: 0.1107 Accuracy: 0.5134 F1: 0.1799


--------------------------------------------------------------------
Begin DFA extraction with n_state:16
Done fitting takes time: 3.0386
==Minimized===

This DFA has 13 states
States: ['4', '9', '3', '14', '12', '1', '6', '13', '8', '10', '16', '2', '5']
Alphabet: set(['1', '0'])
Starting state: 10
Accepting states: ['10', '12', '16', '1', '3', '4', '9']
Transition function:
	1	10	12	13	14	16	2	3	4	5	6	8	9
1 	1	8	12	6	5	2	10	4	1	12	14	13	12
0 	9	8	3	6	5	2	16	3	16	12	14	13	2
Current state: 10
Currently accepting: True

Precision: 0.4801 Recall: 0.6426 Accuracy: 0.4920 F1: 0.5496


--------------------------------------------------------------------
Begin DFA extraction with n_state:17
Done fitting takes time: 3.0224
==Minimized===

This DFA has 11 states
States: ['17', '16', '3', '12', '1', '14', '6', '13', '8', '10', '2']
Alphabet: set(['1', '0'])
Starting state: 10
Accepting states: ['17', '16']
Transition function:
	1	10	12	13	14	16	17	2	3	6	8
1 	12	8	3	6	1	2	17	10	3	14	13
0 	12	8	3	6	1	2	16	10	17	14	13
Current state: 10
Currently accepting: False

Precision: 0.4866 Recall: 0.2743 Accuracy: 0.5104 F1: 0.3508


--------------------------------------------------------------------
Begin DFA extraction with n_state:18
Done fitting takes time: 2.1551
==Minimized===

This DFA has 12 states
States: ['3', '2', '1', '14', '6', '13', '8', '10', '12', '9', '17', '16']
Alphabet: set(['1', '0'])
Starting state: 10
Accepting states: ['10', '17', '16', '3']
Transition function:
	1	10	12	13	14	16	17	2	3	6	8	9
1 	12	8	12	6	1	2	9	17	2	14	13	12
0 	12	8	3	6	1	2	9	16	3	14	13	16
Current state: 10
Currently accepting: True

Precision: 0.4867 Recall: 0.4800 Accuracy: 0.5051 F1: 0.4833


--------------------------------------------------------------------
Begin DFA extraction with n_state:19
Done fitting takes time: 2.8654
==Minimized===

This DFA has 11 states
States: ['12', '1', '5', '14', '6', '13', '8', '10', '16', '19', '2']
Alphabet: set(['1', '0'])
Starting state: 10
Accepting states: ['10', '12', '16', '1']
Transition function:
	1	10	12	13	14	16	19	2	5	6	8
1 	1	8	1	6	5	19	1	12	2	14	13
0 	16	8	12	6	5	19	16	19	2	14	13
Current state: 10
Currently accepting: True

Precision: 0.4862 Recall: 0.6806 Accuracy: 0.4992 F1: 0.5672
[ 0.          0.5622807   0.65071445  0.48811356  0.          0.55447428
  0.51929993  0.4277468   0.32355985  0.42934677  0.39354772  0.37099711
  0.5802912   0.17988669  0.54956029  0.35083027  0.48332748  0.56721621]


[[ 0.          0.          0.01439589  0.06207345  0.06207345  0.06207345
   0.          0.57744528  0.58477366  0.55447428  0.29064818  0.22062999
   0.27464174  0.1187905   0.          0.          0.31092338  0.59101909]
 [ 0.          0.5622807   0.65071445  0.48811356  0.          0.55447428
   0.51929993  0.4277468   0.32355985  0.42934677  0.39354772  0.37099711
   0.5802912   0.17988669  0.54956029  0.35083027  0.48332748  0.56721621]
 [ 0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.        ]
 [ 0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.        ]
 [ 0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.        ]
 [ 0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.        ]
 [ 0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.        ]
 [ 0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.        ]
 [ 0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.        ]]
