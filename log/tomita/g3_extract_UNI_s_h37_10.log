G:g3, model:UNI sigmoid, load all data and stored hidden activations


--------------------------------------------------------------------
Begin DFA extraction with n_state:2
Done fitting takes time: 0.1888
==Minimized===

This DFA has 1 states
States: ['1']
Alphabet: set(['1', '0'])
Starting state: 1
Accepting states: ['1']
Transition function:
	1
1 	1
0 	1
Current state: 1
Currently accepting: True

Precision: 0.4578 Recall: 1.0000 Accuracy: 0.4578 F1: 0.6280


--------------------------------------------------------------------
Begin DFA extraction with n_state:3
Done fitting takes time: 0.4829
==Minimized===

This DFA has 1 states
States: ['3']
Alphabet: set(['1', '0'])
Starting state: 3
Accepting states: ['3']
Transition function:
	3
1 	3
0 	3
Current state: 3
Currently accepting: True

Precision: 0.4578 Recall: 1.0000 Accuracy: 0.4578 F1: 0.6280


--------------------------------------------------------------------
Begin DFA extraction with n_state:4
Done fitting takes time: 0.1972
==Minimized===

This DFA has 2 states
States: ['2', '3']
Alphabet: set(['1', '0'])
Starting state: 3
Accepting states: ['2']
Transition function:
	2	3
1 	3	3
0 	3	2
Current state: 3
Currently accepting: False

Precision: 0.1926 Recall: 0.1079 Accuracy: 0.3846 F1: 0.1383


--------------------------------------------------------------------
Begin DFA extraction with n_state:5
Done fitting takes time: 0.1979
==Minimized===

This DFA has 1 states
States: ['3']
Alphabet: set(['1', '0'])
Starting state: 3
Accepting states: ['3']
Transition function:
	3
1 	3
0 	3
Current state: 3
Currently accepting: True

Precision: 0.4578 Recall: 1.0000 Accuracy: 0.4578 F1: 0.6280


--------------------------------------------------------------------
Begin DFA extraction with n_state:6
Done fitting takes time: 0.2016
==Minimized===

This DFA has 3 states
States: ['3', '1', '2']
Alphabet: set(['1', '0'])
Starting state: 3
Accepting states: ['3']
Transition function:
	1	2	3
1 	1	1	3
0 	1	3	2
Current state: 3
Currently accepting: True

Precision: 1.0000 Recall: 0.2980 Accuracy: 0.6787 F1: 0.4592


--------------------------------------------------------------------
Begin DFA extraction with n_state:7
Done fitting takes time: 0.2067
==Minimized===

This DFA has 4 states
States: ['3', '7', '1', '2']
Alphabet: set(['1', '0'])
Starting state: 7
Accepting states: ['3', '7']
Transition function:
	1	2	3	7
1 	1	1	7	3
0 	1	3	2	7
Current state: 7
Currently accepting: True

Precision: 0.9005 Recall: 1.0000 Accuracy: 0.9494 F1: 0.9477


--------------------------------------------------------------------
Begin DFA extraction with n_state:8
Done fitting takes time: 0.5436
==Minimized===

This DFA has 4 states
States: ['8', '3', '1', '2']
Alphabet: set(['1', '0'])
Starting state: 8
Accepting states: ['8', '3']
Transition function:
	1	2	3	8
1 	1	1	8	3
0 	1	3	2	8
Current state: 8
Currently accepting: True

Precision: 0.9005 Recall: 1.0000 Accuracy: 0.9494 F1: 0.9477


--------------------------------------------------------------------
Begin DFA extraction with n_state:9
Done fitting takes time: 0.4886
==Minimized===

This DFA has 4 states
States: ['9', '3', '1', '2']
Alphabet: set(['1', '0'])
Starting state: 9
Accepting states: ['9', '3']
Transition function:
	1	2	3	9
1 	1	1	9	3
0 	1	9	2	9
Current state: 9
Currently accepting: True

Precision: 0.8304 Recall: 1.0000 Accuracy: 0.9065 F1: 0.9073


--------------------------------------------------------------------
Begin DFA extraction with n_state:10
Done fitting takes time: 0.5382
==Minimized===

This DFA has 4 states
States: ['9', '3', '10', '2']
Alphabet: set(['1', '0'])
Starting state: 9
Accepting states: ['9', '3']
Transition function:
	10	2	3	9
1 	10	10	9	3
0 	10	9	2	9
Current state: 9
Currently accepting: True

Precision: 0.8304 Recall: 1.0000 Accuracy: 0.9065 F1: 0.9073


--------------------------------------------------------------------
Begin DFA extraction with n_state:11
Done fitting takes time: 0.4287
==Minimized===

This DFA has 4 states
States: ['9', '3', '11', '2']
Alphabet: set(['1', '0'])
Starting state: 9
Accepting states: ['9', '3']
Transition function:
	11	2	3	9
1 	11	11	9	3
0 	11	9	2	9
Current state: 9
Currently accepting: True

Precision: 0.8304 Recall: 1.0000 Accuracy: 0.9065 F1: 0.9073


--------------------------------------------------------------------
Begin DFA extraction with n_state:12
Done fitting takes time: 0.6149
==Minimized===

This DFA has 5 states
States: ['7', '12', '3', '11', '2']
Alphabet: set(['1', '0'])
Starting state: 7
Accepting states: ['12', '3', '7']
Transition function:
	11	12	2	3	7
1 	11	3	11	7	3
0 	11	2	12	2	7
Current state: 7
Currently accepting: True

Precision: 0.9447 Recall: 1.0000 Accuracy: 0.9732 F1: 0.9716


--------------------------------------------------------------------
Begin DFA extraction with n_state:13
Done fitting takes time: 0.6069
==Minimized===

This DFA has 5 states
States: ['7', '12', '3', '11', '2']
Alphabet: set(['1', '0'])
Starting state: 7
Accepting states: ['12', '3', '7']
Transition function:
	11	12	2	3	7
1 	11	3	11	7	3
0 	11	2	12	2	7
Current state: 7
Currently accepting: True

Precision: 0.9447 Recall: 1.0000 Accuracy: 0.9732 F1: 0.9716


--------------------------------------------------------------------
Begin DFA extraction with n_state:14
Done fitting takes time: 0.9569
==Minimized===

This DFA has 6 states
States: ['7', '12', '3', '9', '11', '2']
Alphabet: set(['1', '0'])
Starting state: 9
Accepting states: ['12', '3', '7']
Transition function:
	11	12	2	3	7	9
1 	11	12	11	7	3	3
0 	11	2	12	2	7	7
Current state: 9
Currently accepting: False

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:15
Done fitting takes time: 0.8229
==Minimized===

This DFA has 6 states
States: ['15', '12', '3', '9', '11', '2']
Alphabet: set(['1', '0'])
Starting state: 9
Accepting states: ['12', '15', '3']
Transition function:
	11	12	15	2	3	9
1 	11	12	3	11	15	3
0 	11	2	15	12	2	15
Current state: 9
Currently accepting: False

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:16
Done fitting takes time: 0.2280
==Minimized===

This DFA has 6 states
States: ['15', '12', '16', '9', '11', '2']
Alphabet: set(['1', '0'])
Starting state: 9
Accepting states: ['12', '15', '16']
Transition function:
	11	12	15	16	2	9
1 	11	12	16	15	11	16
0 	11	2	15	2	12	15
Current state: 9
Currently accepting: False

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:17
Done fitting takes time: 0.8197
==Minimized===

This DFA has 6 states
States: ['15', '12', '16', '9', '11', '2']
Alphabet: set(['1', '0'])
Starting state: 9
Accepting states: ['12', '15', '16']
Transition function:
	11	12	15	16	2	9
1 	11	12	16	15	11	16
0 	11	2	15	2	12	15
Current state: 9
Currently accepting: False

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:18
Done fitting takes time: 0.2293
==Minimized===

This DFA has 6 states
States: ['15', '12', '16', '9', '11', '2']
Alphabet: set(['1', '0'])
Starting state: 9
Accepting states: ['12', '15', '16']
Transition function:
	11	12	15	16	2	9
1 	11	12	16	15	11	16
0 	11	2	15	2	12	15
Current state: 9
Currently accepting: False

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:19
Done fitting takes time: 0.2316
==Minimized===

This DFA has 6 states
States: ['15', '12', '16', '9', '11', '2']
Alphabet: set(['1', '0'])
Starting state: 9
Accepting states: ['12', '15', '16']
Transition function:
	11	12	15	16	2	9
1 	11	12	16	15	11	16
0 	11	2	15	2	12	15
Current state: 9
Currently accepting: False

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000
[ 0.6280285   0.6280285   0.13833226  0.6280285   0.45920746  0.94767025
  0.94767025  0.90734386  0.90734386  0.90734386  0.97158256  0.97158256
  1.          1.          1.          1.          1.          1.        ]


[[ 0.          0.          0.6280285   0.61434263  0.6280285   0.6280285
   0.70852221  0.6280285   0.6280285   0.55989515  0.43062873  0.73395371
   0.73395371  0.73395371  0.83428261  0.83428261  1.          1.        ]
 [ 0.          0.          0.          0.          0.          0.56060881
   0.29994435  0.0292113   0.12342342  0.35825748  0.50166429  0.21617294
   0.02242808  0.41410317  0.28184282  0.50940799  0.41410317  0.46753247]
 [ 0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.        ]
 [ 0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.        ]
 [ 0.6280285   0.6280285   0.13833226  0.6280285   0.45920746  0.94767025
   0.94767025  0.90734386  0.90734386  0.90734386  0.97158256  0.97158256
   1.          1.          1.          1.          1.          1.        ]
 [ 0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.        ]
 [ 0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.        ]
 [ 0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.        ]
 [ 0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.        ]]
