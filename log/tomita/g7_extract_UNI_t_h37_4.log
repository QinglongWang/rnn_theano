G:g7, model:UNI tanh, load all data and stored hidden activations


--------------------------------------------------------------------
Begin DFA extraction with n_state:2
Done fitting takes time: 0.2265
==Minimized===

This DFA has 1 states
States: ['1']
Alphabet: set(['1', '0'])
Starting state: 1
Accepting states: []
Transition function:
	1
1 	1
0 	1
Current state: 1
Currently accepting: False

Precision: 0.0000 Recall: 0.0000 Accuracy: 0.5731 F1: 0.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:3
Done fitting takes time: 0.0775
==Minimized===

This DFA has 1 states
States: ['2']
Alphabet: set(['1', '0'])
Starting state: 2
Accepting states: []
Transition function:
	2
1 	2
0 	2
Current state: 2
Currently accepting: False

Precision: 0.0000 Recall: 0.0000 Accuracy: 0.5731 F1: 0.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:4
Done fitting takes time: 0.0884
==Minimized===

This DFA has 3 states
States: ['3', '2', '4']
Alphabet: set(['1', '0'])
Starting state: 2
Accepting states: ['2', '4']
Transition function:
	2	3	4
1 	4	3	4
0 	2	3	3
Current state: 2
Currently accepting: True

Precision: 1.0000 Recall: 0.0974 Accuracy: 0.6147 F1: 0.1775


--------------------------------------------------------------------
Begin DFA extraction with n_state:5
Done fitting takes time: 0.0900
==Minimized===

This DFA has 4 states
States: ['3', '4', '2', '5']
Alphabet: set(['1', '0'])
Starting state: 5
Accepting states: ['2', '5', '4']
Transition function:
	2	3	4	5
1 	4	3	4	5
0 	2	3	3	2
Current state: 5
Currently accepting: True

Precision: 1.0000 Recall: 0.3603 Accuracy: 0.7270 F1: 0.5298


--------------------------------------------------------------------
Begin DFA extraction with n_state:6
Done fitting takes time: 0.0847
==Minimized===

This DFA has 6 states
States: ['4', '2', '1', '6', '3', '5']
Alphabet: set(['1', '0'])
Starting state: 5
Accepting states: ['1', '2', '4', '6']
Transition function:
	1	2	3	4	5	6
1 	6	4	3	4	6	6
0 	1	2	3	3	1	2
Current state: 5
Currently accepting: False

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:7
Done fitting takes time: 0.0898
==Minimized===

This DFA has 6 states
States: ['4', '2', '1', '6', '3', '5']
Alphabet: set(['1', '0'])
Starting state: 5
Accepting states: ['1', '2', '4', '6']
Transition function:
	1	2	3	4	5	6
1 	6	4	3	4	6	6
0 	1	2	3	3	1	2
Current state: 5
Currently accepting: False

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:8
Done fitting takes time: 0.1921
==Minimized===

This DFA has 6 states
States: ['4', '2', '1', '6', '3', '5']
Alphabet: set(['1', '0'])
Starting state: 5
Accepting states: ['1', '2', '4', '6']
Transition function:
	1	2	3	4	5	6
1 	6	4	3	4	6	6
0 	1	2	3	3	1	2
Current state: 5
Currently accepting: False

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:9
Done fitting takes time: 0.0994
==Minimized===

This DFA has 6 states
States: ['4', '2', '1', '6', '3', '5']
Alphabet: set(['1', '0'])
Starting state: 5
Accepting states: ['1', '2', '4', '6']
Transition function:
	1	2	3	4	5	6
1 	6	4	3	4	6	6
0 	1	2	3	3	1	2
Current state: 5
Currently accepting: False

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:10
Done fitting takes time: 0.0883
==Minimized===

This DFA has 6 states
States: ['4', '2', '10', '1', '3', '5']
Alphabet: set(['1', '0'])
Starting state: 5
Accepting states: ['10', '1', '2', '4']
Transition function:
	1	10	2	3	4	5
1 	10	10	4	3	4	10
0 	1	2	2	3	3	1
Current state: 5
Currently accepting: False

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:11
Done fitting takes time: 0.2107
==Minimized===

This DFA has 6 states
States: ['4', '2', '10', '1', '11', '5']
Alphabet: set(['1', '0'])
Starting state: 5
Accepting states: ['10', '1', '2', '4']
Transition function:
	1	10	11	2	4	5
1 	10	10	11	4	4	10
0 	1	2	11	2	11	1
Current state: 5
Currently accepting: False

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:12
Done fitting takes time: 0.2153
==Minimized===

This DFA has 6 states
States: ['12', '2', '10', '1', '11', '5']
Alphabet: set(['1', '0'])
Starting state: 5
Accepting states: ['10', '12', '1', '2']
Transition function:
	1	10	11	12	2	5
1 	10	10	11	12	12	10
0 	1	2	11	11	2	1
Current state: 5
Currently accepting: False

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:13
Done fitting takes time: 0.1121
==Minimized===

This DFA has 6 states
States: ['12', '2', '10', '1', '11', '5']
Alphabet: set(['1', '0'])
Starting state: 5
Accepting states: ['10', '12', '1', '2']
Transition function:
	1	10	11	12	2	5
1 	10	10	11	12	12	10
0 	1	2	11	11	2	1
Current state: 5
Currently accepting: False

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:14
Done fitting takes time: 0.1087
==Minimized===

This DFA has 6 states
States: ['12', '14', '10', '1', '11', '5']
Alphabet: set(['1', '0'])
Starting state: 5
Accepting states: ['10', '12', '14', '1']
Transition function:
	1	10	11	12	14	5
1 	10	10	11	12	12	10
0 	1	14	11	11	14	1
Current state: 5
Currently accepting: False

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:15
Done fitting takes time: 0.2420
==Minimized===

This DFA has 6 states
States: ['12', '14', '10', '1', '11', '5']
Alphabet: set(['1', '0'])
Starting state: 5
Accepting states: ['10', '12', '14', '1']
Transition function:
	1	10	11	12	14	5
1 	10	10	11	12	12	10
0 	1	14	11	11	14	1
Current state: 5
Currently accepting: False

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:16
Done fitting takes time: 0.1660
==Minimized===

This DFA has 6 states
States: ['12', '14', '10', '1', '11', '5']
Alphabet: set(['1', '0'])
Starting state: 5
Accepting states: ['10', '12', '14', '1']
Transition function:
	1	10	11	12	14	5
1 	10	10	11	12	12	10
0 	1	14	11	11	14	1
Current state: 5
Currently accepting: False

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:17
Done fitting takes time: 0.1444
==Minimized===

This DFA has 6 states
States: ['12', '14', '10', '1', '11', '5']
Alphabet: set(['1', '0'])
Starting state: 5
Accepting states: ['10', '12', '14', '1']
Transition function:
	1	10	11	12	14	5
1 	10	10	11	12	12	10
0 	1	14	11	11	14	1
Current state: 5
Currently accepting: False

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:18
Done fitting takes time: 0.1590
==Minimized===

This DFA has 6 states
States: ['12', '14', '10', '1', '11', '5']
Alphabet: set(['1', '0'])
Starting state: 5
Accepting states: ['10', '12', '14', '1']
Transition function:
	1	10	11	12	14	5
1 	10	10	11	12	12	10
0 	1	14	11	11	14	1
Current state: 5
Currently accepting: False

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:19
Done fitting takes time: 0.1926
==Minimized===

This DFA has 6 states
States: ['12', '14', '10', '1', '11', '5']
Alphabet: set(['1', '0'])
Starting state: 5
Accepting states: ['10', '12', '14', '1']
Transition function:
	1	10	11	12	14	5
1 	10	10	11	12	12	10
0 	1	14	11	11	14	1
Current state: 5
Currently accepting: False

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000
[ 0.          0.          0.17754011  0.52976704  1.          1.          1.
  1.          1.          1.          1.          1.          1.          1.
  1.          1.          1.          1.        ]


[[ 0.          0.59831461  0.12338308  0.13066386  0.77192982  0.77192982
   0.67804878  0.67804878  0.67804878  0.52976704  0.52976704  0.72225417
   0.72225417  0.72225417  0.72225417  0.72225417  1.          1.        ]
 [ 0.          0.          0.59831461  0.          0.          0.          0.
   0.38813152  0.38813152  0.55649577  0.60440098  0.46035088  0.25649623
   0.45460845  0.20997921  0.20997921  0.22512563  0.80317848]
 [ 0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.        ]
 [ 0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.        ]
 [ 0.          0.59831461  0.59831461  0.63338376  0.02549247  0.02549247
   1.          1.          1.          1.          1.          1.          1.
   1.          1.          1.          1.          1.        ]
 [ 0.          0.          0.17754011  0.52976704  1.          1.          1.
   1.          1.          1.          1.          1.          1.          1.
   1.          1.          1.          1.        ]
 [ 0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.        ]
 [ 0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.        ]
 [ 0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.        ]]
