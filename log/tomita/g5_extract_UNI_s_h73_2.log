G:g5, model:UNI sigmoid, load all data and stored hidden activations


--------------------------------------------------------------------
Begin DFA extraction with n_state:2
Done fitting takes time: 1.3844
==Minimized===

This DFA has 1 states
States: ['1']
Alphabet: set(['1', '0'])
Starting state: 1
Accepting states: []
Transition function:
	1
1 	1
0 	1
Current state: 1
Currently accepting: False

Precision: 0.0000 Recall: 0.0000 Accuracy: 0.5097 F1: 0.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:3
Done fitting takes time: 0.6816
==Minimized===

This DFA has 3 states
States: ['1', '3', '2']
Alphabet: set(['1', '0'])
Starting state: 1
Accepting states: ['1']
Transition function:
	1	2	3
1 	3	3	2
0 	3	3	1
Current state: 1
Currently accepting: True

Precision: 0.5109 Recall: 0.5056 Accuracy: 0.5202 F1: 0.5083


--------------------------------------------------------------------
Begin DFA extraction with n_state:4
Done fitting takes time: 1.5732
==Minimized===

This DFA has 4 states
States: ['1', '3', '2', '4']
Alphabet: set(['1', '0'])
Starting state: 1
Accepting states: ['1']
Transition function:
	1	2	3	4
1 	3	4	1	2
0 	3	3	2	1
Current state: 1
Currently accepting: True

Precision: 0.5043 Recall: 0.5018 Accuracy: 0.5139 F1: 0.5031


--------------------------------------------------------------------
Begin DFA extraction with n_state:5
Done fitting takes time: 1.6182
==Minimized===

This DFA has 4 states
States: ['5', '4', '3', '2']
Alphabet: set(['1', '0'])
Starting state: 5
Accepting states: ['5']
Transition function:
	2	3	4	5
1 	4	2	5	4
0 	3	5	2	3
Current state: 5
Currently accepting: True

Precision: 0.4974 Recall: 0.4915 Accuracy: 0.5072 F1: 0.4944


--------------------------------------------------------------------
Begin DFA extraction with n_state:6
Done fitting takes time: 1.8394
==Minimized===

This DFA has 4 states
States: ['5', '6', '3', '2']
Alphabet: set(['1', '0'])
Starting state: 5
Accepting states: ['5']
Transition function:
	2	3	5	6
1 	3	2	6	5
0 	6	5	3	2
Current state: 5
Currently accepting: True

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:7
Done fitting takes time: 1.4308
==Minimized===

This DFA has 4 states
States: ['5', '6', '3', '2']
Alphabet: set(['1', '0'])
Starting state: 5
Accepting states: ['5']
Transition function:
	2	3	5	6
1 	3	2	6	5
0 	6	5	3	2
Current state: 5
Currently accepting: True

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:8
Done fitting takes time: 0.7491
==Minimized===

This DFA has 4 states
States: ['8', '6', '3', '2']
Alphabet: set(['1', '0'])
Starting state: 8
Accepting states: ['8']
Transition function:
	2	3	6	8
1 	3	2	8	6
0 	6	8	2	3
Current state: 8
Currently accepting: True

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:9
Done fitting takes time: 2.0554
==Minimized===

This DFA has 4 states
States: ['1', '6', '3', '2']
Alphabet: set(['1', '0'])
Starting state: 1
Accepting states: ['1']
Transition function:
	1	2	3	6
1 	6	3	2	1
0 	3	6	1	2
Current state: 1
Currently accepting: True

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:10
Done fitting takes time: 2.1428
==Minimized===

This DFA has 4 states
States: ['1', '6', '3', '2']
Alphabet: set(['1', '0'])
Starting state: 1
Accepting states: ['1']
Transition function:
	1	2	3	6
1 	6	3	2	1
0 	3	6	1	2
Current state: 1
Currently accepting: True

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:11
Done fitting takes time: 1.3509
==Minimized===

This DFA has 4 states
States: ['1', '6', '3', '2']
Alphabet: set(['1', '0'])
Starting state: 1
Accepting states: ['1']
Transition function:
	1	2	3	6
1 	6	3	2	1
0 	3	6	1	2
Current state: 1
Currently accepting: True

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:12
Done fitting takes time: 0.8410
==Minimized===

This DFA has 5 states
States: ['1', '6', '5', '12', '3']
Alphabet: set(['1', '0'])
Starting state: 5
Accepting states: ['1']
Transition function:
	1	12	3	5	6
1 	6	3	12	6	1
0 	3	6	1	3	12
Current state: 5
Currently accepting: False

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:13
Done fitting takes time: 0.5723
==Minimized===

This DFA has 5 states
States: ['1', '6', '5', '13', '3']
Alphabet: set(['1', '0'])
Starting state: 5
Accepting states: ['1']
Transition function:
	1	13	3	5	6
1 	6	3	13	6	1
0 	3	6	1	3	13
Current state: 5
Currently accepting: False

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:14
Done fitting takes time: 1.1764
==Minimized===

This DFA has 5 states
States: ['1', '6', '5', '13', '3']
Alphabet: set(['1', '0'])
Starting state: 5
Accepting states: ['1']
Transition function:
	1	13	3	5	6
1 	6	3	13	6	1
0 	3	6	1	3	13
Current state: 5
Currently accepting: False

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:15
Done fitting takes time: 0.6156
==Minimized===

This DFA has 5 states
States: ['1', '6', '5', '13', '3']
Alphabet: set(['1', '0'])
Starting state: 5
Accepting states: ['1']
Transition function:
	1	13	3	5	6
1 	6	3	13	6	1
0 	3	6	1	3	13
Current state: 5
Currently accepting: False

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:16
Done fitting takes time: 1.7506
==Minimized===

This DFA has 5 states
States: ['1', '6', '5', '13', '3']
Alphabet: set(['1', '0'])
Starting state: 5
Accepting states: ['1']
Transition function:
	1	13	3	5	6
1 	6	3	13	6	1
0 	3	6	1	3	13
Current state: 5
Currently accepting: False

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:17
Done fitting takes time: 1.4254
==Minimized===

This DFA has 5 states
States: ['10', '6', '5', '13', '3']
Alphabet: set(['1', '0'])
Starting state: 5
Accepting states: ['10']
Transition function:
	10	13	3	5	6
1 	6	3	13	6	10
0 	3	6	10	3	13
Current state: 5
Currently accepting: False

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:18
Done fitting takes time: 1.3471
==Minimized===

This DFA has 5 states
States: ['10', '6', '5', '13', '3']
Alphabet: set(['1', '0'])
Starting state: 5
Accepting states: ['10']
Transition function:
	10	13	3	5	6
1 	6	3	13	6	10
0 	3	6	10	3	13
Current state: 5
Currently accepting: False

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:19
Done fitting takes time: 1.6602
==Minimized===

This DFA has 5 states
States: ['10', '6', '5', '13', '3']
Alphabet: set(['1', '0'])
Starting state: 5
Accepting states: ['10']
Transition function:
	10	13	3	5	6
1 	6	3	13	6	10
0 	3	6	10	3	13
Current state: 5
Currently accepting: False

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000
[ 0.          0.50826596  0.50306896  0.49444444  1.          1.          1.
  1.          1.          1.          1.          1.          1.          1.
  1.          1.          1.          1.        ]


[[ 0.          0.          0.67020677  0.67020677  0.67020677  0.67020677
   0.67020677  0.67020677  0.67020677  0.67020677  0.67020677  0.45376599
   0.67020677  0.59414955  0.49560976  0.3646007   0.18867925  0.3616531 ]
 [ 0.          0.          0.          0.          0.          0.          0.
   0.06091825  0.          0.          0.25389917  0.12396007  0.11009174
   0.17197075  0.45471301  0.24001452  0.          0.37546635]
 [ 0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.        ]
 [ 0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.        ]
 [ 0.          0.50826596  0.50306896  0.49444444  1.          1.          1.
   1.          1.          1.          1.          1.          1.          1.
   1.          1.          1.          1.        ]
 [ 0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.        ]
 [ 0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.        ]
 [ 0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.        ]
 [ 0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.        ]]
