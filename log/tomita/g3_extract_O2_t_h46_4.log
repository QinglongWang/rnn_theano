G:g3, model:O2 tanh, load all data and stored hidden activations


--------------------------------------------------------------------
Begin DFA extraction with n_state:2
Done fitting takes time: 0.4744
==Minimized===

This DFA has 1 states
States: ['2']
Alphabet: set(['1', '0'])
Starting state: 2
Accepting states: []
Transition function:
	2
1 	2
0 	2
Current state: 2
Currently accepting: False

Precision: 0.0000 Recall: 0.0000 Accuracy: 0.5422 F1: 0.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:3
Done fitting takes time: 0.1831
==Minimized===

This DFA has 3 states
States: ['1', '3', '2']
Alphabet: set(['1', '0'])
Starting state: 2
Accepting states: ['3', '2']
Transition function:
	1	2	3
1 	1	3	2
0 	1	2	1
Current state: 2
Currently accepting: True

Precision: 1.0000 Recall: 0.4695 Accuracy: 0.7572 F1: 0.6390


--------------------------------------------------------------------
Begin DFA extraction with n_state:4
Done fitting takes time: 0.4332
==Minimized===

This DFA has 3 states
States: ['1', '2', '4']
Alphabet: set(['1', '0'])
Starting state: 2
Accepting states: ['2', '4']
Transition function:
	1	2	4
1 	1	4	2
0 	1	2	1
Current state: 2
Currently accepting: True

Precision: 1.0000 Recall: 0.4695 Accuracy: 0.7572 F1: 0.6390


--------------------------------------------------------------------
Begin DFA extraction with n_state:5
Done fitting takes time: 0.2147
==Minimized===

This DFA has 3 states
States: ['3', '1', '5']
Alphabet: set(['1', '0'])
Starting state: 5
Accepting states: ['3']
Transition function:
	1	3	5
1 	1	3	1
0 	1	5	3
Current state: 5
Currently accepting: False

Precision: 1.0000 Recall: 0.1820 Accuracy: 0.6256 F1: 0.3080


--------------------------------------------------------------------
Begin DFA extraction with n_state:6
Done fitting takes time: 0.2053
==Minimized===

This DFA has 6 states
States: ['2', '3', '4', '5', '1', '6']
Alphabet: set(['1', '0'])
Starting state: 5
Accepting states: ['3', '2', '4']
Transition function:
	1	2	3	4	5	6
1 	1	4	3	2	4	1
0 	1	2	6	6	2	3
Current state: 5
Currently accepting: False

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:7
Done fitting takes time: 0.2425
==Minimized===

This DFA has 6 states
States: ['2', '3', '4', '5', '1', '6']
Alphabet: set(['1', '0'])
Starting state: 5
Accepting states: ['3', '2', '4']
Transition function:
	1	2	3	4	5	6
1 	1	4	3	2	4	1
0 	1	2	6	6	2	3
Current state: 5
Currently accepting: False

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:8
Done fitting takes time: 0.2179
==Minimized===

This DFA has 6 states
States: ['2', '8', '3', '5', '1', '6']
Alphabet: set(['1', '0'])
Starting state: 5
Accepting states: ['8', '3', '2']
Transition function:
	1	2	3	5	6	8
1 	1	8	3	8	1	2
0 	1	2	6	2	3	6
Current state: 5
Currently accepting: False

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:9
Done fitting takes time: 0.2391
==Minimized===

This DFA has 6 states
States: ['9', '8', '3', '5', '1', '6']
Alphabet: set(['1', '0'])
Starting state: 5
Accepting states: ['9', '8', '3']
Transition function:
	1	3	5	6	8	9
1 	1	3	8	1	9	8
0 	1	6	9	3	6	9
Current state: 5
Currently accepting: False

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:10
Done fitting takes time: 0.2227
==Minimized===

This DFA has 6 states
States: ['2', '10', '4', '5', '1', '6']
Alphabet: set(['1', '0'])
Starting state: 5
Accepting states: ['10', '2', '4']
Transition function:
	1	10	2	4	5	6
1 	1	10	4	2	4	1
0 	1	6	2	6	2	10
Current state: 5
Currently accepting: False

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:11
Done fitting takes time: 0.2200
==Minimized===

This DFA has 6 states
States: ['2', '11', '10', '5', '1', '6']
Alphabet: set(['1', '0'])
Starting state: 5
Accepting states: ['11', '10', '2']
Transition function:
	1	10	11	2	5	6
1 	1	10	2	11	11	1
0 	1	6	6	2	2	10
Current state: 5
Currently accepting: False

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:12
Done fitting takes time: 0.2175
==Minimized===

This DFA has 6 states
States: ['12', '11', '10', '5', '1', '6']
Alphabet: set(['1', '0'])
Starting state: 5
Accepting states: ['11', '10', '12']
Transition function:
	1	10	11	12	5	6
1 	1	10	12	11	11	1
0 	1	6	6	12	12	10
Current state: 5
Currently accepting: False

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:13
Done fitting takes time: 0.2328
==Minimized===

This DFA has 6 states
States: ['12', '11', '10', '5', '1', '6']
Alphabet: set(['1', '0'])
Starting state: 5
Accepting states: ['11', '10', '12']
Transition function:
	1	10	11	12	5	6
1 	1	10	12	11	11	1
0 	1	6	6	12	12	10
Current state: 5
Currently accepting: False

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:14
Done fitting takes time: 0.3433
==Minimized===

This DFA has 6 states
States: ['12', '11', '10', '5', '1', '6']
Alphabet: set(['1', '0'])
Starting state: 5
Accepting states: ['11', '10', '12']
Transition function:
	1	10	11	12	5	6
1 	1	10	12	11	11	1
0 	1	6	6	12	12	10
Current state: 5
Currently accepting: False

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:15
Done fitting takes time: 0.6947
==Minimized===

This DFA has 6 states
States: ['12', '11', '10', '5', '15', '6']
Alphabet: set(['1', '0'])
Starting state: 5
Accepting states: ['11', '10', '12']
Transition function:
	10	11	12	15	5	6
1 	10	12	11	15	11	15
0 	6	6	12	15	12	10
Current state: 5
Currently accepting: False

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:16
Done fitting takes time: 0.5485
==Minimized===

This DFA has 6 states
States: ['12', '11', '10', '5', '15', '6']
Alphabet: set(['1', '0'])
Starting state: 5
Accepting states: ['11', '10', '12']
Transition function:
	10	11	12	15	5	6
1 	10	12	11	15	11	15
0 	6	6	12	15	12	10
Current state: 5
Currently accepting: False

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:17
Done fitting takes time: 0.6309
==Minimized===

This DFA has 6 states
States: ['12', '11', '10', '5', '15', '17']
Alphabet: set(['1', '0'])
Starting state: 5
Accepting states: ['11', '10', '12']
Transition function:
	10	11	12	15	17	5
1 	10	12	11	15	15	11
0 	17	17	12	15	10	12
Current state: 5
Currently accepting: False

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:18
Done fitting takes time: 0.5974
==Minimized===

This DFA has 6 states
States: ['12', '11', '10', '5', '15', '17']
Alphabet: set(['1', '0'])
Starting state: 5
Accepting states: ['11', '10', '12']
Transition function:
	10	11	12	15	17	5
1 	10	12	11	15	15	11
0 	17	17	12	15	10	12
Current state: 5
Currently accepting: False

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000


--------------------------------------------------------------------
Begin DFA extraction with n_state:19
Done fitting takes time: 0.2421
==Minimized===

This DFA has 6 states
States: ['12', '11', '10', '5', '15', '17']
Alphabet: set(['1', '0'])
Starting state: 5
Accepting states: ['11', '10', '12']
Transition function:
	10	11	12	15	17	5
1 	10	12	11	15	15	11
0 	17	17	12	15	10	12
Current state: 5
Currently accepting: False

Precision: 1.0000 Recall: 1.0000 Accuracy: 1.0000 F1: 1.0000
[ 0.          0.63898421  0.63898421  0.30802048  1.          1.          1.
  1.          1.          1.          1.          1.          1.          1.
  1.          1.          1.          1.        ]


[[ 0.          0.          0.6280285   0.6280285   0.6280285   0.6280285
   0.85577649  1.          1.          1.          0.96145455  0.96145455
   0.96145455  0.96145455  0.96145455  0.97853442  0.98216939  0.98216939]
 [ 0.          0.43092666  0.0110331   0.42089015  0.          0.52206495
   0.4691169   0.5234474   0.6280285   0.52057613  0.32884283  0.54948646
   0.52271386  0.41098546  0.55963303  0.63267974  0.57132312  0.55898367]
 [ 0.01203008  0.0110331   0.45920746  0.45920746  1.          1.          1.
   1.          1.          1.          1.          1.          1.          1.
   1.          1.          1.          1.        ]
 [ 0.          0.63898421  0.63898421  0.30802048  1.          1.          1.
   1.          1.          1.          1.          1.          1.          1.
   1.          1.          1.          1.        ]
 [ 0.6280285   0.13833226  0.45920746  0.45920746  0.45920746  0.45920746
   0.45920746  0.45920746  0.45920746  0.45920746  0.45920746  0.45920746
   1.          1.          1.          1.          1.          1.        ]
 [ 0.          0.63898421  0.63898421  1.          1.          1.          1.
   1.          1.          1.          1.          1.          1.          1.
   1.          1.          1.          1.        ]
 [ 0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.        ]
 [ 0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.        ]
 [ 0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.        ]]
